{"version":3,"sources":["vs/server/fake","vs/server/vs/base/common/performance.js","vs/server/vs/base/node/languagePacks.js","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/assert.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/decorators.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/errors.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/arrays.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/functional.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/iterator.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/json.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/lifecycle.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/linkedList.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/event.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/cancellation.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/async.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/platform.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/process.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/path.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/stream.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/strings.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/buffer.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/severity.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/types.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/extpath.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/objects.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/uri.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/amd.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/console.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/marshalling.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/network.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/map.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/glob.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/normalization.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/resources.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/labels.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/uriIpc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/uuid.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/decoder.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/macAddress.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/id.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/paths.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/pfs.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/extpath.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/watcher.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/parts/ipc/common/ipc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/parts/ipc/common/ipc.net.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/parts/ipc/node/ipc.net.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/date.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/errorMessage.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/jsonErrorMessages.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/processes.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/parts/ipc/node/ipc.cp.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/debug/common/extensionHostDebugIpc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagementIpc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/common/extensionNls.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensions/common/extensionValidator.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/nsfw/watcherIpc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/nsfw/watcherService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/unix/watcherIpc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/unix/watcherService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/win32/csharpWatcherService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/win32/watcherService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/instantiation/common/descriptors.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/instantiation/common/graph.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/instantiation/common/instantiation.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/download/common/download.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/environment/common/environment.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/code/electron-browser/sharedProcess/contrib/logsDataCleaner.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagement.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensions/common/extensions.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagementUtil.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionsManifestCache.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/common/files.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/common/io.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/watcher.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/nodejs/watcherService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/instantiation/common/serviceCollection.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/instantiation/common/instantiationService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/localizations/common/localizations.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/log/common/log.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionDownloader.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionLifecycle.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/common/fileService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/diskFileSystemProvider.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/localizations/node/localizations.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/log/common/logIpc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/log/node/spdlogService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/notification/common/notification.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/product/common/product.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/environment/node/environmentService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/product/common/productService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/registry/common/platform.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/jsonschemas/common/jsonContributionRegistry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/configuration/common/configurationRegistry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/configuration/common/configuration.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/configuration/common/configurationModels.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/configuration/common/configurationService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/request/common/request.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/request/common/requestIpc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/request/node/proxy.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/serviceMachineId/common/serviceMachineId.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/state/node/state.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/state/node/stateService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/storage/common/storage.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/common/errorTelemetry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/browser/errorTelemetry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/common/telemetry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/common/extensionGalleryService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/common/telemetryService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/common/telemetryUtils.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/node/appInsightsAppender.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/node/commonProperties.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/node/telemetry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/common/nodeProxy.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/common/telemetry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/insights.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/logger.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/nls.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/connection.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/protocol.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/util.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/services/extensions/common/extensionPoints.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/services/extensions/node/extensionPoints.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/channel.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentFileSystemChannel.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/zip.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionManagementUtil.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionsScanner.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionManagementService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/marketplace.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/request/node/requestService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/code/node/cliProcessMain.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/server.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/entry.ts"],"names":["sharedObj","__m","__M","deps","result","i","len","length","_factory","MonacoPerformanceMarks","_dataLen","_timeStamp","console","timeStamp","bind","mark","name","push","Date","now","getEntries","entries","startTime","getDuration","from","to","target","endIndex","importEntries","splice","exportEntries","slice","factory","nodeRequire","path","fs","perf","exists","file","Promise","c","rimraf","location","e","lstat","err","stats","then","stat","isDirectory","isSymbolicLink","dir","readdir","files","children","all","map","child","join","rmdir","undefined","unlink","code","readFile","resolve","reject","data","writeFile","content","getNLSConfiguration","commit","userDataPath","metaDataFile","locale","availableLanguages","pseudo","process","env","initialLocale","defaultResult","configs","configFile","JSON","parse","readFileSync","getLanguagePackConfigurations","config","index","lastIndexOf","substring","error","resolveLanguagePackLocale","packConfig","mainPack","hash","translations","fileExists","packId","cacheRoot","coreLocation","translationsConfigFile","corruptedFile","*","_languagePackId","_translationsConfigFile","_cacheRoot","_resolvedLanguagePackCoreLocation","_corruptedFile","corrupted","toDelete","d","utimes","touch","catch","mkdir","recursive","mkdirp","values","metadata","packData","contents","bundles","Object","keys","writes","bundle","modules","create","module","defaultMessages","messages","targetStrings","elem","translatedMessage","key","replace","stringify","exports","ok","value","message","Error","createDecorator","mapFn","descriptor","fnKey","fn","get","memoizeId","createMemoizer","memoizeKeyPrefix","self","warn","memoizeKey","args","this","hasOwnProperty","defineProperty","configurable","enumerable","writable","apply","clear","getOwnPropertyNames","forEach","property","indexOf","memoize","debounce","delay","reducer","initialValueProvider","timerKey","resultKey","clearTimeout","setTimeout","throttle","lastRunKey","pendingKey","Number","MAX_VALUE","nextTime","ErrorHandler","[object Object]","listeners","unexpectedErrorHandler","stack","listener","_removeListener","newUnexpectedErrorHandler","emit","errorHandler","setUnexpectedErrorHandler","onUnexpectedError","isPromiseCanceledError","onUnexpectedExternalError","transformErrorForSerialization","$isError","stacktrace","canceledName","canceled","illegalArgument","illegalState","readonly","disposed","what","getErrorMessage","split","String","NotImplementedError","super","NotSupportedError","findFirstInSorted","array","p","low","high","mid","Math","floor","mergeSort","compare","_sort","a","lo","hi","aux","leftIdx","rightIdx","_merge","sortedDiff","before","after","pushSplice","start","deleteCount","toInsert","latest","beforeIdx","afterIdx","beforeElement","afterElement","n","topStep","m","element","pop","j","firstIndex","remove","tail","tail2","arr","equals","one","other","itemEquals","b","binarySearch","comparator","comp","groupBy","currentGroup","delta","splices","removed","added","top","sort","topAsync","batch","token","o","min","isCancellationRequested","errors_1","coalesce","filter","coalesceInPlace","move","isFalsyOrEmpty","obj","Array","isArray","isNonEmptyArray","distinct","keyFn","position","seen","distinctES6","Set","has","add","uniqueFilter","lastIndex","first","notFoundValue","firstOrDefault","commonPrefixLength","flatten","concat","range","arg","indexer","mapper","reduce","r","t","insert","arrayInsert","insertIndex","insertArr","shuffle","_seed","rand","seed","x","sin","random","temp","pushToStart","unshift","pushToEnd","find","predicate","mapArrayOrNot","items","asArray","toArray","iterable","getRandomElement","once","_this","didCall","arguments","Iterable","is","thing","Symbol","iterator","_empty","freeze","empty","single","next","some","iterables","consume","atMost","POSITIVE_INFINITY","consumed","done","ParseOptions","CharacterCodes","createScanner","text","ignoreTrivia","pos","tokenOffset","scanError","scanHexDigits","count","digits","hexValue","ch","charCodeAt","scanNext","isWhitespace","fromCharCode","isLineBreak","ch3","scanString","safeLength","commentClosed","isDigit","end","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","contains","node","offset","includeRightBound","visit","visitor","options","DEFAULT","_scanner","toNoArgVisit","visitFunction","toOneArgVisit","onObjectBegin","onObjectProperty","onObjectEnd","onArrayBegin","onArrayEnd","onLiteralValue","onSeparator","onComment","onError","disallowComments","allowTrailingComma","handleError","skipUntilAfter","skipUntil","parseString","isValue","parseValue","needsComma","parseArray","parseObject","parseLiteral","allowEmptyContent","getNodeType","ScanError","SyntaxKind","ParseErrorCode","getLocation","segments","earlyReturnException","previousNode","previousNodeInst","type","parent","isAtPropertyKey","setPreviousNode","colonOffset","sep","last","matches","pattern","k","errors","currentProperty","currentParent","previousParents","onValue","object","parseTree","ensurePropertyComplete","endOffset","valueNode","findNodeAtLocation","root","segment","found","propertyNode","getNodePath","getNodeValue","prop","findNodeAtOffset","item","stripComments","replaceCh","kind","parts","TRACK_DISPOSABLES","__is_disposable_tracked__","markTracked","Disposable","None","_a","trackDisposable","log","dispose","iterator_1","isDisposable","combinedDisposable","disposables","toDisposable","DisposableStore","_toDispose","_isDisposed","DISABLE_DISPOSED_WARNING","_store","MutableDisposable","_value","ReferenceCollection","references","Map","reference","counter","createReferencedObject","set","functional_1","destroyReferencedObject","delete","ImmortalReference","Node","Undefined","prev","LinkedList","_first","_last","_size","size","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","res","anchor","Event","event","thisArgs","didFire","call","snapshot","each","merge","initial","output","emitter","Emitter","fire","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","_output","latch","cache","firstCall","shouldEmit","lifecycle_1","signal","any","events","stopwatch","getTime","_","buffer","nextTick","_buffer","flush","ChainableEvent","chain","fromNodeEventEmitter","eventName","id","onFirstListenerAdd","on","onLastListenerRemove","removeListener","fromDOMEventEmitter","addEventListener","removeEventListener","fromPromise","promise","toPromise","_globalLeakWarningThreshold","setGlobalLeakWarningThreshold","oldValue","LeakageMonitor","customThreshold","toString","_warnCountdown","_stacks","listenerCount","threshold","topStack","topCount","_disposed","_options","_leakageMon","_event","_listeners","linkedList_1","firstListener","isEmpty","removeMonitor","onFirstListenerDidAdd","onListenerDidAdd","check","_noop","_deliveryQueue","shift","PauseableEmitter","_isPaused","_eventQueue","_mergeFn","AsyncEmitter","promiseJoin","_asyncDeliveryQueue","thenables","assign","waitUntil","isFrozen","EventMultiplexer","hasListeners","hook","unhook","idx","EventBufferer","buffers","Relay","listening","inputEvent","inputEventListener","input","shortcutEvent","callback","context","CancellationToken","isCancellationToken","Cancelled","MutableToken","onCancellationRequested","event_1","_isCancelled","_emitter","CancellationTokenSource","_token","_parentListener","cancel","isThenable","createCancelablePromise","source","cancellation_1","thenable","onfinally","finally","raceCancellation","defaultValue","race","raceTimeout","timeout","onTimeout","promiseResolve","timer","asPromise","Throttler","activePromise","queuedPromise","queuedPromiseFactory","promiseFactory","onComplete","queue","Sequencer","current","promiseTask","Delayer","defaultDelay","completionPromise","doResolve","doReject","task","cancelTimeout","ThrottledDelayer","delayer","throttler","trigger","isTriggered","millis","Barrier","_isOpen","_promise","_completePromise","disposableTimeout","handler","ignoreErrors","sequence","promiseFactories","results","thenHandler","shouldStop","loop","Limiter","maxDegreeOfParalellism","outstandingPromises","runningPromises","_onFinished","onFinished","iLimitedTask","Queue","ResourceQueue","queues","resource","TimeoutTimer","runner","setIfNotSet","IntervalTimer","clearInterval","interval","setInterval","RunOnceScheduler","timeoutToken","timeoutHandler","isScheduled","doRun","RunOnceWorker","units","unit","schedule","requestIdleCallback","cancelIdleCallback","dummyIdle","didTimeout","timeRemaining","runWhenIdle","IdleValue","executor","_didRun","_executor","_error","_handle","retry","async","retries","lastError","TaskSequentializer","taskId","_pending","pending","onCancel","donePending","triggerNext","_next","run","promiseReject","global","define","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_isIOS","_locale","_language","_userAgent","isElectronRenderer","versions","electron","navigator","platform","rawNlsConfig","nlsConfig","resolved","userAgent","maxTouchPoints","language","el","document","getElementById","getAttribute","Platform","PlatformToString","_platform","isWindows","isMacintosh","isLinux","isNative","isWeb","isIOS","isRootUser","getuid","Language","isDefaultVariant","isDefault","_globals","globals","setImmediate","postMessage","importScripts","vscodeSetImmediateId","candidate","lastId","myId","OperatingSystem","OS","_isLittleEndian","_isLittleEndianComputed","isLittleEndian","test","Uint8Array","view","Uint16Array","safeProcess","cwd","platform_1","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","ErrorInvalidArgType","expected","actual","determiner","msg","validateString","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","_format","pathObject","base","ext","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","rootEnd","device","isAbsolute","firstPart","paths","joined","needsReplace","slashCount","firstLen","normalize","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","resolvedPath","matchedSlash","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","format","ret","delimiter","posix","trailingSeparator","toNamespacedPath","hasRoot","relative","dirname","basename","extname","isReadableStream","pause","resume","destroy","every","newWriteableStream","WriteableStreamImpl","isReadableBufferedStream","stream","ended","state","flowing","destroyed","pendingWritePromises","flowData","flowErrors","flowEnd","highWaterMark","write","fullDataBuffer","pendingWritePromise","consumeReadable","readable","chunks","chunk","read","peekReadable","maxChunks","lastReadChunk","consumeStream","peekStream","streamListeners","dataListener","errorListener","endListener","toStream","toReadable","transform","transformer","isFalsyOrWhitespace","str","trim","pad","l","char","reverse","_formatRegexp","escapeRegExpCharacters","ltrim","haystack","needle","needleLen","rtrim","haystackLen","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareSubstringIgnoreCase","diff","isUpperAsciiLetter","isLowerAsciiLetter","isAsciiLetter","doEqualsIgnoreCase","stopAt","abs","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","nextCharCode","getPrevCodePoint","prevCharCode","_getCharContainingOffset","graphemeBreakTree","GraphemeBreakTree","getInstance","initialOffset","initialCodePoint","initialGraphemeBreakType","getGraphemeBreakType","graphemeBreakType","nextCodePoint","nextGraphemeBreakType","breakBetweenGraphemeBreakType","prevCodePoint","prevGraphemeBreakType","match","group","parseInt","isNaN","escape","html","convertSimple2RegExpPattern","stripWildcards","startsWith","endsWith","createRegExp","searchString","isRegex","wholeWord","charAt","modifiers","matchCase","multiline","unicode","RegExp","regExpLeadsToEndlessLoop","regexp","exec","regExpContainsBackreference","regexpValue","regExpFlags","ignoreCase","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","compareIgnoreCase","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","commonSuffixLength","aLastIndex","bLastIndex","nextCharLength","prevCharLength","getCharContainingOffset","encodeUTF8","strLen","neededSize","strOffset","codePoint","arrOffset","decodeUTF8","byteLength","v0","uPrime","w1","w2","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isFullWidthCharacter","isBasicASCII","UNUSUAL_LINE_TERMINATORS","containsUnusualLineTerminators","containsFullWidthCharacter","isEmojiImprecise","lcut","re","EL","COLOR_START","COLOR_END","startsWithUTF8BOM","breakTypeA","breakTypeB","removeAnsiEscapeCodes","UTF8_BOM_CHARACTER","stripUTF8BOM","substr","safeBtoa","btoa","encodeURIComponent","repeat","s","fuzzyContains","query","queryLen","targetLower","containsUppercaseCharacter","ignoreEscapedChars","uppercaseFirstLetter","toUpperCase","getNLines","singleLetterHash","GraphemeBreakType","_data","_INSTANCE","nodeCount","nodeIndex","hasBuffer","Buffer","hasTextEncoder","TextEncoder","hasTextDecoder","TextDecoder","textEncoder","textDecoder","VSBuffer","allocUnsafe","isBuffer","byteOffset","encode","strings","totalLength","alloc","decode","subarray","readUInt32BE","writeUInt32BE","readUInt32LE","writeUInt32LE","readUInt8","writeUInt8","destination","streamToBuffer","streams","readUInt16LE","writeUInt16LE","readableToBuffer","bufferToReadable","bufferedStreamToBuffer","bufferedStream","bufferToStream","streamToBufferReadableStream","fromString","wrap","newWriteableBufferStream","Severity","_warning","_warn","_info","fromValue","Warning","Info","Ignore","default","isString","isObject","isUndefined","isUndefinedOrNull","isStringArray","isNumber","isBoolean","isDefined","assertType","condition","assertIsDefined","assertAllDefined","prototype","isFunction","validateConstraint","constraint","constructor","getAllPropertyNames","proto","getPrototypeOf","isEmptyObject","areFunctions","objects","validateConstraints","constraints","getAllMethodNames","methods","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","withNullAsUndefined","withUndefinedAsNull","NotImplementedProxy","Proxy","toSlashes","osPath","path_1","getRoot","firstLetter","isWindowsDriveLetter","isUNC","WINDOWS_INVALID_FILE_CHARS","UNIX_INVALID_FILE_CHARS","WINDOWS_FORBIDDEN_NAMES","char0","isValidBasename","isWindowsOS","invalidFileChars","isEqual","pathA","pathB","identityEquals","strings_1","isEqualOrParent","sepOffset","sanitizeFilePath","isRootOrDriveLetter","pathNormalized","indexOfPath","parseLineAndColumnAware","rawPath","line","column","segmentAsNumber","types_1","deepClone","deepFreeze","_hasOwnProperty","oneKeys","otherKeys","cloneAndChange","changer","_cloneAndChange","changed","r1","r2","i2","mixin","overwrite","sources","safeStringify","getOrDefault","baseValue","targetValue","_schemePattern","_singleSlashStart","_doubleSlashStart","_slash","_regexp","URI","schemeOrData","authority","fragment","_strict","scheme","_schemeFix","_referenceResolution","_validateUri","fsPath","with","uriToFsPath","change","Uri","percentDecode","components","uri","pathFragment","newPath","skipEncoding","_asFormatted","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","58","47","63","35","91","93","64","33","36","38","39","40","41","42","43","44","59","61","32","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","_rEncodedAsHex","decodeURIComponentGraceful","decodeURIComponent","getUriFromAmdModule","requirefn","relativePath","uri_1","toUrl","getPathFromAmdModule","entry","parsedArguments","stackArgument","__$stack","findFirstFrame","newlineIndex","color","isRemoteConsoleLog","severity","getFirstFrame","arg0","topFrame","label","isOneStringArg","consoleArgs","replacer","flags","revive","depth","buffer_1","Schemas","inMemory","vscode","internal","walkThrough","walkThroughSnippet","http","https","mailto","untitled","command","vscodeRemote","vscodeRemoteResource","userData","vscodeCustomEditor","vscodeNotebook","vscodeSettings","webviewPanel","vscodeWebview","vscodeWebviewResource","extension","RemoteAuthorities","_hosts","_ports","_connectionTokens","_preferredWebSchema","_delegate","schema","delegate","host","port","connectionToken","window","pathname","getOrSet","mapToString","setToString","StringIterator","_pos","PathIterator","_splitOnBackslash","_caseSensitive","_from","_to","justSeps","UriIteratorState","UriIterator","_states","_stateIdx","caseSensitive","network_1","_pathIterator","reset","hasNext","cmp","TernarySearchTreeNode","left","right","TernarySearchTree","_iter","_root","iter","val","oldElement","_nodeIterator","_forEach","ResourceMap","mapOrKeyFn","toKey","toStringTag","defaultToKey","clb","thisArg","tuple","Touch","LinkedMap","_map","_head","_tail","_state","previous","addItemLast","addItemFirst","removeItem","callbackfn","newSize","currentSize","LRUCache","limit","ratio","_limit","_ratio","max","checkTrim","trimOld","round","getEmptyExpression","GLOBSTAR","GLOB_SPLIT","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","splitGlobAware","splitChar","inBraces","inBrackets","curVal","T1","T2","T3","T3_2","T4","T5","CACHE","map_1","FALSE","NULL","parsePattern","arg1","patternKey","trimForExclusions","parsedPattern","wrapRelativePattern","originalPattern","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","parsedPatterns","aggregateBasenameMatches","withBasenames","arrays","allPaths","trivia3","trivia4and5","regExp","parseRegExp","regEx","previousSegmentWasGlobStar","braceVal","bracketVal","braceRegExp","toRegExp","arg2","extpath","matchPathEnds","nativePath","nativePathEnd","isRelativePattern","resultPattern","expression","when","hasSibling","matched","async_1","requiresSiblings","parseExpressionPattern","resultExpression","parsedExpression","listToMap","list","rp","basenamePatterns","aggregate","aggregatedPatterns","hasSiblingPromiseFn","siblingsFn","siblings","hasSiblingFn","getBasenameTerms","patternOrExpression","getPathTerms","canNormalize","nfcCache","normalizeNFC","nfdCache","normalizeNFD","nonAsciiCharactersPattern","form","normalizedCache","cached","removeAccents","regex","originalFSPath","ExtUri","_ignorePathCasing","uri1","uri2","ignoreFragment","getComparisonKey","parentCandidate","isEqualAuthority","joinPath","normalizedPath","fromPath","toPath","newURI","a1","a2","fsp","hasTrailingPathSeparator","isRootSep","extUri","extUriBiasedIgnorePathCase","extUriIgnorePathCase","basenameOrAuthority","normalizePath","resolvePath","isAbsolutePath","removeTrailingPathSeparator","addTrailingPathSeparator","distinctParents","resourceAccessor","candidateResource","otherItem","DataUri","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","mime","ResourceGlobMatcher","globalExpression","rootExpressions","expressionsByRoot","forUris","glob_1","rootExpression","findSubstr","toLocalResource","hasDriveLetter","normalizeDriveLetter","getPathLabel","userHomeProvider","rootProvider","baseResource","getWorkspaceFolder","hasMultipleRoots","getWorkspace","folders","pathLabel","resources_1","rootName","userHome","tildify","getBaseLabel","normalizedUserHomeCached","normalizedUserHome","original","normalized","untildify","ellipsis","unc","home","Type","shorten","pathSeparator","shortenedPaths","pathIndex","prefix","subpathLength","subpath","otherPathIndex","isSubpathEnding","subpathWithSep","isOtherPathEnding","template","inVariable","TEXT","VARIABLE","prevSegment","SEPARATOR","mnemonicMenuLabel","forceDisableMnemonics","mnemonicButtonLabel","unmnemonicLabel","splitName","fullPath","parentPath","toJSON","_transformIncomingURIs","transformIncoming","URITransformer","remoteAuthority","DefaultURITransformer","transformOutgoingURIs","_transformOutgoingURIs","transformOutgoing","transformIncomingURIs","transformAndReviveIncomingURIs","_UUIDPattern","isUUID","_hex","padStart","_fillRandomValues","bucket","generateUuid","LineDecoder","encoding","stringDecoder","sd","StringDecoder","remaining","lastChar","require","__$__nodeRequire","cmdline","windows","unix","invalidMacAddresses","validateMacAddress","tempCandidate","getMac","child_process_1","stdout","stdin","macAddressCandidate","machineId","virtualMachineHint","mac","_virtualMachineOUIs","forStrings","vmOui","interfaceCount","interfaces","os_1","networkInterfaces","_isVirtualMachineMacAdress","getMachineId","crypto","resolve_1","reject_1","macAddress","macAddress_1","createHash","update","digest","getMacMachineId","uuid","pathsPath","amd_1","getAppDataPath","getDefaultUserDataPath","RimRafMode","mode","UNLINK","extpath_1","rimrafUnlink","pathInTemp","os","tmpdir","uuid_1","rename","rimrafMove","chmod","util_1","promisify","handleDirectoryChildren","readdirSync","normalization_1","oldPath","MAX_FILE_SIZE","arch","MAX_HEAP_SIZE","rimrafSync","lstatSync","chmodSync","unlinkSync","rmdirSync","readdirWithFileTypes","withFileTypes","statLink","lstats","symbolicLink","dangling","renameIgnoreError","symlink","truncate","writeFilePathQueues","queueKey","existingWriteFileQueue","writeFileQueue","onFinish","ensureWriteFileQueue","toQueueKey","ensuredOptions","ensureWriteOptions","canFlush","flag","open","openError","fd","writeError","close","fdatasync","syncError","closeError","doWriteFileAndFlush","dirExists","copy","copiedSourcesIn","copiedSources","fileStat","reader","createReadStream","writer","createWriteStream","finished","finish","pipe","doCopyFile","writeFileSync","openSync","fdatasyncSync","closeSync","readDirsInDir","dirPath","directories","isFile","whenDeleted","running","updateMtime","futimes","atime","MOVE","realcaseSync","pfs_1","ix","realpath","access","constants","R_OK","realpathSync","accessSync","doWatchNonRecursive","onChange","originalFileName","mapPathToStatDisposable","watcherDisposables","disposable","watcher","fs_1","watch","removeAllListeners","folderChildren","raw","changedFileName","changedFilePath","statDisposable","timeoutHandle","CHANGE_BUFFER_DELAY","watchFile","watchFolder","State","DataType","requestTypeToStr","responseTypeToStr","RequestType","ResponseType","BufferReader","bytes","BufferWriter","createSizeBuffer","readSizeBuffer","createOneByteBuffer","BufferPresets","serialize","deserialize","ChannelServer","protocol","ctx","logger","timeoutDelay","channels","activeRequests","pendingRequests","protocolListener","onMessage","onRawMessage","sendResponse","channelName","channel","flushPendingRequests","response","msgLength","send","logOutgoing","header","body","sendBuffer","logIncoming","onPromise","onEventListen","disposeActiveRequest","request","collectPendingRequest","cancellationTokenSource","listen","timeoutTimer","requests","RequestInitiator","ChannelClient","Uninitialized","handlers","lastRequestId","_onDidInitialize","onDidInitialize","onBuffer","that","cancellationToken","requestPromise","requestEvent","doRequest","sendRequest","uninitializedPromise","Idle","whenInitialized","cancellationTokenListener","onResponse","IPCServer","onDidClientConnect","_connections","_onDidAddConnection","onDidAddConnection","_onDidRemoveConnection","onDidRemoveConnection","onDidClientDisconnect","onFirstMessage","channelServer","channelClient","registerChannel","connection","connections","routerOrClientFilter","connectionPromise","arrays_1","routeCall","getDelayedChannel","getChannel","getMulticastEvent","routeEvent","clientFilter","eventMultiplexer","relay","IPCClient","ipcLogger","getNextTickChannel","didTick","propertyIsEvent","StaticRouter","hub","route","createChannelReceiver","service","disableMarshalling","mapEventNameToEvent","eventImpl","marshalling_1","createChannelSender","_target","propKey","properties","methodArgs","colorTables","prettyWithoutArrays","logWithColors","direction","req","initiator","pretty","colorTable","IPCLogger","_outgoingPrefix","_incomingPrefix","_totalIncoming","_totalOutgoing","requestId","emptyBuffer","getEmptyBuffer","ChunkStream","_chunks","_totalLength","buff","byteCount","_read","advance","resultOffset","chunkIndex","chunkPart","ProtocolMessageType","ProtocolConstants","ProtocolMessage","ack","writtenTime","ProtocolReader","socket","_onMessage","_register","readHead","readLen","messageType","_socket","_incomingData","onData","acceptChunk","lastReadTime","ProtocolWriter","lastWriteTime","drain","_writeNow","_writeSoon","head","wasEmpty","_bufferAdd","_bufferTake","Protocol","_onClose","onClose","_socketWriter","_socketReader","Client","ipc_1","getSocket","sendDisconnect","BufferedEmitter","_hasListeners","_isDeliveringMessages","_bufferedMessages","_deliverMessages","QueueElement","resultLen","it","PersistentProtocol","initialChunk","_onControlMessage","onControlMessage","_onSocketClose","onSocketClose","_onSocketTimeout","onSocketTimeout","_isReconnecting","_outgoingUnackMsg","_outgoingMsgId","_outgoingAckId","_outgoingAckTimeout","_incomingMsgId","_incomingAckId","_incomingMsgLastTime","_incomingAckTimeout","_outgoingKeepAliveTimeout","_incomingKeepAliveTimeout","_socketDisposables","_receiveMessage","_sendKeepAliveCheck","_recvKeepAliveCheck","unacknowledgedCount","timeSinceLastOutgoingMsg","timeSinceLastIncomingMsg","initialDataChunk","flushBuffer","toSend","_recvAckCheck","peek","_sendAckCheck","readEntireBuffer","_sendAck","oldestUnacknowledgedMsg","timeSinceOldestUnacknowledgedMsg","NodeSocket","_listener","off","bufferSize","Constants","ReadState","WebSocketNodeSocket","_onData","mask","ipc_net_1","_acceptChunk","onEnd","headerLen","secondByte","hasMask","unmask","cnt","v","bytesLeft","m3","m2","m1","generateRandomPipeName","randomSuffix","Server","server","toClientConnectionEvent","onConnection","serve","net_1","createServer","connect","clientId","createConnection","fromSocket","nls","minute","hour","day","week","month","year","fromNow","date","appendAgoLabel","seconds","nls_1","localize","toLocalISOString","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","toFixed","exceptionToErrorMessage","exception","verbose","detectSystemErrorMessage","stackToString","errno","syscall","toErrorMessage","types","detail","getParseErrorMessage","errorCode","getWindowsCode","status","getWindowsShell","AbstractProcess","arg3","arg4","cmd","shell","executable","isShellCommand","childProcess","childProcessPromise","terminateRequested","newEnv","WellKnowCommands","pp","useExec","cc","ee","cp","stderr","killed","handleExec","closeHandler","handleClose","terminated","Types","cmdCode","Objects","windowsVerbatimArguments","detached","quotedCommand","quotedArg","commandLine","quoted","ensureQuotes","spawn","pidResolve","pid","handleSpawn","stdio","killProcess","execFile","success","kill","terminateProcess","cmdShell","ant","cmake","eslint","gradle","grunt","gulp","jake","jenkins","jshint","make","maven","msbuild","msc","nmake","npm","rake","tsc","xbuild","LineProcess","stdoutLineDecoder","stderrLineDecoder","lineDecoder","decoder_1","sync","stdoutLine","stderrLine","createQueuedSender","msgQueue","useQueue","msgQueueCopy","findExecutable","PATH","pathEntry","withExtension","modulePath","_onDidProcessExit","onDidProcessExit","disposeDelayer","_client","getCachedChannel","disposeClient","client","forkOpts","objects_1","VSCODE_PARENT_PID","freshExecArgv","execArgv","debug","debugBrk","fork","onMessageEmitter","console_1","serverName","sender","processes_1","connected","onExit","ExtensionHostDebugBroadcastChannel","_onCloseEmitter","_onReloadEmitter","_onTerminateEmitter","_onLogToEmitter","_onAttachEmitter","sessionId","subId","ChannelName","ExtensionHostDebugChannelClient","onReload","onAttachSession","onLogToSession","onTerminateSession","debugRenderer","transformIncomingURI","transformIncomingExtension","uriIpc_1","manifest","transformed","transformOutgoingExtension","transformOutgoingURI","ExtensionManagementChannel","getUriTransformer","onInstallExtension","onDidInstallExtension","onUninstallExtension","onDidUninstallExtension","uriTransformer","local","zip","unzip","install","getManifest","installFromGallery","uninstall","reinstallFromGallery","getInstalled","extensions","updateMetadata","getExtensionsReport","ExtensionManagementChannelClient","zipLocation","vsix","force","ExtensionTipsChannel","getConfigBasedTips","getImportantExecutableBasedTips","getOtherExecutableBasedTips","getAllWorkspacesTips","nlsRegex","localizeManifest","VERSION_REGEXP","isValidVersionStr","version","parseVersion","hasCaret","hasGreaterEquals","majorBase","majorMustEqual","minorBase","minorMustEqual","patchBase","patchMustEqual","preRelease","normalizeVersion","isMinimum","isValidVersion","_version","_desiredVersion","desiredVersion","desiredMajorBase","desiredMinorBase","desiredPatchBase","isVersionValid","currentVersion","requestedVersion","notices","isValidExtensionVersion","extensionDesc","isBuiltin","main","engines","isEngineValid","engine","WatcherChannel","onLogMessage","setRoots","setVerboseLogging","stop","WatcherChannelClient","enable","roots","FileWatcher","onDidFilesChange","verboseLogging","isDisposed","restartCounter","startWatching","ipc_cp_1","AMD_ENTRYPOINT","PIPE_LOGGING","VERBOSE_LOGGING","MAX_RESTARTS","watcherIpc_1","setFolders","watcherOptions","OutOfProcessWin32FolderWatcher","watchedFolder","ignored","eventCallback","logCallback","glob","startWatcher","decoder","rawEvents","eventParts","changeType","absolutePath","ignore","changeTypeMap","folder","csharpWatcherService_1","excludes","onFileEvents","SyncDescriptor","ctor","staticArguments","supportsDelayedInstantiation","createSyncDescriptor","incoming","outgoing","Graph","_hashFn","_nodes","fromNode","lookupOrInsertNode","toNode","_util","storeServiceDependency","optional","DI_TARGET","DI_DEPENDENCIES","serviceId","serviceIds","getServiceDependencies","IInstantiationService","serviceIdentifier","IDownloadService","instantiation_1","IEnvironmentService","BACKUPS","LogsDataCleaner","environmentService","cleanUpOldLogsSoon","currentLog","logsPath","logsRoot","oldSessions","__decorate","__param","environment_1","EXTENSION_IDENTIFIER_PATTERN","EXTENSION_IDENTIFIER_REGEX","isIExtensionIdentifier","SortBy","SortOrder","StatisticType","InstallOperation","IExtensionGalleryService","INSTALL_ERROR_NOT_SUPPORTED","INSTALL_ERROR_MALICIOUS","INSTALL_ERROR_INCOMPATIBLE","ExtensionManagementError","IExtensionManagementService","DISABLED_EXTENSIONS_STORAGE_PATH","ENABLED_EXTENSIONS_STORAGE_PATH","IGlobalExtensionEnablementService","IExtensionTipsService","DefaultIconPath","ExtensionsLabel","ExtensionsChannelId","PreferencesLabel","MANIFEST_CACHE_FOLDER","USER_MANIFEST_CACHE_FILE","BUILTIN_MANIFEST_CACHE_FILE","EXTENSION_CATEGORIES","ExtensionType","ExtensionIdentifier","_lower","aValue","bValue","isLanguagePackExtension","contributes","localizations","IBuiltinExtensionsScannerService","areSameExtensions","ExtensionIdentifierWithVersion","identifier","adoptToGalleryExtensionId","toLocaleLowerCase","getGalleryExtensionId","publisher","groupByExtension","getExtensionIdentifier","byExtension","findGroup","getLocalExtensionTelemetryData","galleryId","publisherId","publisherName","publisherDisplayName","dependencies","extensionDependencies","getGalleryExtensionTelemetryData","telemetryData","BetterMergeId","extensions_1","getMaliciousExtensionsSet","report","malicious","ExtensionsManifestCache","extensionsManagementService","extensionsManifestCache","onDidUnInstallExtension","invalidate","pfs","FileSystemProviderErrorCode","IFileService","FileType","FileSystemProviderCapabilities","hasReadWriteCapability","provider","capabilities","hasFileFolderCopyCapability","hasOpenReadWriteCloseCapability","hasFileReadStreamCapability","FileSystemProviderError","createFileSystemProviderError","providerError","markAsFileSystemProviderError","toFileSystemProviderErrorCode","Unknown","FileExists","FileIsADirectory","FileNotADirectory","FileNotFound","FileExceedsMemoryLimit","FileTooLarge","NoPermissions","Unavailable","ensureFileSystemProviderError","toFileOperationResult","FileOperationError","fileOperationResult","FileOperation","FileOperationEvent","operation","FileChangeType","FileChangesEvent","changes","checkForChangeType","getOfType","hasType","filterFn","isParent","FileOperationResult","AutoSaveConfiguration","OFF","AFTER_DELAY","ON_FOCUS_CHANGE","ON_WINDOW_CHANGE","HotExitConfiguration","ON_EXIT","ON_EXIT_AND_WINDOW_CLOSE","FILES_ASSOCIATIONS_CONFIG","FILES_EXCLUDE_CONFIG","FileKind","ETAG_DISABLED","etag","mtime","whenProviderRegistered","fileService","canHandleResource","onDidChangeFileSystemProviderRegistrations","MIN_MAX_MEMORY_SIZE_MB","FALLBACK_MAX_MEMORY_SIZE_MB","BinarySize","KB","MB","GB","TB","throwIfCancelled","throwIfTooLarge","totalBytesRead","limits","memory","files_1","readFileIntoStream","bytesRead","allowedRemainingBytes","posInFile","posInBuffer","lastChunkLength","doReadFileIntoStream","errorTransformer","toFileChanges","normalizeFileChanges","normalizer","EventNormalizer","processEvent","mapPathToChange","existingEvent","currentChangeType","newChangeType","addedChangeEvents","deletedPaths","e1","e2","fileChangesDelayer","watcher_2","fileChangesBuffer","pathToWatch","eventType","onFileChange","onVerbose","fileChanges","normalizedFileChanges","watcher_1","ServiceCollection","_entries","instanceOrDescriptor","_enableTracing","CyclicDependencyError","graph","InstantiationService","services","serviceCollection_1","strict","_services","_parent","_trace","Trace","traceInvocation","_done","isOptional","_getOrCreateServiceInstance","ctorOrDescriptor","rest","descriptors_1","traceCreation","_createInstance","serviceDependencies","serviceArgs","dependency","firstServiceArgPos","instance","_setServiceInstance","instanceOrDesc","_getServiceInstanceOrDescriptor","_createAndCacheServiceInstance","branch","desc","graph_1","cycleCount","insertEdge","_createServiceInstanceWithOwner","removeNode","_createServiceInstance","_supportsDelayedInstantiation","idle","TraceType","_start","_dep","_None","dur","_totals","causedCreation","lines","printChild","trace","nested","ILocalizationsService","isValidLocalization","localization","languageId","translation","languageName","localizedLanguageName","toISOString","LogLevel","ILogService","ILoggerService","DEFAULT_LOG_LEVEL","AbstractLogService","level","_onDidChangeLogLevel","onDidChangeLogLevel","ConsoleLogMainService","logLevel","setLevel","useColors","getLevel","Debug","Critical","ConsoleLogService","LogServiceAdapter","adapter","consoleLog","extractMessage","errorMessage_1","ConsoleLogInMainService","MultiplexLogService","logServices","logService","info","critical","DelegatedLogService","NullLogService","getLogLevel","Off","ExtensionIdVersionRegex","ExtensionsDownloader","extensionGalleryService","extensionsDownloadDir","extensionsDownloadPath","cleanUpPromise","cleanUp","getName","download","folderStat","resolveMetadata","extensionManagementUtil_1","semver","rcompare","del","extensionManagement_1","log_1","ExtensionsLifecycle","processesLimiter","script","parseScript","runLifecycleHook","getExtensionStoragePath","scriptKey","lifecycleHook","lifecycleType","extensionLifecycleProcess","onexit","uninstallHook","opts","silent","extensionUninstallProcess","setEncoding","onStdout","onStderr","onOutput","onDebouncedOutput","groupEnd","globalStorageHome","FileService","BUFFER_SIZE","_onDidChangeFileSystemProviderRegistrations","_onWillActivateFileSystemProvider","onWillActivateFileSystemProvider","_onDidChangeFileSystemProviderCapabilities","onDidChangeFileSystemProviderCapabilities","_onDidRunOperation","onDidRunOperation","_onError","_onDidFilesChange","activeWatchers","writeQueues","providerDisposables","onDidChangeFile","getExtUri","onDidChangeCapabilities","onDidErrorOccur","joiners","capability","resourceForError","activateProvider","withProvider","doResolveFile","resolveTo","resolveSingleChildDescendants","trie","toFileStat","Boolean","findSuperstr","recurse","labels_1","File","Directory","SymbolicLink","ctime","resolvedEntries","childResource","childStat","toResolve","doValidateCreateFile","bufferOrReadableOrStream","throwIfFileSystemIsReadonly","withWriteProvider","bufferOrReadableOrStreamOrBufferedStream","validateWriteFile","stream_1","doWriteUnbuffered","doWriteBuffered","withReadProvider","doReadAsFileStream","preferUnbuffered","cancellableSource","statPromise","validateReadFile","fileStreamPromise","readFileUnbuffered","readFileStreamed","readFileBuffered","fileStream","readFileStream","io_1","validateReadFileLimits","tooLargeErrorResult","doCanMoveCopy","sourceProvider","targetProvider","doValidateMoveCopy","doMoveCopy","isSameResourceWithDifferentPathCase","sourceFile","doCopyFolder","doPipeBuffered","doPipeBufferedToUnbuffered","doPipeUnbufferedToBuffered","doPipeUnbuffered","sourceFolder","targetFolder","sourceChild","targetChild","isPathCaseSensitive","directory","directoriesToCreate","doValidateDelete","useTrash","watchDisposed","watchDisposable","doWatch","toWatchKey","writeQueue","readableOrStreamOrBufferedStream","ensureWriteQueue","doWriteStreamBufferedQueued","doWriteReadableBufferedQueued","streamOrBufferedStream","doWriteBuffer","totalBytesWritten","doWriteUnbufferedQueued","doPipeBufferedQueued","sourceHandle","targetHandle","doPipeUnbufferedQueued","doPipeUnbufferedToBufferedQueued","DiskFileSystemProvider","mapHandleToPos","writeHandles","_onDidWatchErrorOccur","_onDidChangeFile","recursiveFoldersToWatch","recursiveWatchRequestDelayer","_capabilities","toFilePath","toType","birthtime","toFileSystemProviderError","filePath","normalizedPos","normalizePos","updatePos","bytesLength","lastKnownPos","doWrite","bytesWritten","doDelete","fromFilePath","validateTargetDeleted","watchRecursive","watchNonRecursive","folderToWatch","refreshRecursiveWatchers","doRefreshRecursiveWatchers","recursiveWatcher","watcherService_3","watcherImpl","_b","usePolling","watcherService_1","_c","watcherService_2","recursiveWatcherLogLevelListener","watcherService","watcherService_4","logLevelListener","LocalizationsService","extensionManagementService","_onDidLanguagesChange","onDidLanguagesChange","LanguagePacksCache","getLanguagePacks","languagePacks","languages","extensionIdentifier","installed","updated","languagePacksFilePath","languagePacksFileLimiter","initializedCache","withLanguagePacks","createLanguagePacksFromExtensions","createLanguagePacksFromExtension","updateHash","localizationContribution","localizations_1","languagePack","extensionInLanguagePack","md5","crypto_1","LoggerChannel","consoleFn","LoggerChannelClient","FollowerLogService","createRotatingLogger","filename","filesize","filecount","SpdLogService","logsFolder","_loggerCreationPromise","_createSpdLogLogger","_logger","processName","_spdlog","setAsyncMode","logfilePath","createRotatingLoggerAsync","createSpdLogLogger","_log","disposeLogger","drop","severity_1","INotificationService","NeverShowAgainScope","NotificationsFilter","NoOpNotification","progress","NoOpProgress","onDidClose","onDidChangeVisibility","actions","product","nameLong","nameShort","urlProtocol","extensionAllowedProposedApi","rawProductConfiguration","rootPath","pkg","process_1","dataFolderName","EnvironmentService","_args","_execPath","date_1","appRoot","execPath","cliPath","isBuilt","product_1","applicationName","getCLIPath","homedir","vscodePortable","parseUserDataDir","appSettingsHome","userRoamingDataHome","settingsResource","resources","userDataSyncHome","userDataSyncLogResource","enableSyncByDefault","machineSettingsResource","workspaceStorageHome","keybindingsResource","keyboardLayoutResource","argvResource","snippetsHome","isExtensionDevelopment","extensionDevelopmentPath","backupHome","backupWorkspacesPath","untitledWorkspacesHome","installSourcePath","builtinExtensionsPath","fromArgs","parsePathArg","extensionsPath","vscodeExtensions","extraExtensionPaths","extraBuiltinExtensionPaths","extensionDevelopmentLocationURI","extensionTestsLocationURI","extensionTestsPath","disableExtensions","extensionEnabledProposedApi","debugExtensionHost","parseExtensionHostPort","logExtensionHostCommunication","mainIPCHandle","getIPCHandle","sharedIPCHandle","nodeCachedDataDir","serviceMachineIdResource","disableUpdates","disableCrashReporter","crashReporterDirectory","driverHandle","driverVerbose","disableTelemetry","sandbox","decorators_1","xdgRuntimeDir","safeIpcPathLengths","2","1","getWin32IPCHandle","scope","getNixIPCHandle","isBuild","parseDebugPort","debugId","debugArg","debugBrkArg","defaultBuildPort","break","parseSearchPort","IProductService","Registry","Assert","Extensions","JSONContribution","jsonContributionRegistry","_onDidChangeSchema","onDidChangeSchema","schemasById","unresolvedSchemaContent","schemas","Configuration","ConfigurationScope","allSettings","patternProperties","applicationSettings","machineSettings","machineOverridableSettings","windowSettings","resourceSettings","resourceLanguageSettingsSchemaId","contributionRegistry","as","jsonContributionRegistry_1","overrideIdentifierFromKey","getDefaultValue","OVERRIDE_PROPERTY_PATTERN","configurationRegistry","overrideIdentifiers","_onDidSchemaChange","onDidSchemaChange","_onDidUpdateConfiguration","onDidUpdateConfiguration","defaultValues","defaultLanguageConfigurationOverridesNode","title","configurationContributors","resourceLanguageSettingsSchema","additionalProperties","errorMessage","allowTrailingCommas","allowComments","configurationProperties","excludedConfigurationProperties","registerSchema","configuration","validate","registerConfigurations","configurations","validateAndRegisterProperties","registerJSONConfiguration","deregisterConfiguration","removeFromSchema","allOf","defaultConfigurations","defaultConfiguration","description","$ref","updatePropertyDefaultValue","updateSchema","registerOverrideIdentifiers","updateOverridePropertyPatternKey","overrideIdentifier","propertyKeys","validateProperty","included","deprecationMessage","markdownDeprecationMessage","subNodes","register","overrideIdentifierProperty","resourceLanguagePropertiesSchema","getConfigurationProperties","getScopes","scopes","toValuesTree","conflictReporter","addToValueTree","settingsTreeRoot","curr","getConfigurationValue","settingPath","component","accessSetting","keyFromOverrideIdentifier","IConfigurationService","isConfigurationOverrides","ConfigurationTarget","ConfigurationTargetToString","configurationTarget","value1","value2","overrides","byOverrideIdentifier","override","identifiers","toOverridesByIdentifier","fromOverridesByIdentifier","configurationRegistry_1","fromOverride","toOverride","toOverrides","overrideRaw","keyInOverrideRaw","removeFromValueTree","valueTree","doRemoveFromValueTree","getConfigurationKeys","getDefaultValues","valueTreeRoot","getMigratedSettingValue","configurationService","currentSettingName","legacySettingName","setting","inspect","legacySetting","userValue","workspaceValue","workspaceFolderValue","ConfigurationModel","_contents","_keys","_overrides","checkAndFreeze","section","configuration_1","overrideContents","getContentsForOverrideIdentifer","contentsForKey","overrideContentsForKey","mergeContents","others","otherOverride","addKey","removeKey","DefaultConfigurationModel","ConfigurationModelParser","_name","_scopes","_raw","_configurationModel","_parseErrors","configurationModel","doParseContent","parseRaw","doParseRaw","parseErrors","json","filterByScope","filterOverriddenProperties","getScope","propertySchema","UserSettings","userSettingsResource","_onDidChange","onDidChange","parser","parseContent","_defaultConfiguration","_localUserConfiguration","_remoteUserConfiguration","_workspaceConfiguration","_folderConfigurations","_memoryConfiguration","_memoryConfigurationByResource","_freeze","_workspaceConsolidatedConfiguration","_foldersConsolidatedConfigurations","_userConfiguration","workspace","getConsolidateConfigurationModel","getValue","memoryConfiguration","removeValue","setValue","consolidateConfigurationModel","folderConfigurationModel","getFolderConfigurationModelForResource","memoryConfigurationModel","userConfiguration","userLocalValue","localUserConfiguration","userRemoteValue","remoteUserConfiguration","memoryValue","getOverrideValue","user","userLocal","userRemote","workspaceFolder","workspaceConfiguration","folderConfigurations","defaults","fromKeys","getKeysForOverrideIdentifier","toKeys","updateDefaultConfiguration","updateLocalUserConfiguration","updateRemoteUserConfiguration","updateWorkspaceConfiguration","folderConfiguration","currentFolderConfiguration","updateFolderConfiguration","folderConfig","deleteFolderConfiguration","getConsolidatedConfigurationModelForResource","consolidateConfiguration","getWorkspaceConsolidatedConfiguration","getFolder","getFolderConsolidatedConfiguration","memoryConfigurationForResource","folderConsolidatedConfiguration","workspaceConsolidateConfiguration","folderConfiguraiton","parseConfigurationModel","model","mergeChanges","keysSet","overridesMap","ConfigurationChangeEvent","currentConfiguraiton","currentWorkspace","_previousConfiguration","affectedKeys","affectedKeysTree","previousConfiguration","doesAffectedKeysTreeContains","requestedTree","AllKeysConfigurationChangeEvent","sourceConfig","allKeys","ConfigurationService","_onDidChangeConfiguration","onDidChangeConfiguration","configurationModels_1","reloadConfigurationScheduler","reloadConfiguration","onDidDefaultConfigurationChange","loadConfiguration","toData","onDidChangeUserConfiguration","userConfigurationModel","compareAndUpdateLocalUserConfiguration","compareAndUpdateDefaultConfiguration","configurationChange","getTargetConfiguration","isSuccess","statusCode","hasNoContent","IRequestService","asText","asJson","registerConfiguration","order","http.proxy","markdownDescription","http.proxyStrictSSL","http.proxyAuthorization","http.proxySupport","enum","enumDescriptions","http.systemCertificates","RequestChannel","headers","RequestChannelClient","getProxyAgent","rawRequestURL","requestURL","url_1","proxyURL","proxyUrl","HTTP_PROXY","http_proxy","HTTPS_PROXY","https_proxy","getSystemProxyURI","proxyEndpoint","hostname","auth","rejectUnauthorized","strictSSL","resolve_2","reject_2","getServiceMachineId","storageService","store","IStateService","FileStorage","dbPath","_database","lastFlushedSerializedDatabase","database","loadSync","loadAsync","saveSync","serializedDatabase","StateService","fileStorage","STATE_FILE","init","getItem","setItem","WillSaveStateReason","IStorageService","StorageScope","InMemoryStorageService","_onDidChangeStorage","onDidChangeStorage","_onWillSaveState","onWillSaveState","globalCache","workspaceCache","fallbackValue","getCache","valueStr","logStorage","toWorkspace","reason","NONE","globalPath","workspacePath","safeParse","globalItems","globalItemsParsed","workspaceItems","workspaceItemsParsed","globalValues","table","workspaceValues","ErrorEvent","callstack","BaseErrorTelemetry","telemetryService","flushDelay","ERROR_FLUSH_TIMEOUT","_flushHandle","_disposables","_telemetryService","_flushDelay","unbind","Errors","addListener","_onErrorEvent","installErrorListeners","_flushBuffer","_enqueue","publicLogError2","ErrorTelemetry","errorTelemetry_1","oldOnError","onerror","_onUncaughtError","uncaught_error_name","uncaught_error_msg","ITelemetryService","instanceStorageKey","currentSessionDateStorageKey","firstSessionDateStorageKey","lastSessionDateStorageKey","machineIdKey","crashReporterIdStorageKey","Flags","FilterType","AssetType","Icon","Details","Changelog","Manifest","VSIX","License","Repository","PropertyType","Dependency","ExtensionPack","Engine","LocalizedLanguages","DefaultQueryState","pageNumber","pageSize","sortBy","sortOrder","criteria","assetTypes","Query","filterType","f","filters","searchText","criterium","SearchText","getStatistic","statistics","statisticName","getCoreTranslationAssets","assetType","asset","getVersionAsset","getRepositoryAsset","gitRegExp","fallbackUri","getDownloadAsset","fallbackAssetUri","getIconAsset","assetUri","getExtensions","getEngine","getLocalizedLanguages","toExtension","galleryExtension","querySource","assets","readme","changelog","license","repository","icon","coreTranslations","extensionName","extensionId","lastUpdated","displayName","shortDescription","installCount","rating","ratingCount","extensionPack","localizedLanguages","preview","ExtensionGalleryService","requestService","productService","extensionsGallery","extensionsGalleryUrl","serviceUrl","extensionsControlUrl","controlUrl","commonHeadersPromise","resolveMarketplaceHeaders","extensionValidator_1","withFlags","IncludeAssetUri","IncludeStatistics","IncludeFiles","IncludeVersionProperties","withPage","withFilter","Target","ExtensionId","ExtensionName","queryGallery","galleryExtensions","rawExtension","versionAsset","getLastValidExtensionVersion","rawVersion","isEnabled","names","publicLog2","IncludeLatestVersionOnly","quotedCategory","category","Category","quotedTag","tag","Tag","Featured","withSortBy","ids","withSortOrder","total","firstPage","getPage","pageIndex","ct","nextPageQuery","ExcludeNonValidated","ExcludeWithFlags","flagsToString","Unpublished","commonHeaders","Content-Type","Accept","Accept-Encoding","Content-Length","url","api","request_1","resultCount","resultMetadata","metadataType","metadataItems","duration","publicLog","operationParam","downloadAsset","getAsset","compatible","IncludeVersions","fallbackUrl","firstOptions","fallbackOptions","getLastValidExtensionVersionFromProperties","getLastValidExtensionVersionRecursively","slow","X-Market-Client-Id","User-Agent","serviceMachineId_1","telemetry_1","productService_1","storage_1","TelemetryService","_configurationService","_experimentProperties","_cleanupPatterns","_appender","appender","_commonProperties","commonProperties","_piiPaths","piiPaths","_userOptIn","_enabled","sendErrorTelemetry","piiPath","_updateUserOptIn","optIn","isHashedId","usingFallbackGuid","TELEMETRY_SECTION_ID","enableTelemetry","isOptedIn","instanceId","msftInternal","anonymizeFilePaths","_cleanupInfo","errorEventName","publicLogError","updatedStack","cleanUpIndexes","nodeModulesRegex","fileRegex","y","IDLE_START_EVENT_NAME","IDLE_STOP_EVENT_NAME","telemetry.enableTelemetry","tags","NullTelemetryService","combinedAppender","appenders","NullAppender","LogAppender","_logService","commonPropertiesRegex","strippedData","flattenKeys","flatKeys","configurationTelemetry","configurationSource","configurationKeys","validateTelemetryData","measurements","flat","cleanRemoteAuthority","AppInsightsAppender","_eventPrefix","_defaultData","aiKeyOrClientFactory","_aiClient","aiKey","appInsights","defaultClient","TelemetryClient","setUseDiskRetryCaching","setup","setAutoCollectRequests","setAutoCollectPerformance","setAutoCollectExceptions","setAutoCollectDependencies","setAutoDependencyCorrelation","setAutoCollectConsole","setInternalLogging","endpointUrl","getClient","telemetryUtils_1","trackEvent","resolveCommonProperties","msftInternalDomains","release","domainList","domain","msftDomain","verifyMicrosoftInternalDomain","seq","defineProperties","timestamp","common.timesincesessionstart","common.sequence","SNAP","SNAP_REVISION","buildTelemetryMessage","mergedTelemetry","mergeTelemetry","dirName","dirs","statSync","telemetryJsonFolders","INodeProxyService","NodeProxyChannel","NodeProxyChannelClient","TelemetryChannel","setEnabled","getTelemetryInfo","setExperimentProperty","TelemetryChannelClient","Channel","_sender","cpus","cores","memoryFree","freemem","memoryTotal","totalmem","userInfo","TELEMETRY_URL","logger_1","named","metadataPath","isInternalConfiguration","DefaultConfiguration","getNlsConfiguration","util","lp","_languagePackSupport","getTranslations","getLocaleFromConfig","localeConfigUri","_m1","_m2","m4","length_1","Connection","offline","_offline","doReconnect","doDispose","ManagementConnection","setOffline","getUnderlyingSocket","beginAcceptReconnection","endAcceptReconnection","ExtensionHostConnection","environment","sendInitMessage","skipWebSocketFrames","proc","VSCODE_EXTHOST_WILL_SEND_SOCKET","VSCODE_HANDLES_UNCAUGHT_ERRORS","VSCODE_LOG_STACK","VSCODE_LOG_LEVEL","LOG_LEVEL","VSCODE_NLS_CONFIG","ipc_net_2","rawMessage","authenticate","_message","sendMessage","sendControl","encodePath","Translations","aKeys","bKeys","Logger","messageHandler","_messageHandler","notification_1","MANIFEST_FILE","ExtensionManifestHandler","ourVersion","absoluteFolderPath","isUnderDevelopment","_ourVersion","_absoluteFolderPath","_isBuiltin","_isUnderDevelopment","_absoluteManifestPath","ExtensionManifestParser","manifestContents","__metadata","jsonErrorMessages_1","ExtensionManifestNLSReplacer","_nlsConfig","extensionDescription","reportErrors","localized","reportInvalidFormat","translationId","localizedMessages","translationPath","translationBundle","package","findMessageBundles","messageBundle","messageBundleContent","resolveOriginalMessageBundle","_replaceNLStrings","originalMessageBundle","originalBundleContent","devMode","toCheck","literal","originalMessages","messageScope","processEntry","messageKey","ExtensionManifestValidator","_extensionDescription","isValidExtensionDescription","extensionLocation","extensionFolderPath","baseIsValidExtensionDescription","valid","_isStringArray","activationEvents","browser","normalizedAbsolutePath","ExtensionScannerInput","tanslations","extensionPoints_1","DefaultExtensionResolver","ExtensionScanner","replaceNLS","resolver","obsolete","obsoleteFileContents","refs","resolveExtensions","ref","createNLSConfig","_extensionDescriptions","scanExtension","extensionDescriptions","scanExtensions","builtinExtensions","extraBuiltinExtensions","resultMap","resultArr","aLastSegment","bLastSegment","Watcher","diskFileSystemProvider_1","watches","w","FileProviderChannel","watchers","filechange","session","cts","unwatch","_watch","requestResourcePath","ExtensionEnvironmentChannel","telemetry","getEnvironmentData","getDiagnosticInfo","logTelemetry","flushTelemetry","settingsPath","extensionHostLogsPath","scanMultiple","VSCODE_DEV","scanBuiltin","scanInstalled","allExtensions","uniqueExtensions","multipleExtensions","extensionKind","NodeProxyService","_serviceBrand","_$onMessage","$onMessage","_onDown","onDown","_onUp","onUp","node_browser_1","REMOTE_FILE_SYSTEM_CHANNEL_NAME","RemoteFileSystemProvider","remoteAgentService","_onDidChangeCapabilities","getConnection","setCaseSensitive","remoteAgentEnvironment","getEnvironment","registerListeners","eventsOrError","isCaseSensitive","dataOrErrorOrEnd","RemoteExtensionLogFileName","IRemoteAgentService","ExtractError","cause","toExtractError","extractZip","zipfile","targetPath","extractedEntriesCount","readNextEntry","readEntry","entryCount","sourcePathRegex","fileName","targetFileName","openZipStream","attr","externalFileAttributes","modeFromEntry","targetDirName","istream","extractEntry","openZip","zipFile","lazy","yauzl_1","lazyEntries","openReadStream","zipPath","yazl","ZipFile","addBuffer","localPath","addFile","zipStream","outputStream","extract","sourcePath","zip_1","ExtensionsScanner","beforeRemovingExtension","_devSystemExtensionsPath","systemExtensionsPath","uninstalledPath","uninstalledFileLimiter","removeUninstalledExtensions","removeOutdatedExtensions","promises","scanSystemExtensions","joinErrors","scanUserExtensions","excludeOutdated","uninstalled","getUninstalledExtensions","scanAllUserExtensions","scanExtensionsInDirs","identifierWithVersion","folderName","tempPath","extensionPath","extractAtLocation","setMetadata","isMachineScoped","manifestPath","parseManifest","withUninstalledExtensions","removeExtension","extractPath","renamePath","retryUntil","systemExtensionsPromise","scanDefaultSystemExtensions","devSystemExtensionsPromise","scanDevSystemExtensions","systemExtensions","devSystemExtensions","limiter","extensionsFolders","extensionFolder","readManifest","readmeUrl","changelogUrl","devSystemExtensionsList","getDevSystemExtensionsList","scanExtensionsInDir","devSystemExtensionsPath","toRemove","removeUninstalledExtension","builtInExtensions","errorOrErrors","previousValue","currentValue","extensionNls_1","ExtensionManagementService","galleryService","downloadService","instantiationService","lastReportTimestamp","installingExtensions","uninstallingExtensions","_onInstallExtension","_onDidInstallExtension","_onUninstallExtension","_onDidUninstallExtension","extensionLifecycle","createInstance","extensionLifecycle_1","extensionsScanner","extensionsScanner_1","postUninstall","manifestCache","extensionsManifestCache_1","extensionsDownloader","extensionDownloader_1","collectFiles","downloadLocation","downloadVsix","extensionManagementUtil_2","collectFilesFromDirectory","installedExtensions","existing","gt","uninstallExtension","unsetUninstalledAndGetLocal","getGalleryMetadata","installFromZipPath","downloadedLocation","toNonCancellablePromise","installExtension","installDependenciesAndPackExtensions","onDidInstallExtensionSuccess","gallery","reportTelemetry","getTelemetryEvent","onDidInstallExtensionFailure","checkAndGetCompatibleVersion","cancellablePromise","successCallback","errorCallback","existingExtension","downloadInstallableExtension","installableExtension","neq","setUninstalled","isMalicious","compatibleExtension","getCompatibleExtension","findGalleryExtension","downloadExtension","extractAndInstall","isUninstalled","unsetUninstalled","extractUserExtension","saveMetadataForLocalExtension","dependenciesAndPackExtensions","old","galleryIdentifier","galleryResult","extensionsToInstall","rollback","extensionToUninstall","checkForDependenciesAndUninstall","findGalleryExtensionByName","findGalleryExtensionById","preUninstallExtension","packedExtensions","getAllPackExtensionsToUninstall","uninstallExtensions","postUninstallExtension","otherExtensionsToUninstall","dependents","getDependents","remainingDependents","dependent","getDependentsErrorMessage","doUninstall","checked","extensionsPack","packOfPackedExtensions","packedExtension","userExtensions","u","reportStatistic","errorcode","filterUninstalled","allUninstalled","reportedExtensions","updateReportCache","extensionData","download_1","vszipExtract","vszip","vszipBuffer","tar","tarPath","pack","tarStream","finalize","archivePath","extractTar","includes","extractAssets","assetPath","extractor","fail","extractData","fileData","nextEntry","rawName","fstream","enableCustomMarketplace","SERVICE_URL","itemUrl","ITEM_URL","recommendationsUrl","RequestService","configure","proxy","proxyStrictSSL","authorization","proxyAuthorization","agent","proxy_1","Proxy-Authorization","_request","endpoint","rawRequest","getRawRequest","getNodeRequest","password","followRedirects","zlib_1","createGunzip","abort","notInstalled","useId","getId","withVersion","EXTENSION_ID_REGEX","getIdAndVersion","Main","argv","setInstallSource","listExtensions","installExtensions","locateExtension","telemetry_2","installSource","showVersions","categories","doNotSync","failed","installedExtensionsManifests","updateLocalizationsCache","responseText","notFound","installedExtension","newer","getExtensionId","uninstalledExtensions","localizationService","eventPrefix","environmentService_1","spdlogService_1","fileService_1","diskFileSystemProvider","registerProvider","configurationService_1","initialize","state_1","stateService_1","instantiationService_1","invokeFunction","accessor","stateService","requestService_1","extensionManagementService_1","extensionGalleryService_1","aiConfig","asimovKey","appInsightsAppender_1","commonProperties_1","telemetryService_1","createChild","Vscode","_onDidClientConnect","ipc","maxExtraOfflineConnections","cliProcessMain_1","servicesPromise","initializeServices","startPath","parseUrl","workbenchWebConfiguration","workspaceUri","folderUri","workspaceProvider","payload","remoteUserDataUri","productConfiguration","nlsConfiguration","reconnectionToken","protocol_1","reconnection","handshake","desiredConnectionType","debugPort","getDebugPort","reconnect","connection_1","nodeProxy_1","disposeOldOfflineConnections","tunnel","mkdirSync","remoteAgentService_1","logIpc_1","extensionHostDebugIpc_1","insights_1","id_1","localizations_2","channel_1","logsDataCleaner_1","extensionManagementIpc_1","requestIpc_1","remoteAgentFileSystemChannel_1","logger_2","marketplace_1","exit","CODE_SERVER_PARENT_PID","parentPid","server_1","field","cli","handleWebSocket"],"mappings":"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","file":"entry.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\n//@ts-check\n\nfunction _factory(sharedObj) {\n\n\tsharedObj.MonacoPerformanceMarks = sharedObj.MonacoPerformanceMarks || [];\n\n\tconst _dataLen = 2;\n\tconst _timeStamp = typeof console.timeStamp === 'function' ? console.timeStamp.bind(console) : () => { };\n\n\tfunction importEntries(entries) {\n\t\tsharedObj.MonacoPerformanceMarks.splice(0, 0, ...entries);\n\t}\n\n\tfunction exportEntries() {\n\t\treturn sharedObj.MonacoPerformanceMarks.slice(0);\n\t}\n\n\tfunction getEntries() {\n\t\tconst result = [];\n\t\tconst entries = sharedObj.MonacoPerformanceMarks;\n\t\tfor (let i = 0; i < entries.length; i += _dataLen) {\n\t\t\tresult.push({\n\t\t\t\tname: entries[i],\n\t\t\t\tstartTime: entries[i + 1],\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction getDuration(from, to) {\n\t\tconst entries = sharedObj.MonacoPerformanceMarks;\n\t\tlet target = to;\n\t\tlet endIndex = 0;\n\t\tfor (let i = entries.length - _dataLen; i >= 0; i -= _dataLen) {\n\t\t\tif (entries[i] === target) {\n\t\t\t\tif (target === to) {\n\t\t\t\t\t// found `to` (end of interval)\n\t\t\t\t\tendIndex = i;\n\t\t\t\t\ttarget = from;\n\t\t\t\t} else {\n\t\t\t\t\t// found `from` (start of interval)\n\t\t\t\t\treturn entries[endIndex + 1] - entries[i + 1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tfunction mark(name) {\n\t\tsharedObj.MonacoPerformanceMarks.push(name, Date.now());\n\t\t_timeStamp(name);\n\t}\n\n\tconst exports = {\n\t\tmark: mark,\n\t\tgetEntries: getEntries,\n\t\tgetDuration: getDuration,\n\t\timportEntries: importEntries,\n\t\texportEntries: exportEntries\n\t};\n\n\treturn exports;\n}\n\n// This module can be loaded in an amd and commonjs-context.\n// Because we want both instances to use the same perf-data\n// we store them globally\n\n// eslint-disable-next-line no-var\nvar sharedObj;\nif (typeof global === 'object') {\n\t// nodejs\n\tsharedObj = global;\n} else if (typeof self === 'object') {\n\t// browser\n\tsharedObj = self;\n} else {\n\tsharedObj = {};\n}\n\nif (typeof define === 'function') {\n\t// amd\n\tdefine(\"vs/base/common/performance\", [], function () { return _factory(sharedObj); });\n} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\t// commonjs\n\tmodule.exports = _factory(sharedObj);\n} else {\n\tsharedObj.perf = _factory(sharedObj);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n//@ts-check\n\n/**\n * @param {NodeRequire} nodeRequire\n * @param {typeof import('path')} path\n * @param {typeof import('fs')} fs\n * @param {typeof import('../common/performance')} perf\n */\nfunction factory(nodeRequire, path, fs, perf) {\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<boolean>}\n\t */\n\tfunction exists(file) {\n\t\treturn new Promise(c => fs.exists(file, c));\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<void>}\n\t */\n\tfunction touch(file) {\n\t\treturn new Promise((c, e) => { const d = new Date(); fs.utimes(file, d, d, err => err ? e(err) : c()); });\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<object>}\n\t */\n\tfunction lstat(file) {\n\t\treturn new Promise((c, e) => fs.lstat(file, (err, stats) => err ? e(err) : c(stats)));\n\t}\n\n\t/**\n\t * @param {string} dir\n\t * @returns {Promise<string[]>}\n\t */\n\tfunction readdir(dir) {\n\t\treturn new Promise((c, e) => fs.readdir(dir, (err, files) => err ? e(err) : c(files)));\n\t}\n\n\t/**\n\t * @param {string} dir\n\t * @returns {Promise<string>}\n\t */\n\tfunction mkdirp(dir) {\n\t\treturn new Promise((c, e) => fs.mkdir(dir, { recursive: true }, err => (err && err.code !== 'EEXIST') ? e(err) : c(dir)));\n\t}\n\n\t/**\n\t * @param {string} dir\n\t * @returns {Promise<void>}\n\t */\n\tfunction rmdir(dir) {\n\t\treturn new Promise((c, e) => fs.rmdir(dir, err => err ? e(err) : c(undefined)));\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<void>}\n\t */\n\tfunction unlink(file) {\n\t\treturn new Promise((c, e) => fs.unlink(file, err => err ? e(err) : c(undefined)));\n\t}\n\n\t/**\n\t * @param {string} location\n\t * @returns {Promise<void>}\n\t */\n\tfunction rimraf(location) {\n\t\treturn lstat(location).then(stat => {\n\t\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\t\t\t\treturn readdir(location)\n\t\t\t\t\t.then(children => Promise.all(children.map(child => rimraf(path.join(location, child)))))\n\t\t\t\t\t.then(() => rmdir(location));\n\t\t\t} else {\n\t\t\t\treturn unlink(location);\n\t\t\t}\n\t\t}, err => {\n\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tthrow err;\n\t\t});\n\t}\n\n\tfunction readFile(file) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfs.readFile(file, 'utf8', function (err, data) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve(data);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @param {string} content\n\t * @returns {Promise<void>}\n\t */\n\tfunction writeFile(file, content) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfs.writeFile(file, content, 'utf8', function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t}\n\n\n\t/**\n\t * @param {string} userDataPath\n\t * @returns {object}\n\t */\n\tfunction getLanguagePackConfigurations(userDataPath) {\n\t\tconst configFile = path.join(userDataPath, 'languagepacks.json');\n\t\ttry {\n\t\t\t// NOTE@coder: Swapped require with readFile since require is cached and\n\t\t\t// we don't restart the server-side portion of code-server when the\n\t\t\t// language changes.\n\t\t\treturn JSON.parse(fs.readFileSync(configFile, \"utf8\"));\n\t\t} catch (err) {\n\t\t\t// Do nothing. If we can't read the file we have no\n\t\t\t// language pack config.\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * @param {object} config\n\t * @param {string} locale\n\t */\n\tfunction resolveLanguagePackLocale(config, locale) {\n\t\ttry {\n\t\t\twhile (locale) {\n\t\t\t\tif (config[locale]) {\n\t\t\t\t\treturn locale;\n\t\t\t\t} else {\n\t\t\t\t\tconst index = locale.lastIndexOf('-');\n\t\t\t\t\tif (index > 0) {\n\t\t\t\t\t\tlocale = locale.substring(0, index);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Resolving language pack configuration failed.', err);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * @param {string} commit\n\t * @param {string} userDataPath\n\t * @param {string} metaDataFile\n\t * @param {string} locale\n\t */\n\tfunction getNLSConfiguration(commit, userDataPath, metaDataFile, locale) {\n\t\tif (locale === 'pseudo') {\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {}, pseudo: true });\n\t\t}\n\n\t\tif (process.env['VSCODE_DEV']) {\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t}\n\n\t\t// We have a built version so we have extracted nls file. Try to find\n\t\t// the right file to use.\n\n\t\t// Check if we have an English or English US locale. If so fall to default since that is our\n\t\t// English translation (we don't ship *.nls.en.json files)\n\t\tif (locale && (locale === 'en' || locale === 'en-us')) {\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t}\n\n\t\tconst initialLocale = locale;\n\n\t\tperf.mark('nlsGeneration:start');\n\n\t\tconst defaultResult = function (locale) {\n\t\t\tperf.mark('nlsGeneration:end');\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t};\n\t\ttry {\n\t\t\tif (!commit) {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\tconst configs = getLanguagePackConfigurations(userDataPath);\n\t\t\tif (!configs) {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\tlocale = resolveLanguagePackLocale(configs, locale);\n\t\t\tif (!locale) {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\tconst packConfig = configs[locale];\n\t\t\tlet mainPack;\n\t\t\tif (!packConfig || typeof packConfig.hash !== 'string' || !packConfig.translations || typeof (mainPack = packConfig.translations['vscode']) !== 'string') {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\treturn exists(mainPack).then(fileExists => {\n\t\t\t\tif (!fileExists) {\n\t\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t\t}\n\t\t\t\tconst packId = packConfig.hash + '.' + locale;\n\t\t\t\tconst cacheRoot = path.join(userDataPath, 'clp', packId);\n\t\t\t\tconst coreLocation = path.join(cacheRoot, commit);\n\t\t\t\tconst translationsConfigFile = path.join(cacheRoot, 'tcf.json');\n\t\t\t\tconst corruptedFile = path.join(cacheRoot, 'corrupted.info');\n\t\t\t\tconst result = {\n\t\t\t\t\tlocale: initialLocale,\n\t\t\t\t\tavailableLanguages: { '*': locale },\n\t\t\t\t\t_languagePackId: packId,\n\t\t\t\t\t_translationsConfigFile: translationsConfigFile,\n\t\t\t\t\t_cacheRoot: cacheRoot,\n\t\t\t\t\t_resolvedLanguagePackCoreLocation: coreLocation,\n\t\t\t\t\t_corruptedFile: corruptedFile\n\t\t\t\t};\n\t\t\t\treturn exists(corruptedFile).then(corrupted => {\n\t\t\t\t\t// The nls cache directory is corrupted.\n\t\t\t\t\tlet toDelete;\n\t\t\t\t\tif (corrupted) {\n\t\t\t\t\t\ttoDelete = rimraf(cacheRoot);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttoDelete = Promise.resolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t\treturn toDelete.then(() => {\n\t\t\t\t\t\treturn exists(coreLocation).then(fileExists => {\n\t\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\t\t// We don't wait for this. No big harm if we can't touch\n\t\t\t\t\t\t\t\ttouch(coreLocation).catch(() => { });\n\t\t\t\t\t\t\t\tperf.mark('nlsGeneration:end');\n\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn mkdirp(coreLocation).then(() => {\n\t\t\t\t\t\t\t\treturn Promise.all([readFile(metaDataFile), readFile(mainPack)]);\n\t\t\t\t\t\t\t}).then(values => {\n\t\t\t\t\t\t\t\tconst metadata = JSON.parse(values[0]);\n\t\t\t\t\t\t\t\tconst packData = JSON.parse(values[1]).contents;\n\t\t\t\t\t\t\t\tconst bundles = Object.keys(metadata.bundles);\n\t\t\t\t\t\t\t\tconst writes = [];\n\t\t\t\t\t\t\t\tfor (const bundle of bundles) {\n\t\t\t\t\t\t\t\t\tconst modules = metadata.bundles[bundle];\n\t\t\t\t\t\t\t\t\tconst target = Object.create(null);\n\t\t\t\t\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\t\t\t\t\tconst keys = metadata.keys[module];\n\t\t\t\t\t\t\t\t\t\tconst defaultMessages = metadata.messages[module];\n\t\t\t\t\t\t\t\t\t\tconst translations = packData[module];\n\t\t\t\t\t\t\t\t\t\tlet targetStrings;\n\t\t\t\t\t\t\t\t\t\tif (translations) {\n\t\t\t\t\t\t\t\t\t\t\ttargetStrings = [];\n\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst elem = keys[i];\n\t\t\t\t\t\t\t\t\t\t\t\tconst key = typeof elem === 'string' ? elem : elem.key;\n\t\t\t\t\t\t\t\t\t\t\t\tlet translatedMessage = translations[key];\n\t\t\t\t\t\t\t\t\t\t\t\tif (translatedMessage === undefined) {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttranslatedMessage = defaultMessages[i];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\ttargetStrings.push(translatedMessage);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\ttargetStrings = defaultMessages;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttarget[module] = targetStrings;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\twrites.push(writeFile(path.join(coreLocation, bundle.replace(/\\//g, '!') + '.nls.json'), JSON.stringify(target)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twrites.push(writeFile(translationsConfigFile, JSON.stringify(packConfig.translations)));\n\t\t\t\t\t\t\t\treturn Promise.all(writes);\n\t\t\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t\t\tperf.mark('nlsGeneration:end');\n\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\t\t\tconsole.error('Generating translation files failed.', err);\n\t\t\t\t\t\t\t\treturn defaultResult(locale);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.error('Generating translation files failed.', err);\n\t\t\treturn defaultResult(locale);\n\t\t}\n\t}\n\n\treturn {\n\t\tgetNLSConfiguration\n\t};\n}\n\n\nif (typeof define === 'function') {\n\t// amd\n\tdefine(__m[90/*vs/base/node/languagePacks*/], __M([41/*path*/,19/*fs*/,166/*vs/base/common/performance*/]), function (path, fs, perf) { return factory(require.__$__nodeRequire, path, fs, perf); });\n} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\tconst path = require('path');\n\tconst fs = require('fs');\n\tconst perf = require('../common/performance');\n\tmodule.exports = factory(require, path, fs, perf);\n} else {\n\tthrow new Error('Unknown context');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n */\nexport function ok(value?: unknown, message?: string) {\n\tif (!value) {\n\t\tthrow new Error(message ? `Assertion failed (${message})` : 'Assertion Failed');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function createDecorator(mapFn: (fn: Function, key: string) => Function): Function {\n\treturn (target: any, key: string, descriptor: any) => {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tdescriptor[fnKey!] = mapFn(fn, key);\n\t};\n}\n\nlet memoizeId = 0;\nexport function createMemoizer() {\n\tconst memoizeKeyPrefix = `$memoize${memoizeId++}`;\n\tlet self: any = undefined;\n\n\tconst result = function memoize(target: any, key: string, descriptor: any) {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\n\t\t\tif (fn!.length !== 0) {\n\t\t\t\tconsole.warn('Memoize should only be used in functions with zero parameters');\n\t\t\t}\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tconst memoizeKey = `${memoizeKeyPrefix}:${key}`;\n\t\tdescriptor[fnKey!] = function (...args: any[]) {\n\t\t\tself = this;\n\n\t\t\tif (!this.hasOwnProperty(memoizeKey)) {\n\t\t\t\tObject.defineProperty(this, memoizeKey, {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: fn!.apply(this, args)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this[memoizeKey];\n\t\t};\n\t};\n\n\tresult.clear = () => {\n\t\tif (typeof self === 'undefined') {\n\t\t\treturn;\n\t\t}\n\t\tObject.getOwnPropertyNames(self).forEach(property => {\n\t\t\tif (property.indexOf(memoizeKeyPrefix) === 0) {\n\t\t\t\tdelete self[property];\n\t\t\t}\n\t\t});\n\t};\n\n\treturn result;\n}\n\nexport function memoize(target: any, key: string, descriptor: any) {\n\treturn createMemoizer()(target, key, descriptor);\n}\n\nexport interface IDebounceReducer<T> {\n\t(previousValue: T, ...args: any[]): T;\n}\n\nexport function debounce<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$debounce$${key}`;\n\t\tconst resultKey = `$debounce$result$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\n\t\t\tclearTimeout(this[timerKey]);\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t\targs = [this[resultKey]];\n\t\t\t}\n\n\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\tfn.apply(this, args);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}, delay);\n\t\t};\n\t});\n}\n\nexport function throttle<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$throttle$timer$${key}`;\n\t\tconst resultKey = `$throttle$result$${key}`;\n\t\tconst lastRunKey = `$throttle$lastRun$${key}`;\n\t\tconst pendingKey = `$throttle$pending$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\t\t\tif (this[lastRunKey] === null || this[lastRunKey] === undefined) {\n\t\t\t\tthis[lastRunKey] = -Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t}\n\n\t\t\tif (this[pendingKey]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextTime = this[lastRunKey] + delay;\n\t\t\tif (nextTime <= Date.now()) {\n\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t} else {\n\t\t\t\tthis[pendingKey] = true;\n\t\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\t\tthis[pendingKey] = false;\n\t\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t\t}, nextTime - Date.now());\n\t\t\t}\n\t\t};\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class NotSupportedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotSupported');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort<T>(data: T[], compare: Compare<T>): T[] {\n\t_sort(data, compare, 0, data.length - 1, []);\n\treturn data;\n}\n\nfunction _merge<T>(a: T[], compare: Compare<T>, lo: number, mid: number, hi: number, aux: T[]): void {\n\tlet leftIdx = lo, rightIdx = mid + 1;\n\tfor (let i = lo; i <= hi; i++) {\n\t\taux[i] = a[i];\n\t}\n\tfor (let i = lo; i <= hi; i++) {\n\t\tif (leftIdx > mid) {\n\t\t\t// left side consumed\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else if (rightIdx > hi) {\n\t\t\t// right side consumed\n\t\t\ta[i] = aux[leftIdx++];\n\t\t} else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n\t\t\t// right element is less -> comes first\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else {\n\t\t\t// left element comes first (less or equal)\n\t\t\ta[i] = aux[leftIdx++];\n\t\t}\n\t}\n}\n\nfunction _sort<T>(a: T[], compare: Compare<T>, lo: number, hi: number, aux: T[]) {\n\tif (hi <= lo) {\n\t\treturn;\n\t}\n\tconst mid = lo + ((hi - lo) / 2) | 0;\n\t_sort(a, compare, lo, mid, aux);\n\t_sort(a, compare, mid + 1, hi, aux);\n\tif (compare(a[mid], a[mid + 1]) <= 0) {\n\t\t// left and right are sorted and if the last-left element is less\n\t\t// or equals than the first-right element there is nothing else\n\t\t// to do\n\t\treturn;\n\t}\n\t_merge(a, compare, lo, mid, hi, aux);\n}\n\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of mergeSort(data.slice(0), compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[], added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // nextTick() would starve I/O.\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow canceled();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsey values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function distinctES6<T>(array: ReadonlyArray<T>): T[] {\n\tconst seen = new Set<T>();\n\treturn array.filter(element => {\n\t\tif (seen.has(element)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(element);\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\t\treturn true;\n\t};\n}\n\nexport function lastIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n/**\n * @deprecated ES6: use `Array.findIndex`\n */\nexport function firstIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = 0; i < array.length; i++) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n\n/**\n * @deprecated ES6: use `Array.find`\n */\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T): T;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): T | undefined;\nexport function first<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean, notFoundValue: T | undefined = undefined): T | undefined {\n\tconst index = firstIndex(array, fn);\n\treturn index < 0 ? notFoundValue : array[index];\n}\n\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function firstOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[0] : notFoundValue;\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper: (t: T) => R): { [key: string]: R; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper?: (t: T) => R): { [key: string]: R; } {\n\treturn array.reduce((r, t) => {\n\t\tr[indexer(t)] = mapper ? mapper(t) : t;\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => remove(array, element);\n}\n\n/**\n * Removes an element from an array if it can be found.\n */\nexport function remove<T>(array: T[], element: T): T | undefined {\n\tconst index = array.indexOf(element);\n\tif (index > -1) {\n\t\tarray.splice(index, 1);\n\n\t\treturn element;\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\n\n/**\n * @deprecated ES6: use `Array.find`\n */\nexport function find<T>(arr: ArrayLike<T>, predicate: (value: T, index: number, arr: ArrayLike<T>) => any): T | undefined {\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tconst element = arr[i];\n\t\tif (predicate(element, i, arr)) {\n\t\t\treturn element;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n\nexport function toArray<T>(iterable: IterableIterator<T>): T[] {\n\tconst result: T[] = [];\n\tfor (let element of iterable) {\n\t\tresult.push(element);\n\t}\n\treturn result;\n}\n\nexport function getRandomElement<T>(arr: T[]): T | undefined {\n\treturn arr[Math.floor(Math.random() * arr.length)];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: unknown, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: unknown;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as unknown as T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport namespace Iterable {\n\n\texport function is<T = any>(thing: any): thing is IterableIterator<T> {\n\t\treturn thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n\t}\n\n\tconst _empty: Iterable<any> = Object.freeze([]);\n\texport function empty<T = any>(): Iterable<T> {\n\t\treturn _empty;\n\t}\n\n\texport function* single<T>(element: T): Iterable<T> {\n\t\tyield element;\n\t}\n\n\texport function from<T>(iterable: Iterable<T> | undefined | null): Iterable<T> {\n\t\treturn iterable || _empty;\n\t}\n\n\texport function first<T>(iterable: Iterable<T>): T | undefined {\n\t\treturn iterable[Symbol.iterator]().next().value;\n\t}\n\n\texport function some<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): boolean {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texport function* filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T> {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* map<T, R>(iterable: Iterable<T>, fn: (t: T) => R): Iterable<R> {\n\t\tfor (const element of iterable) {\n\t\t\tyield fn(element);\n\t\t}\n\t}\n\n\texport function* concat<T>(...iterables: Iterable<T>[]): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function consume<T>(iterable: Iterable<T>, atMost: number = Number.POSITIVE_INFINITY): [T[], Iterable<T>] {\n\t\tconst consumed: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn [consumed, iterable];\n\t\t}\n\n\t\tconst iterator = iterable[Symbol.iterator]();\n\n\t\tfor (let i = 0; i < atMost; i++) {\n\t\t\tconst next = iterator.next();\n\n\t\t\tif (next.done) {\n\t\t\t\treturn [consumed, Iterable.empty()];\n\t\t\t}\n\n\t\t\tconsumed.push(next.value);\n\t\t}\n\n\t\treturn [consumed, { [Symbol.iterator]() { return iterator; } }];\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum ScanError {\n\tNone = 0,\n\tUnexpectedEndOfComment = 1,\n\tUnexpectedEndOfString = 2,\n\tUnexpectedEndOfNumber = 3,\n\tInvalidUnicode = 4,\n\tInvalidEscapeCharacter = 5,\n\tInvalidCharacter = 6\n}\n\nexport const enum SyntaxKind {\n\tOpenBraceToken = 1,\n\tCloseBraceToken = 2,\n\tOpenBracketToken = 3,\n\tCloseBracketToken = 4,\n\tCommaToken = 5,\n\tColonToken = 6,\n\tNullKeyword = 7,\n\tTrueKeyword = 8,\n\tFalseKeyword = 9,\n\tStringLiteral = 10,\n\tNumericLiteral = 11,\n\tLineCommentTrivia = 12,\n\tBlockCommentTrivia = 13,\n\tLineBreakTrivia = 14,\n\tTrivia = 15,\n\tUnknown = 16,\n\tEOF = 17\n}\n\n/**\n * The scanner object, representing a JSON scanner at a position in the input string.\n */\nexport interface JSONScanner {\n\t/**\n\t * Sets the scan position to a new offset. A call to 'scan' is needed to get the first token.\n\t */\n\tsetPosition(pos: number): void;\n\t/**\n\t * Read the next token. Returns the token code.\n\t */\n\tscan(): SyntaxKind;\n\t/**\n\t * Returns the current scan position, which is after the last read token.\n\t */\n\tgetPosition(): number;\n\t/**\n\t * Returns the last read token.\n\t */\n\tgetToken(): SyntaxKind;\n\t/**\n\t * Returns the last read token value. The value for strings is the decoded string content. For numbers its of type number, for boolean it's true or false.\n\t */\n\tgetTokenValue(): string;\n\t/**\n\t * The start offset of the last read token.\n\t */\n\tgetTokenOffset(): number;\n\t/**\n\t * The length of the last read token.\n\t */\n\tgetTokenLength(): number;\n\t/**\n\t * An error code of the last scan.\n\t */\n\tgetTokenError(): ScanError;\n}\n\n\n\nexport interface ParseError {\n\terror: ParseErrorCode;\n\toffset: number;\n\tlength: number;\n}\n\nexport const enum ParseErrorCode {\n\tInvalidSymbol = 1,\n\tInvalidNumberFormat = 2,\n\tPropertyNameExpected = 3,\n\tValueExpected = 4,\n\tColonExpected = 5,\n\tCommaExpected = 6,\n\tCloseBraceExpected = 7,\n\tCloseBracketExpected = 8,\n\tEndOfFileExpected = 9,\n\tInvalidCommentToken = 10,\n\tUnexpectedEndOfComment = 11,\n\tUnexpectedEndOfString = 12,\n\tUnexpectedEndOfNumber = 13,\n\tInvalidUnicode = 14,\n\tInvalidEscapeCharacter = 15,\n\tInvalidCharacter = 16\n}\n\nexport type NodeType = 'object' | 'array' | 'property' | 'string' | 'number' | 'boolean' | 'null';\n\nexport interface Node {\n\treadonly type: NodeType;\n\treadonly value?: any;\n\treadonly offset: number;\n\treadonly length: number;\n\treadonly colonOffset?: number;\n\treadonly parent?: Node;\n\treadonly children?: Node[];\n}\n\nexport type Segment = string | number;\nexport type JSONPath = Segment[];\n\nexport interface Location {\n\t/**\n\t * The previous property key or literal value (string, number, boolean or null) or undefined.\n\t */\n\tpreviousNode?: Node;\n\t/**\n\t * The path describing the location in the JSON document. The path consists of a sequence strings\n\t * representing an object property or numbers for array indices.\n\t */\n\tpath: JSONPath;\n\t/**\n\t * Matches the locations path against a pattern consisting of strings (for properties) and numbers (for array indices).\n\t * '*' will match a single segment, of any property name or index.\n\t * '**' will match a sequece of segments or no segment, of any property name or index.\n\t */\n\tmatches: (patterns: JSONPath) => boolean;\n\t/**\n\t * If set, the location's offset is at a property key.\n\t */\n\tisAtPropertyKey: boolean;\n}\n\nexport interface ParseOptions {\n\tdisallowComments?: boolean;\n\tallowTrailingComma?: boolean;\n\tallowEmptyContent?: boolean;\n}\n\nexport namespace ParseOptions {\n\texport const DEFAULT = {\n\t\tallowTrailingComma: true\n\t};\n}\n\nexport interface JSONVisitor {\n\t/**\n\t * Invoked when an open brace is encountered and an object is started. The offset and length represent the location of the open brace.\n\t */\n\tonObjectBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a property is encountered. The offset and length represent the location of the property name.\n\t */\n\tonObjectProperty?: (property: string, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing brace is encountered and an object is completed. The offset and length represent the location of the closing brace.\n\t */\n\tonObjectEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when an open bracket is encountered. The offset and length represent the location of the open bracket.\n\t */\n\tonArrayBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing bracket is encountered. The offset and length represent the location of the closing bracket.\n\t */\n\tonArrayEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a literal value is encountered. The offset and length represent the location of the literal value.\n\t */\n\tonLiteralValue?: (value: any, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a comma or colon separator is encountered. The offset and length represent the location of the separator.\n\t */\n\tonSeparator?: (character: string, offset: number, length: number) => void;\n\n\t/**\n\t * When comments are allowed, invoked when a line or block comment is encountered. The offset and length represent the location of the comment.\n\t */\n\tonComment?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked on an error.\n\t */\n\tonError?: (error: ParseErrorCode, offset: number, length: number) => void;\n}\n\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text: string, ignoreTrivia: boolean = false): JSONScanner {\n\n\tlet pos = 0,\n\t\tlen = text.length,\n\t\tvalue: string = '',\n\t\ttokenOffset = 0,\n\t\ttoken: SyntaxKind = SyntaxKind.Unknown,\n\t\tscanError: ScanError = ScanError.None;\n\n\tfunction scanHexDigits(count: number): number {\n\t\tlet digits = 0;\n\t\tlet hexValue = 0;\n\t\twhile (digits < count) {\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch >= CharacterCodes._0 && ch <= CharacterCodes._9) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes._0;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.A && ch <= CharacterCodes.F) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.A + 10;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.a && ch <= CharacterCodes.f) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.a + 10;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpos++;\n\t\t\tdigits++;\n\t\t}\n\t\tif (digits < count) {\n\t\t\thexValue = -1;\n\t\t}\n\t\treturn hexValue;\n\t}\n\n\tfunction setPosition(newPosition: number) {\n\t\tpos = newPosition;\n\t\tvalue = '';\n\t\ttokenOffset = 0;\n\t\ttoken = SyntaxKind.Unknown;\n\t\tscanError = ScanError.None;\n\t}\n\n\tfunction scanNumber(): string {\n\t\tconst start = pos;\n\t\tif (text.charCodeAt(pos) === CharacterCodes._0) {\n\t\t\tpos++;\n\t\t} else {\n\t\t\tpos++;\n\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t}\n\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.dot) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t\treturn text.substring(start, pos);\n\t\t\t}\n\t\t}\n\t\tlet end = pos;\n\t\tif (pos < text.length && (text.charCodeAt(pos) === CharacterCodes.E || text.charCodeAt(pos) === CharacterCodes.e)) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.plus || text.charCodeAt(pos) === CharacterCodes.minus) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t\tend = pos;\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t}\n\t\t}\n\t\treturn text.substring(start, end);\n\t}\n\n\tfunction scanString(): string {\n\n\t\tlet result = '',\n\t\t\tstart = pos;\n\n\t\twhile (true) {\n\t\t\tif (pos >= len) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch === CharacterCodes.doubleQuote) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ch === CharacterCodes.backslash) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tif (pos >= len) {\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst ch2 = text.charCodeAt(pos++);\n\t\t\t\tswitch (ch2) {\n\t\t\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\t\t\tresult += '\\\"';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.backslash:\n\t\t\t\t\t\tresult += '\\\\';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.slash:\n\t\t\t\t\t\tresult += '/';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.b:\n\t\t\t\t\t\tresult += '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.f:\n\t\t\t\t\t\tresult += '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.n:\n\t\t\t\t\t\tresult += '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.r:\n\t\t\t\t\t\tresult += '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.t:\n\t\t\t\t\t\tresult += '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.u:\n\t\t\t\t\t\tconst ch3 = scanHexDigits(4);\n\t\t\t\t\t\tif (ch3 >= 0) {\n\t\t\t\t\t\t\tresult += String.fromCharCode(ch3);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscanError = ScanError.InvalidUnicode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tscanError = ScanError.InvalidEscapeCharacter;\n\t\t\t\t}\n\t\t\t\tstart = pos;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ch >= 0 && ch <= 0x1F) {\n\t\t\t\tif (isLineBreak(ch)) {\n\t\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tscanError = ScanError.InvalidCharacter;\n\t\t\t\t\t// mark as error but continue with string\n\t\t\t\t}\n\t\t\t}\n\t\t\tpos++;\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction scanNext(): SyntaxKind {\n\n\t\tvalue = '';\n\t\tscanError = ScanError.None;\n\n\t\ttokenOffset = pos;\n\n\t\tif (pos >= len) {\n\t\t\t// at the end\n\t\t\ttokenOffset = len;\n\t\t\treturn token = SyntaxKind.EOF;\n\t\t}\n\n\t\tlet code = text.charCodeAt(pos);\n\t\t// trivia: whitespace\n\t\tif (isWhitespace(code)) {\n\t\t\tdo {\n\t\t\t\tpos++;\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t} while (isWhitespace(code));\n\n\t\t\treturn token = SyntaxKind.Trivia;\n\t\t}\n\n\t\t// trivia: newlines\n\t\tif (isLineBreak(code)) {\n\t\t\tpos++;\n\t\t\tvalue += String.fromCharCode(code);\n\t\t\tif (code === CharacterCodes.carriageReturn && text.charCodeAt(pos) === CharacterCodes.lineFeed) {\n\t\t\t\tpos++;\n\t\t\t\tvalue += '\\n';\n\t\t\t}\n\t\t\treturn token = SyntaxKind.LineBreakTrivia;\n\t\t}\n\n\t\tswitch (code) {\n\t\t\t// tokens: []{}:,\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBraceToken;\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBraceToken;\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBracketToken;\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBracketToken;\n\t\t\tcase CharacterCodes.colon:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.ColonToken;\n\t\t\tcase CharacterCodes.comma:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CommaToken;\n\n\t\t\t// strings\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\tpos++;\n\t\t\t\tvalue = scanString();\n\t\t\t\treturn token = SyntaxKind.StringLiteral;\n\n\t\t\t// comments\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\tconst start = pos - 1;\n\t\t\t\t// Single-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\twhile (pos < len) {\n\t\t\t\t\t\tif (isLineBreak(text.charCodeAt(pos))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\n\t\t\t\t\t}\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.LineCommentTrivia;\n\t\t\t\t}\n\n\t\t\t\t// Multi-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.asterisk) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\tconst safeLength = len - 1; // For lookahead.\n\t\t\t\t\tlet commentClosed = false;\n\t\t\t\t\twhile (pos < safeLength) {\n\t\t\t\t\t\tconst ch = text.charCodeAt(pos);\n\n\t\t\t\t\t\tif (ch === CharacterCodes.asterisk && text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\t\t\tpos += 2;\n\t\t\t\t\t\t\tcommentClosed = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!commentClosed) {\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tscanError = ScanError.UnexpectedEndOfComment;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.BlockCommentTrivia;\n\t\t\t\t}\n\t\t\t\t// just a single slash\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\n\t\t\t// numbers\n\t\t\tcase CharacterCodes.minus:\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\tif (pos === len || !isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t// found a minus, followed by a number so\n\t\t\t// we fall through to proceed with scanning\n\t\t\t// numbers\n\t\t\tcase CharacterCodes._0:\n\t\t\tcase CharacterCodes._1:\n\t\t\tcase CharacterCodes._2:\n\t\t\tcase CharacterCodes._3:\n\t\t\tcase CharacterCodes._4:\n\t\t\tcase CharacterCodes._5:\n\t\t\tcase CharacterCodes._6:\n\t\t\tcase CharacterCodes._7:\n\t\t\tcase CharacterCodes._8:\n\t\t\tcase CharacterCodes._9:\n\t\t\t\tvalue += scanNumber();\n\t\t\t\treturn token = SyntaxKind.NumericLiteral;\n\t\t\t// literals and unknown symbols\n\t\t\tdefault:\n\t\t\t\t// is a literal? Read the full word.\n\t\t\t\twhile (pos < len && isUnknownContentCharacter(code)) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t\t}\n\t\t\t\tif (tokenOffset !== pos) {\n\t\t\t\t\tvalue = text.substring(tokenOffset, pos);\n\t\t\t\t\t// keywords: true, false, null\n\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\tcase 'true': return token = SyntaxKind.TrueKeyword;\n\t\t\t\t\t\tcase 'false': return token = SyntaxKind.FalseKeyword;\n\t\t\t\t\t\tcase 'null': return token = SyntaxKind.NullKeyword;\n\t\t\t\t\t}\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t\t// some\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t}\n\t}\n\n\tfunction isUnknownContentCharacter(code: CharacterCodes) {\n\t\tif (isWhitespace(code) || isLineBreak(code)) {\n\t\t\treturn false;\n\t\t}\n\t\tswitch (code) {\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\tcase CharacterCodes.colon:\n\t\t\tcase CharacterCodes.comma:\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\n\tfunction scanNextNonTrivia(): SyntaxKind {\n\t\tlet result: SyntaxKind;\n\t\tdo {\n\t\t\tresult = scanNext();\n\t\t} while (result >= SyntaxKind.LineCommentTrivia && result <= SyntaxKind.Trivia);\n\t\treturn result;\n\t}\n\n\treturn {\n\t\tsetPosition: setPosition,\n\t\tgetPosition: () => pos,\n\t\tscan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n\t\tgetToken: () => token,\n\t\tgetTokenValue: () => value,\n\t\tgetTokenOffset: () => tokenOffset,\n\t\tgetTokenLength: () => pos - tokenOffset,\n\t\tgetTokenError: () => scanError\n\t};\n}\n\nfunction isWhitespace(ch: number): boolean {\n\treturn ch === CharacterCodes.space || ch === CharacterCodes.tab || ch === CharacterCodes.verticalTab || ch === CharacterCodes.formFeed ||\n\t\tch === CharacterCodes.nonBreakingSpace || ch === CharacterCodes.ogham || ch >= CharacterCodes.enQuad && ch <= CharacterCodes.zeroWidthSpace ||\n\t\tch === CharacterCodes.narrowNoBreakSpace || ch === CharacterCodes.mathematicalSpace || ch === CharacterCodes.ideographicSpace || ch === CharacterCodes.byteOrderMark;\n}\n\nfunction isLineBreak(ch: number): boolean {\n\treturn ch === CharacterCodes.lineFeed || ch === CharacterCodes.carriageReturn || ch === CharacterCodes.lineSeparator || ch === CharacterCodes.paragraphSeparator;\n}\n\nfunction isDigit(ch: number): boolean {\n\treturn ch >= CharacterCodes._0 && ch <= CharacterCodes._9;\n}\n\nconst enum CharacterCodes {\n\tnullCharacter = 0,\n\tmaxAsciiCharacter = 0x7F,\n\n\tlineFeed = 0x0A,              // \\n\n\tcarriageReturn = 0x0D,        // \\r\n\tlineSeparator = 0x2028,\n\tparagraphSeparator = 0x2029,\n\n\t// REVIEW: do we need to support this?  The scanner doesn't, but our IText does.  This seems\n\t// like an odd disparity?  (Or maybe it's completely fine for them to be different).\n\tnextLine = 0x0085,\n\n\t// Unicode 3.0 space characters\n\tspace = 0x0020,   // \" \"\n\tnonBreakingSpace = 0x00A0,   //\n\tenQuad = 0x2000,\n\temQuad = 0x2001,\n\tenSpace = 0x2002,\n\temSpace = 0x2003,\n\tthreePerEmSpace = 0x2004,\n\tfourPerEmSpace = 0x2005,\n\tsixPerEmSpace = 0x2006,\n\tfigureSpace = 0x2007,\n\tpunctuationSpace = 0x2008,\n\tthinSpace = 0x2009,\n\thairSpace = 0x200A,\n\tzeroWidthSpace = 0x200B,\n\tnarrowNoBreakSpace = 0x202F,\n\tideographicSpace = 0x3000,\n\tmathematicalSpace = 0x205F,\n\togham = 0x1680,\n\n\t_ = 0x5F,\n\t$ = 0x24,\n\n\t_0 = 0x30,\n\t_1 = 0x31,\n\t_2 = 0x32,\n\t_3 = 0x33,\n\t_4 = 0x34,\n\t_5 = 0x35,\n\t_6 = 0x36,\n\t_7 = 0x37,\n\t_8 = 0x38,\n\t_9 = 0x39,\n\n\ta = 0x61,\n\tb = 0x62,\n\tc = 0x63,\n\td = 0x64,\n\te = 0x65,\n\tf = 0x66,\n\tg = 0x67,\n\th = 0x68,\n\ti = 0x69,\n\tj = 0x6A,\n\tk = 0x6B,\n\tl = 0x6C,\n\tm = 0x6D,\n\tn = 0x6E,\n\to = 0x6F,\n\tp = 0x70,\n\tq = 0x71,\n\tr = 0x72,\n\ts = 0x73,\n\tt = 0x74,\n\tu = 0x75,\n\tv = 0x76,\n\tw = 0x77,\n\tx = 0x78,\n\ty = 0x79,\n\tz = 0x7A,\n\n\tA = 0x41,\n\tB = 0x42,\n\tC = 0x43,\n\tD = 0x44,\n\tE = 0x45,\n\tF = 0x46,\n\tG = 0x47,\n\tH = 0x48,\n\tI = 0x49,\n\tJ = 0x4A,\n\tK = 0x4B,\n\tL = 0x4C,\n\tM = 0x4D,\n\tN = 0x4E,\n\tO = 0x4F,\n\tP = 0x50,\n\tQ = 0x51,\n\tR = 0x52,\n\tS = 0x53,\n\tT = 0x54,\n\tU = 0x55,\n\tV = 0x56,\n\tW = 0x57,\n\tX = 0x58,\n\tY = 0x59,\n\tZ = 0x5A,\n\n\tampersand = 0x26,             // &\n\tasterisk = 0x2A,              // *\n\tat = 0x40,                    // @\n\tbackslash = 0x5C,             // \\\n\tbar = 0x7C,                   // |\n\tcaret = 0x5E,                 // ^\n\tcloseBrace = 0x7D,            // }\n\tcloseBracket = 0x5D,          // ]\n\tcloseParen = 0x29,            // )\n\tcolon = 0x3A,                 // :\n\tcomma = 0x2C,                 // ,\n\tdot = 0x2E,                   // .\n\tdoubleQuote = 0x22,           // \"\n\tequals = 0x3D,                // =\n\texclamation = 0x21,           // !\n\tgreaterThan = 0x3E,           // >\n\tlessThan = 0x3C,              // <\n\tminus = 0x2D,                 // -\n\topenBrace = 0x7B,             // {\n\topenBracket = 0x5B,           // [\n\topenParen = 0x28,             // (\n\tpercent = 0x25,               // %\n\tplus = 0x2B,                  // +\n\tquestion = 0x3F,              // ?\n\tsemicolon = 0x3B,             // ;\n\tsingleQuote = 0x27,           // '\n\tslash = 0x2F,                 // /\n\ttilde = 0x7E,                 // ~\n\n\tbackspace = 0x08,             // \\b\n\tformFeed = 0x0C,              // \\f\n\tbyteOrderMark = 0xFEFF,\n\ttab = 0x09,                   // \\t\n\tverticalTab = 0x0B,           // \\v\n}\n\ninterface NodeImpl extends Node {\n\ttype: NodeType;\n\tvalue?: any;\n\toffset: number;\n\tlength: number;\n\tcolonOffset?: number;\n\tparent?: NodeImpl;\n\tchildren?: NodeImpl[];\n}\n\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text: string, position: number): Location {\n\tconst segments: Segment[] = []; // strings or numbers\n\tconst earlyReturnException = new Object();\n\tlet previousNode: NodeImpl | undefined = undefined;\n\tconst previousNodeInst: NodeImpl = {\n\t\tvalue: {},\n\t\toffset: 0,\n\t\tlength: 0,\n\t\ttype: 'object',\n\t\tparent: undefined\n\t};\n\tlet isAtPropertyKey = false;\n\tfunction setPreviousNode(value: string, offset: number, length: number, type: NodeType) {\n\t\tpreviousNodeInst.value = value;\n\t\tpreviousNodeInst.offset = offset;\n\t\tpreviousNodeInst.length = length;\n\t\tpreviousNodeInst.type = type;\n\t\tpreviousNodeInst.colonOffset = undefined;\n\t\tpreviousNode = previousNodeInst;\n\t}\n\ttry {\n\n\t\tvisit(text, {\n\t\t\tonObjectBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tisAtPropertyKey = position > offset;\n\t\t\t\tsegments.push(''); // push a placeholder (will be replaced)\n\t\t\t},\n\t\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(name, offset, length, 'property');\n\t\t\t\tsegments[segments.length - 1] = name;\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.push(0);\n\t\t\t},\n\t\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(value, offset, length, getNodeType(value));\n\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tif (sep === ':' && previousNode && previousNode.type === 'property') {\n\t\t\t\t\tpreviousNode.colonOffset = offset;\n\t\t\t\t\tisAtPropertyKey = false;\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tconst last = segments[segments.length - 1];\n\t\t\t\t\tif (typeof last === 'number') {\n\t\t\t\t\t\tsegments[segments.length - 1] = last + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisAtPropertyKey = true;\n\t\t\t\t\t\tsegments[segments.length - 1] = '';\n\t\t\t\t\t}\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (e) {\n\t\tif (e !== earlyReturnException) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\treturn {\n\t\tpath: segments,\n\t\tpreviousNode,\n\t\tisAtPropertyKey,\n\t\tmatches: (pattern: Segment[]) => {\n\t\t\tlet k = 0;\n\t\t\tfor (let i = 0; k < pattern.length && i < segments.length; i++) {\n\t\t\t\tif (pattern[k] === segments[i] || pattern[k] === '*') {\n\t\t\t\t\tk++;\n\t\t\t\t} else if (pattern[k] !== '**') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn k === pattern.length;\n\t\t}\n\t};\n}\n\n\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): any {\n\tlet currentProperty: string | null = null;\n\tlet currentParent: any = [];\n\tconst previousParents: any[] = [];\n\n\tfunction onValue(value: any) {\n\t\tif (Array.isArray(currentParent)) {\n\t\t\t(<any[]>currentParent).push(value);\n\t\t} else if (currentProperty !== null) {\n\t\t\tcurrentParent[currentProperty] = value;\n\t\t}\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: () => {\n\t\t\tconst object = {};\n\t\t\tonValue(object);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = object;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonObjectProperty: (name: string) => {\n\t\t\tcurrentProperty = name;\n\t\t},\n\t\tonObjectEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonArrayBegin: () => {\n\t\t\tconst array: any[] = [];\n\t\t\tonValue(array);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = array;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonArrayEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonLiteralValue: onValue,\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\treturn currentParent[0];\n}\n\n\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): Node {\n\tlet currentParent: NodeImpl = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n\n\tfunction ensurePropertyComplete(endOffset: number) {\n\t\tif (currentParent.type === 'property') {\n\t\t\tcurrentParent.length = endOffset - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t}\n\t}\n\n\tfunction onValue(valueNode: Node): Node {\n\t\tcurrentParent.children!.push(valueNode);\n\t\treturn valueNode;\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: (offset: number) => {\n\t\t\tcurrentParent = onValue({ type: 'object', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'property', offset, length: -1, parent: currentParent, children: [] });\n\t\t\tcurrentParent.children!.push({ type: 'string', value: name, offset, length, parent: currentParent });\n\t\t},\n\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'array', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\tonValue({ type: getNodeType(value), offset, length, parent: currentParent, value });\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\tif (currentParent.type === 'property') {\n\t\t\t\tif (sep === ':') {\n\t\t\t\t\tcurrentParent.colonOffset = offset;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tensurePropertyComplete(offset);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\n\tconst result = currentParent.children![0];\n\tif (result) {\n\t\tdelete result.parent;\n\t}\n\treturn result;\n}\n\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root: Node, path: JSONPath): Node | undefined {\n\tif (!root) {\n\t\treturn undefined;\n\t}\n\tlet node = root;\n\tfor (let segment of path) {\n\t\tif (typeof segment === 'string') {\n\t\t\tif (node.type !== 'object' || !Array.isArray(node.children)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tlet found = false;\n\t\t\tfor (const propertyNode of node.children) {\n\t\t\t\tif (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n\t\t\t\t\tnode = propertyNode.children[1];\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tconst index = <number>segment;\n\t\t\tif (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnode = node.children[index];\n\t\t}\n\t}\n\treturn node;\n}\n\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node: Node): JSONPath {\n\tif (!node.parent || !node.parent.children) {\n\t\treturn [];\n\t}\n\tconst path = getNodePath(node.parent);\n\tif (node.parent.type === 'property') {\n\t\tconst key = node.parent.children[0].value;\n\t\tpath.push(key);\n\t} else if (node.parent.type === 'array') {\n\t\tconst index = node.parent.children.indexOf(node);\n\t\tif (index !== -1) {\n\t\t\tpath.push(index);\n\t\t}\n\t}\n\treturn path;\n}\n\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node: Node): any {\n\tswitch (node.type) {\n\t\tcase 'array':\n\t\t\treturn node.children!.map(getNodeValue);\n\t\tcase 'object':\n\t\t\tconst obj = Object.create(null);\n\t\t\tfor (let prop of node.children!) {\n\t\t\t\tconst valueNode = prop.children![1];\n\t\t\t\tif (valueNode) {\n\t\t\t\t\tobj[prop.children![0].value] = getNodeValue(valueNode);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj;\n\t\tcase 'null':\n\t\tcase 'string':\n\t\tcase 'number':\n\t\tcase 'boolean':\n\t\t\treturn node.value;\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n\n}\n\nexport function contains(node: Node, offset: number, includeRightBound = false): boolean {\n\treturn (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node: Node, offset: number, includeRightBound = false): Node | undefined {\n\tif (contains(node, offset, includeRightBound)) {\n\t\tconst children = node.children;\n\t\tif (Array.isArray(children)) {\n\t\t\tfor (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n\t\t\t\tconst item = findNodeAtOffset(children[i], offset, includeRightBound);\n\t\t\t\tif (item) {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text: string, visitor: JSONVisitor, options: ParseOptions = ParseOptions.DEFAULT): any {\n\n\tconst _scanner = createScanner(text, false);\n\n\tfunction toNoArgVisit(visitFunction?: (offset: number, length: number) => void): () => void {\n\t\treturn visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\tfunction toOneArgVisit<T>(visitFunction?: (arg: T, offset: number, length: number) => void): (arg: T) => void {\n\t\treturn visitFunction ? (arg: T) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\n\tconst onObjectBegin = toNoArgVisit(visitor.onObjectBegin),\n\t\tonObjectProperty = toOneArgVisit(visitor.onObjectProperty),\n\t\tonObjectEnd = toNoArgVisit(visitor.onObjectEnd),\n\t\tonArrayBegin = toNoArgVisit(visitor.onArrayBegin),\n\t\tonArrayEnd = toNoArgVisit(visitor.onArrayEnd),\n\t\tonLiteralValue = toOneArgVisit(visitor.onLiteralValue),\n\t\tonSeparator = toOneArgVisit(visitor.onSeparator),\n\t\tonComment = toNoArgVisit(visitor.onComment),\n\t\tonError = toOneArgVisit(visitor.onError);\n\n\tconst disallowComments = options && options.disallowComments;\n\tconst allowTrailingComma = options && options.allowTrailingComma;\n\tfunction scanNext(): SyntaxKind {\n\t\twhile (true) {\n\t\t\tconst token = _scanner.scan();\n\t\t\tswitch (_scanner.getTokenError()) {\n\t\t\t\tcase ScanError.InvalidUnicode:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidUnicode);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidEscapeCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidEscapeCharacter);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfNumber:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfNumber);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfComment:\n\t\t\t\t\tif (!disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfComment);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfString:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfString);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidCharacter);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tswitch (token) {\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidCommentToken);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonComment();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidSymbol);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Trivia:\n\t\t\t\tcase SyntaxKind.LineBreakTrivia:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn token;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleError(error: ParseErrorCode, skipUntilAfter: SyntaxKind[] = [], skipUntil: SyntaxKind[] = []): void {\n\t\tonError(error);\n\t\tif (skipUntilAfter.length + skipUntil.length > 0) {\n\t\t\tlet token = _scanner.getToken();\n\t\t\twhile (token !== SyntaxKind.EOF) {\n\t\t\t\tif (skipUntilAfter.indexOf(token) !== -1) {\n\t\t\t\t\tscanNext();\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (skipUntil.indexOf(token) !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttoken = scanNext();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseString(isValue: boolean): boolean {\n\t\tconst value = _scanner.getTokenValue();\n\t\tif (isValue) {\n\t\t\tonLiteralValue(value);\n\t\t} else {\n\t\t\tonObjectProperty(value);\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseLiteral(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\tlet value = 0;\n\t\t\t\ttry {\n\t\t\t\t\tvalue = JSON.parse(_scanner.getTokenValue());\n\t\t\t\t\tif (typeof value !== 'number') {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t}\n\t\t\t\tonLiteralValue(value);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tonLiteralValue(null);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tonLiteralValue(true);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tonLiteralValue(false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseProperty(): boolean {\n\t\tif (_scanner.getToken() !== SyntaxKind.StringLiteral) {\n\t\t\thandleError(ParseErrorCode.PropertyNameExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\treturn false;\n\t\t}\n\t\tparseString(false);\n\t\tif (_scanner.getToken() === SyntaxKind.ColonToken) {\n\t\t\tonSeparator(':');\n\t\t\tscanNext(); // consume colon\n\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t} else {\n\t\t\thandleError(ParseErrorCode.ColonExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseObject(): boolean {\n\t\tonObjectBegin();\n\t\tscanNext(); // consume open brace\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBraceToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBraceToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseProperty()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonObjectEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBraceToken) {\n\t\t\thandleError(ParseErrorCode.CloseBraceExpected, [SyntaxKind.CloseBraceToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close brace\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseArray(): boolean {\n\t\tonArrayBegin();\n\t\tscanNext(); // consume open bracket\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBracketToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBracketToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBracketToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonArrayEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBracketToken) {\n\t\t\thandleError(ParseErrorCode.CloseBracketExpected, [SyntaxKind.CloseBracketToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close bracket\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseValue(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\treturn parseArray();\n\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\treturn parseObject();\n\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\treturn parseString(true);\n\t\t\tdefault:\n\t\t\t\treturn parseLiteral();\n\t\t}\n\t}\n\n\tscanNext();\n\tif (_scanner.getToken() === SyntaxKind.EOF) {\n\t\tif (options.allowEmptyContent) {\n\t\t\treturn true;\n\t\t}\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (!parseValue()) {\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (_scanner.getToken() !== SyntaxKind.EOF) {\n\t\thandleError(ParseErrorCode.EndOfFileExpected, [], []);\n\t}\n\treturn true;\n}\n\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text: string, replaceCh?: string): string {\n\n\tlet _scanner = createScanner(text),\n\t\tparts: string[] = [],\n\t\tkind: SyntaxKind,\n\t\toffset = 0,\n\t\tpos: number;\n\n\tdo {\n\t\tpos = _scanner.getPosition();\n\t\tkind = _scanner.scan();\n\t\tswitch (kind) {\n\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\tcase SyntaxKind.EOF:\n\t\t\t\tif (offset !== pos) {\n\t\t\t\t\tparts.push(text.substring(offset, pos));\n\t\t\t\t}\n\t\t\t\tif (replaceCh !== undefined) {\n\t\t\t\t\tparts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n\t\t\t\t}\n\t\t\t\toffset = _scanner.getPosition();\n\t\t\t\tbreak;\n\t\t}\n\t} while (kind !== SyntaxKind.EOF);\n\n\treturn parts.join('');\n}\n\nexport function getNodeType(value: any): NodeType {\n\tswitch (typeof value) {\n\t\tcase 'boolean': return 'boolean';\n\t\tcase 'number': return 'number';\n\t\tcase 'string': return 'string';\n\t\tcase 'object': {\n\t\t\tif (!value) {\n\t\t\t\treturn 'null';\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\treturn 'array';\n\t\t\t}\n\t\t\treturn 'object';\n\t\t}\n\t\tdefault: return 'null';\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\nimport { Iterable } from 'vs/base/common/iterator';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\n\nconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\nfunction markTracked<T extends IDisposable>(x: T): void {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn;\n\t}\n\n\tif (x && x !== Disposable.None) {\n\t\ttry {\n\t\t\t(x as any)[__is_disposable_tracked__] = true;\n\t\t} catch {\n\t\t\t// noop\n\t\t}\n\t}\n}\n\nfunction trackDisposable<T extends IDisposable>(x: T): T {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn x;\n\t}\n\n\tconst stack = new Error('Potentially leaked disposable').stack!;\n\tsetTimeout(() => {\n\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\tconsole.log(stack);\n\t\t}\n\t}, 3000);\n\treturn x;\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable>thing).dispose === 'function' && (<IDisposable>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable, A extends IterableIterator<T> = IterableIterator<T>>(disposables: IterableIterator<T>): A;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(arg: T | IterableIterator<T> | undefined): any {\n\tif (Iterable.is(arg)) {\n\t\tfor (let d of arg) {\n\t\t\tif (d) {\n\t\t\t\tmarkTracked(d);\n\t\t\t\td.dispose();\n\t\t\t}\n\t\t}\n\t\treturn Array.isArray(arg) ? [] : arg;\n\t} else if (arg) {\n\t\tmarkTracked(arg);\n\t\targ.dispose();\n\t\treturn arg;\n\t}\n}\n\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tdisposables.forEach(markTracked);\n\treturn trackDisposable({ dispose: () => dispose(disposables) });\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: () => {\n\t\t\tmarkTracked(self);\n\t\t\tfn();\n\t\t}\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\n\tstatic DISABLE_DISPOSED_WARNING = false;\n\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkTracked(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\tthis._toDispose.forEach(item => item.dispose());\n\t\tthis._toDispose.clear();\n\t}\n\n\tpublic add<T extends IDisposable>(t: T): T {\n\t\tif (!t) {\n\t\t\treturn t;\n\t\t}\n\t\tif ((t as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tmarkTracked(t);\n\t\tif (this._isDisposed) {\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._toDispose.add(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprivate readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkTracked(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif ((t as unknown as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(t);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tif (value) {\n\t\t\tmarkTracked(value);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkTracked(this);\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tthis._value = undefined;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number; }> = new Map();\n\n\tacquire(key: string, ...args: any[]): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key, ...args) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference!.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference!.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string, ...args: any[]): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\t*[Symbol.iterator](): Iterator<E> {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tyield node.element;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n\n\ttoArray(): E[] {\n\t\tconst result: E[] = [];\n\t\tfor (let node = this._first; node !== Node.Undefined; node = node.next) {\n\t\t\tresult.push(node.element);\n\t\t}\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { Disposable, IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * through the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T>;\n\texport function any(...events: Event<any>[]): Event<void>;\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cumulative result through the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): unknown;\n\t\tremoveListener(event: string | symbol, listener: Function): unknown;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(c => once(event)(c));\n\t}\n}\n\ntype Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string | undefined;\n\t\t\tlet topCount: number = 0;\n\t\t\tfor (const [stack, count] of this._stacks) {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: LinkedList<[Listener<T>, T]>;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0\n\t\t\t? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tlet removeMonitor: (() => void) | undefined;\n\t\t\t\tif (this._leakageMon) {\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(this._listeners.size);\n\t\t\t\t}\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new LinkedList();\n\t\t\t}\n\n\t\t\tfor (let listener of this._listeners) {\n\t\t\t\tthis._deliveryQueue.push([listener, event]);\n\t\t\t}\n\n\t\t\twhile (this._deliveryQueue.size > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif (this._listeners) {\n\t\t\tthis._listeners.clear();\n\t\t}\n\t\tif (this._deliveryQueue) {\n\t\t\tthis._deliveryQueue.clear();\n\t\t}\n\t\tif (this._leakageMon) {\n\t\t\tthis._leakageMon.dispose();\n\t\t}\n\t\tthis._disposed = true;\n\t}\n}\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprivate _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options && options.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tconst events = this._eventQueue.toArray();\n\t\t\t\tthis._eventQueue.clear();\n\t\t\t\tsuper.fire(this._mergeFn(events));\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport interface IWaitUntil {\n\twaitUntil(thenable: Promise<any>): void;\n}\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[Listener<T>, Omit<T, 'waitUntil'>]>;\n\n\tasync fireAsync(data: Omit<T, 'waitUntil'>, token: CancellationToken, promiseJoin?: (p: Promise<any>, listener: Function) => Promise<any>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tfor (const listener of this._listeners) {\n\t\t\tthis._asyncDeliveryQueue.push([listener, data]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<any>[] = [];\n\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\twaitUntil: (p: Promise<any>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, typeof listener === 'function' ? listener : listener[0]);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t} else {\n\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\t\t\tawait Promise.all(thenables).catch(e => onUnexpectedError(e));\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\n\t/**\n\t * A flag signalling is cancellation has been requested.\n\t */\n\treadonly isCancellationRequested: boolean;\n\n\t/**\n\t * An event which fires when cancellation is requested. This event\n\t * only ever fires `once` as cancellation can only happen once. Listeners\n\t * that are registered after cancellation will be called (next event loop run),\n\t * but also only once.\n\t *\n\t * @event\n\t */\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: unknown): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tif (this._parentListener) {\n\t\t\tthis._parentListener.dispose();\n\t\t}\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\n\nexport function isThenable<T>(obj: any): obj is Promise<T> {\n\treturn obj && typeof (<Promise<any>>obj).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tsource.token.onCancellationRequested(() => {\n\t\t\treject(errors.canceled());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T> {\n\treturn Promise.race([promise, new Promise<T>(resolve => token.onCancellationRequested(() => resolve(defaultValue)))]);\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T> {\n\tlet promiseResolve: (() => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.();\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(c => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(c);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((c, e) => {\n\t\t\t\tthis.queuedPromise!.then(c, e);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((c, e) => {\n\t\t\tthis.activePromise!.then((result: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tc(result);\n\t\t\t}, (err: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\te(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<any> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask());\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate timeout: any;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number) {\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay: number = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((c, e) => {\n\t\t\t\tthis.doResolve = c;\n\t\t\t\tthis.doReject = e;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tif (this.doResolve) {\n\t\t\t\tthis.doResolve(null);\n\t\t\t}\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tif (this.doReject) {\n\t\t\t\tthis.doReject(errors.canceled());\n\t\t\t}\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancelTimeout();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as any as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(resolve, millis);\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\treject(errors.canceled());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\nexport function ignoreErrors<T>(promise: Promise<T>): Promise<T | undefined> {\n\treturn promise.then(undefined, _ => undefined);\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value?: T | Promise<T>) => void;\n\te: (error?: any) => void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onFinished: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onFinished = new Emitter<void>();\n\t}\n\n\tget onFinished(): Event<void> {\n\t\treturn this._onFinished.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t\t// return this.runningPromises + this.outstandingPromises.length;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onFinished.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onFinished.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tqueueFor(resource: URI): Queue<void> {\n\t\tconst key = resource.toString();\n\t\tif (!this.queues.has(key)) {\n\t\t\tconst queue = new Queue<void>();\n\t\t\tqueue.onFinished(() => {\n\t\t\t\tqueue.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn this.queues.get(key)!;\n\t}\n\n\tdispose(): void {\n\t\tthis.queues.forEach(queue => queue.dispose());\n\t\tthis.queues.clear();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: any[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, timeout: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = timeout;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tif (this.runner) {\n\t\t\tthis.runner(units);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\tconst dummyIdle: IdleDeadline = Object.freeze({\n\t\t\tdidTimeout: true,\n\t\t\ttimeRemaining() { return 15; }\n\t\t});\n\t\trunWhenIdle = (runner) => {\n\t\t\tconst handle = setTimeout(() => runner(dummyIdle));\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: any;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tget value(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IPendingTask {\n\ttaskId: number;\n\tcancel: () => void;\n\tpromise: Promise<void>;\n}\n\ninterface ISequentialTask {\n\tpromise: Promise<void>;\n\tpromiseResolve: () => void;\n\tpromiseReject: (error: Error) => void;\n\trun: () => Promise<void>;\n}\n\nexport interface ITaskSequentializerWithPendingTask {\n\treadonly pending: Promise<void>;\n}\n\nexport class TaskSequentializer {\n\tprivate _pending?: IPendingTask;\n\tprivate _next?: ISequentialTask;\n\n\thasPending(taskId?: number): this is ITaskSequentializerWithPendingTask {\n\t\tif (!this._pending) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._pending.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._pending;\n\t}\n\n\tget pending(): Promise<void> | undefined {\n\t\treturn this._pending ? this._pending.promise : undefined;\n\t}\n\n\tcancelPending(): void {\n\t\tthis._pending?.cancel();\n\t}\n\n\tsetPending(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._pending = { taskId: taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.donePending(taskId), () => this.donePending(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate donePending(taskId: number): void {\n\t\tif (this._pending && taskId === this._pending.taskId) {\n\n\t\t\t// only set pending to done if the promise finished that is associated with that taskId\n\t\t\tthis._pending = undefined;\n\n\t\t\t// schedule the next task now that we are free if we have any\n\t\t\tthis.triggerNext();\n\t\t}\n\t}\n\n\tprivate triggerNext(): void {\n\t\tif (this._next) {\n\t\t\tconst next = this._next;\n\t\t\tthis._next = undefined;\n\n\t\t\t// Run next task and complete on the associated promise\n\t\t\tnext.run().then(next.promiseResolve, next.promiseReject);\n\t\t}\n\t}\n\n\tsetNext(run: () => Promise<void>): Promise<void> {\n\n\t\t// this is our first next task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._next) {\n\t\t\tlet promiseResolve: () => void;\n\t\t\tlet promiseReject: (error: Error) => void;\n\t\t\tconst promise = new Promise<void>((resolve, reject) => {\n\t\t\t\tpromiseResolve = resolve;\n\t\t\t\tpromiseReject = reject;\n\t\t\t});\n\n\t\t\tthis._next = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous next task, just overwrite it\n\t\telse {\n\t\t\tthis._next.run = run;\n\t\t}\n\n\t\treturn this._next.promise;\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string;\n}\n\ninterface INodeProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\tgetuid(): number;\n\tnextTick: Function;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n}\ndeclare const process: INodeProcess;\ndeclare const global: any;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n\tmaxTouchPoints?: number;\n}\ndeclare const navigator: INavigator;\ndeclare const self: any;\n\nconst isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n\t// NOTE@coder: Make languages work.\n\tconst el = typeof document !== 'undefined' && document.getElementById('vscode-remote-nls-configuration');\n\tconst rawNlsConfig = el && el.getAttribute('data-settings');\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t\t_language = nlsConfig.availableLanguages['*'] || LANGUAGE_DEFAULT;\n\t\t} catch (error) { /* Oh well. */ }\n\t}\n} else if (typeof process === 'object') {\n\t_isWindows = (process.platform === 'win32');\n\t_isMacintosh = (process.platform === 'darwin');\n\t_isLinux = (process.platform === 'linux');\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\nexport function isRootUser(): boolean {\n\treturn _isNative && !_isWindows && (process.getuid() === 0);\n}\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translatios that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nconst _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {} as any);\nexport const globals: any = _globals;\n\ninterface ISetImmediate {\n\t(callback: (...args: any[]) => void): void;\n}\n\nexport const setImmediate: ISetImmediate = (function defineSetImmediate() {\n\tif (globals.setImmediate) {\n\t\treturn globals.setImmediate.bind(globals);\n\t}\n\tif (typeof globals.postMessage === 'function' && !globals.importScripts) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tlet pending: IQueueElement[] = [];\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\n\t\t\tif (e.data && e.data.vscodeSetImmediateId) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeSetImmediateId) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\tglobals.postMessage({ vscodeSetImmediateId: myId }, '*');\n\t\t};\n\t}\n\tif (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n\t\treturn process.nextTick.bind(process);\n\t}\n\tconst _promise = Promise.resolve();\n\treturn (callback: (...args: any[]) => void) => _promise.then(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh || _isIOS ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian(): boolean {\n\tif (!_isLittleEndianComputed) {\n\t\t_isLittleEndianComputed = true;\n\t\tconst test = new Uint8Array(2);\n\t\ttest[0] = 1;\n\t\ttest[1] = 2;\n\t\tconst view = new Uint16Array(test.buffer);\n\t\t_isLittleEndian = (view[0] === (2 << 8) + 1);\n\t}\n\treturn _isLittleEndian;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh, setImmediate, IProcessEnvironment } from 'vs/base/common/platform';\n\ninterface IProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\n\tcwd(): string;\n\tnextTick(callback: (...args: any[]) => void): void;\n}\n\ndeclare const process: IProcess;\nconst safeProcess: IProcess = (typeof process === 'undefined') ? {\n\tcwd(): string { return '/'; },\n\tenv: Object.create(null),\n\tget platform(): string { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); }\n} : process;\n\nexport const cwd = safeProcess.cwd;\nexport const env = safeProcess.env;\nexport const platform = safeProcess.platform;\nexport const nextTick = safeProcess.nextTick;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v12.8.1/lib/path.js\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: any) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\n\t\tcode >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code = 0;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length !== 0) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tres += res.length > 0 ? `${separator}..` : '..';\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += `${separator}${path.slice(lastSlash + 1, i)}`;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t}\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t`${pathObject.name || ''}${pathObject.ext || ''}`;\n\tif (!dir) {\n\t\treturn base;\n\t}\n\treturn dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t\tvalidateString(path, 'path');\n\n\t\t\t\t// Skip empty entries\n\t\t\t\tif (path.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (resolvedDevice.length === 0) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = (process.env as any)[`=${resolvedDevice}`] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\tpath.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n\t\t\t\t\tpath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\tpath = `${resolvedDevice}\\\\`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len === 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// `path` contains just a path separator\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len || j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root\n\t\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t// Possible device root\n\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\trootEnd = 2;\n\t\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t// indicator\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\trootEnd = 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (device.length > 0) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tif (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolvedDevice = device;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resolvedAbsolute) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t\tif (isAbsolute && resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn resolvedAbsolute ?\n\t\t\t`${resolvedDevice}\\\\${resolvedTail}` :\n\t\t\t`${resolvedDevice}${resolvedTail}` || '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a single char, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn isPosixPathSeparator(code) ? '\\\\' : path;\n\t\t}\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t// path of some kind (UNC or otherwise)\n\t\t\tisAbsolute = true;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t// is nothing left to process\n\t\t\t\t\t\t\treturn `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trootEnd = 1;\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tdevice = path.slice(0, 2);\n\t\t\trootEnd = 2;\n\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t// indicator\n\t\t\t\tisAbsolute = true;\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\n\t\tlet tail = rootEnd < len ?\n\t\t\tnormalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n\t\t\t'';\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\treturn isAbsolute ? `\\\\${tail}` : tail;\n\t\t}\n\t\treturn isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\treturn isPathSeparator(code) ||\n\t\t\t// Possible device root\n\t\t\tlen > 2 &&\n\t\t\tisWindowsDeviceRoot(code) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisPathSeparator(path.charCodeAt(2));\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += `\\\\${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for an UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at an UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as an UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t++slashCount;\n\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\twhile (slashCount < joined.length &&\n\t\t\t\tisPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\tslashCount++;\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = `\\\\${joined.slice(slashCount)}`;\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\twhile (fromStart < from.length &&\n\t\t\tfrom.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\twhile (fromEnd - 1 > fromStart &&\n\t\t\tfrom.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromEnd--;\n\t\t}\n\t\tconst fromLen = fromEnd - fromStart;\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\twhile (toStart < to.length &&\n\t\t\tto.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\twhile (toEnd - 1 > toStart &&\n\t\t\tto.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoEnd--;\n\t\t}\n\t\tconst toLen = toEnd - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = fromLen < toLen ? fromLen : toLen;\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length) {\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\treturn toOrig;\n\t\t\t}\n\t\t} else {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 2) {\n\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\tlastCommonSep = 0;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '\\\\..';\n\t\t\t}\n\t\t}\n\n\t\ttoStart += lastCommonSep;\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn `${out}${toOrig.slice(toStart, toEnd)}`;\n\t\t}\n\n\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t++toStart;\n\t\t}\n\n\t\treturn toOrig.slice(toStart, toEnd);\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length <= 2) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Possible UNC root\n\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\treturn `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n\t\t\tresolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\treturn `\\\\\\\\?\\\\${resolvedPath}`;\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work or a dot.\n\t\t\treturn isPathSeparator(code) ? path : '.';\n\t\t}\n\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = offset = 1;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Possible device root\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\trootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n\t\t\toffset = rootEnd;\n\t\t}\n\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\n\t\t\tend = rootEnd;\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2 &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0)) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\tstart = 2;\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '\\\\'),\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tret.base = ret.name = path;\n\t\t\treturn ret;\n\t\t}\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = 1;\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tif (len <= 2) {\n\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\trootEnd = 2;\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tif (len === 3) {\n\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t// unnecessary work\n\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tconst path = i >= 0 ? pathSegments[i] : process.cwd();\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = `${path}/${resolvedPath}`;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\treturn `/${resolvedPath}`;\n\t\t}\n\t\treturn resolvedPath.length > 0 ? resolvedPath : '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0) {\n\t\t\tif (isAbsolute) {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t\treturn trailingSeparator ? './' : '.';\n\t\t}\n\t\tif (trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\treturn isAbsolute ? `/${path}` : path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t} else {\n\t\t\t\t\tjoined += `/${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim leading forward slashes.\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromStart = 1;\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = fromEnd - fromStart;\n\t\tconst toStart = 1;\n\t\tconst toLen = to.length - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\t\tif (i === length) {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t}\n\t\t\t} else if (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/'\n\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`.\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '/..';\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts.\n\t\treturn `${out}${to.slice(toStart + lastCommonSep)}`;\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '/'),\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tconst start = startPart === 0 && isAbsolute ? 1 : startPart;\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(start, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(start, startDot);\n\t\t\t\tret.base = path.slice(start, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in desktop and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * Allows to remove a listener that was previously added.\n\t */\n\tremoveListener(event: string, callback: Function): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in desktop and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in desktop and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t *\n\t * If a `highWaterMark` is configured and writing to the\n\t * stream reaches this mark, a promise will be returned\n\t * that should be awaited on before writing more data.\n\t * Otherwise there is a risk of buffering a large number\n\t * of data chunks without consumer.\n\t */\n\twrite(data: T): void | Promise<void>;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is not an error, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t *\n\t * In case of an error, the on('error') event will be used\n\t * if the stream is flowing.\n\t */\n\tend(result?: T | Error): void;\n}\n\n/**\n * A stream that has a buffer already read. Returns the original stream\n * that was read as well as the chunks that got read.\n *\n * The `ended` flag indicates if the stream has been fully consumed.\n */\nexport interface ReadableBufferedStream<T> {\n\n\t/**\n\t * The original stream that is being read.\n\t */\n\tstream: ReadableStream<T>;\n\n\t/**\n\t * An array of chunks already read from this stream.\n\t */\n\tbuffer: T[];\n\n\t/**\n\t * Signals if the stream has ended or not. If not, consumers\n\t * should continue to read from the stream until consumed.\n\t */\n\tended: boolean;\n}\n\nexport function isReadableStream<T>(obj: unknown): obj is ReadableStream<T> {\n\tconst candidate = obj as ReadableStream<T>;\n\n\treturn candidate && [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport function isReadableBufferedStream<T>(obj: unknown): obj is ReadableBufferedStream<T> {\n\tconst candidate = obj as ReadableBufferedStream<T>;\n\n\treturn candidate && isReadableStream(candidate.stream) && Array.isArray(candidate.buffer) && typeof candidate.ended === 'boolean';\n}\n\nexport interface IReducer<T> {\n\t(data: T[]): T;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>, options?: WriteableStreamOptions): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer, options);\n}\n\nexport interface WriteableStreamOptions {\n\n\t/**\n\t * The number of objects to buffer before WriteableStream#write()\n\t * signals back that the buffer is full. Can be used to reduce\n\t * the memory pressure when the stream is not flowing.\n\t */\n\thighWaterMark?: number;\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tprivate readonly pendingWritePromises: Function[] = [];\n\n\tconstructor(private reducer: IReducer<T>, private options?: WriteableStreamOptions) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void | Promise<void> {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.data.forEach(listener => listener(data));\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\n\t\t\t// highWaterMark: if configured, signal back when buffer reached limits\n\t\t\tif (typeof this.options?.highWaterMark === 'number' && this.buffer.data.length > this.options.highWaterMark) {\n\t\t\t\treturn new Promise(resolve => this.pendingWritePromises.push(resolve));\n\t\t\t}\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T | Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data or error if provided\n\t\tif (result instanceof Error) {\n\t\t\tthis.error(result);\n\t\t} else if (result) {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tremoveListener(event: string, callback: Function): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet listeners: unknown[] | undefined = undefined;\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tlisteners = this.listeners.data;\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tlisteners = this.listeners.end;\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tlisteners = this.listeners.error;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (listeners) {\n\t\t\tconst index = listeners.indexOf(callback);\n\t\t\tif (index >= 0) {\n\t\t\t\tlisteners.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.listeners.data.forEach(listener => listener(fullDataBuffer));\n\n\t\t\tthis.buffer.data.length = 0;\n\n\t\t\t// When the buffer is empty, resolve all pending writers\n\t\t\tconst pendingWritePromises = [...this.pendingWritePromises];\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t\tpendingWritePromises.forEach(pendingWritePromise => pendingWritePromise());\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function peekReadable<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T.\n */\nexport function consumeStream<T>(stream: ReadableStreamEvents<T>, reducer: IReducer<T>): Promise<T> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tstream.on('data', data => chunks.push(data));\n\t\tstream.on('error', error => reject(error));\n\t\tstream.on('end', () => resolve(reducer(chunks)));\n\t});\n}\n\n/**\n * Helper to peek up to `maxChunks` into a stream. The return type signals if\n * the stream has ended or not. If not, caller needs to add a `data` listener\n * to continue reading.\n */\nexport function peekStream<T>(stream: ReadableStream<T>, maxChunks: number): Promise<ReadableBufferedStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst streamListeners = new DisposableStore();\n\n\t\t// Data Listener\n\t\tconst buffer: T[] = [];\n\t\tconst dataListener = (chunk: T) => {\n\n\t\t\t// Add to buffer\n\t\t\tbuffer.push(chunk);\n\n\t\t\t// We reached maxChunks and thus need to return\n\t\t\tif (buffer.length > maxChunks) {\n\n\t\t\t\t// Dispose any listeners and ensure to pause the\n\t\t\t\t// stream so that it can be consumed again by caller\n\t\t\t\tstreamListeners.dispose();\n\t\t\t\tstream.pause();\n\n\t\t\t\treturn resolve({ stream, buffer, ended: false });\n\t\t\t}\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('data', dataListener)));\n\t\tstream.on('data', dataListener);\n\n\t\t// Error Listener\n\t\tconst errorListener = (error: Error) => {\n\t\t\treturn reject(error);\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('error', errorListener)));\n\t\tstream.on('error', errorListener);\n\n\t\tconst endListener = () => {\n\t\t\treturn resolve({ stream, buffer, ended: true });\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('end', endListener)));\n\t\tstream.on('end', endListener);\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tstream.on('data', data => target.write(transformer.data(data)));\n\tstream.on('end', () => target.end());\n\tstream.on('error', error => target.error(transformer.error ? transformer.error(error) : error));\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Constants } from 'vs/base/common/uint';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\n/**\n * @deprecated ES6: use `String.padStart`\n */\nexport function pad(n: number, l: number, char: string = '0'): string {\n\tconst str = '' + n;\n\tconst r = [str];\n\n\tfor (let i = str.length; i < l; i++) {\n\t\tr.push(char);\n\t}\n\n\treturn r.reverse().join('');\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\n/**\n * @deprecated ES6: use `String.startsWith`\n */\nexport function startsWith(haystack: string, needle: string): boolean {\n\tif (haystack.length < needle.length) {\n\t\treturn false;\n\t}\n\n\tif (haystack === needle) {\n\t\treturn true;\n\t}\n\n\tfor (let i = 0; i < needle.length; i++) {\n\t\tif (haystack[i] !== needle[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @deprecated ES6: use `String.endsWith`\n */\nexport function endsWith(haystack: string, needle: string): boolean {\n\tconst diff = haystack.length - needle.length;\n\tif (diff > 0) {\n\t\treturn haystack.indexOf(needle, diff) === diff;\n\t} else if (diff === 0) {\n\t\treturn haystack === needle;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any /* standalone editor compilation */).unicode ? 'u' : '');\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareSubstring(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\t\tif (codeA < codeB) {\n\t\t\treturn -1;\n\t\t} else if (codeA > codeB) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\treturn compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\n\nexport function compareSubstringIgnoreCase(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst diff = codeA - codeB;\n\t\tif (diff === 32 && isUpperAsciiLetter(codeB)) { //codeB =[65-90] && codeA =[97-122]\n\t\t\tcontinue;\n\n\t\t} else if (diff === -32 && isUpperAsciiLetter(codeA)) {  //codeB =[97-122] && codeA =[65-90]\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n\t\t\t//\n\t\t\treturn diff;\n\n\t\t} else {\n\t\t\treturn compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n\t\t}\n\t}\n\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tconst diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate: number, lowSurrogate: number): number {\n\treturn ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn computeCodePoint(charCode, nextCharCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn computeCodePoint(prevCharCode, charCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport function nextCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\tconst len = str.length;\n\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\n\treturn (offset - initialOffset);\n}\n\nexport function prevCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\n\tconst initialCodePoint = getPrevCodePoint(str, offset);\n\toffset -= (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn (initialOffset - offset);\n}\n\nfunction _getCharContainingOffset(str: string, offset: number): [number, number] {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst len = str.length;\n\tconst initialOffset = offset;\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\tconst initialGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t// extend to the right\n\tlet graphemeBreakType = initialGraphemeBreakType;\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\tconst endOffset = offset;\n\n\t// extend to the left\n\toffset = initialOffset;\n\tgraphemeBreakType = initialGraphemeBreakType;\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn [offset, endOffset];\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\treturn _getCharContainingOffset(str, offset - 1);\n\t}\n\treturn _getCharContainingOffset(str, offset);\n}\n\n/**\n * A manual encoding of `str` to UTF8.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function encodeUTF8(str: string): Uint8Array {\n\tconst strLen = str.length;\n\n\t// See https://en.wikipedia.org/wiki/UTF-8\n\n\t// first loop to establish needed buffer size\n\tlet neededSize = 0;\n\tlet strOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tneededSize += 1;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tneededSize += 2;\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tneededSize += 3;\n\t\t} else {\n\t\t\tneededSize += 4;\n\t\t}\n\t}\n\n\t// second loop to actually encode\n\tconst arr = new Uint8Array(neededSize);\n\tstrOffset = 0;\n\tlet arrOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tarr[arrOffset++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tarr[arrOffset++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tarr[arrOffset++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tarr[arrOffset++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\t}\n\n\treturn arr;\n}\n\n/**\n * A manual decoding of a UTF8 string.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function decodeUTF8(buffer: Uint8Array): string {\n\t// https://en.wikipedia.org/wiki/UTF-8\n\n\tconst len = buffer.byteLength;\n\tconst result: string[] = [];\n\tlet offset = 0;\n\twhile (offset < len) {\n\t\tconst v0 = buffer[offset];\n\t\tlet codePoint: number;\n\t\tif (v0 >= 0b11110000 && offset + 3 < len) {\n\t\t\t// 4 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00000111) << 18) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11100000 && offset + 2 < len) {\n\t\t\t// 3 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00001111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11000000 && offset + 1 < len) {\n\t\t\t// 2 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00011111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else {\n\t\t\t// 1 byte\n\t\t\tcodePoint = buffer[offset++];\n\t\t}\n\n\t\tif ((codePoint >= 0 && codePoint <= 0xD7FF) || (codePoint >= 0xE000 && codePoint <= 0xFFFF)) {\n\t\t\t// Basic Multilingual Plane\n\t\t\tresult.push(String.fromCharCode(codePoint));\n\t\t} else if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t// Supplementary Planes\n\t\t\tconst uPrime = codePoint - 0x10000;\n\t\t\tconst w1 = 0xD800 + ((uPrime & 0b11111111110000000000) >>> 10);\n\t\t\tconst w2 = 0xDC00 + ((uPrime & 0b00000000001111111111) >>> 0);\n\t\t\tresult.push(String.fromCharCode(w1));\n\t\t\tresult.push(String.fromCharCode(w2));\n\t\t} else {\n\t\t\t// illegal code point\n\t\t\tresult.push(String.fromCharCode(0xFFFD));\n\t\t}\n\t}\n\n\treturn result.join('');\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE82\\uDE90-\\uDE95])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str: string): boolean {\n\treturn UNUSUAL_LINE_TERMINATORS.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x >= 9728 && x <= 10175) || (x >= 127744 && x <= 128591)\n\t\t|| (x >= 128640 && x <= 128764) || (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129651) || (x >= 129656 && x <= 129666) || (x >= 129680 && x <= 129685)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, '');\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\nexport function safeBtoa(str: string): string {\n\treturn btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\n\n/**\n * @deprecated ES6\n */\nexport function repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\treturn idx >= 0 ?\n\t\tstr.substr(0, idx) :\n\t\tstr;\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nexport function breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-grapheme-break.js\n\treturn JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst hasTextEncoder = (typeof TextEncoder !== 'undefined');\nconst hasTextDecoder = (typeof TextDecoder !== 'undefined');\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\tstatic fromString(source: string): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else if (hasTextEncoder) {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t} else {\n\t\t\treturn new VSBuffer(strings.encodeUTF8(source));\n\t\t}\n\t}\n\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else if (hasTextDecoder) {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t} else {\n\t\t\treturn strings.decodeUTF8(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performant, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start!/*bad lib.d.ts*/, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void;\n\tset(array: Uint8Array, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array, offset?: number): void {\n\t\tif (array instanceof VSBuffer) {\n\t\t\tthis.buffer.set(array.buffer, offset);\n\t\t} else {\n\t\t\tthis.buffer.set(array, offset);\n\t\t}\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt32LE(offset: number): number {\n\t\treturn readUInt32LE(this.buffer, offset);\n\t}\n\n\twriteUInt32LE(value: number, offset: number): void {\n\t\twriteUInt32LE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n}\n\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0)\n\t);\n}\n\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0) |\n\t\t((source[offset + 2] << 16) >>> 0) |\n\t\t((source[offset + 3] << 24) >>> 0)\n\t);\n}\n\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 3] = (value & 0b11111111);\n}\n\nexport function readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport interface VSBufferReadableBufferedStream extends streams.ReadableBufferedStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport async function bufferedStreamToBuffer(bufferedStream: streams.ReadableBufferedStream<VSBuffer>): Promise<VSBuffer> {\n\tif (bufferedStream.ended) {\n\t\treturn VSBuffer.concat(bufferedStream.buffer);\n\t}\n\n\treturn VSBuffer.concat([\n\n\t\t// Include already read chunks...\n\t\t...bufferedStream.buffer,\n\n\t\t// ...and all additional chunks\n\t\tawait streamToBuffer(bufferedStream.stream)\n\t]);\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(options?: streams.WriteableStreamOptions): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks), options);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\n\nenum Severity {\n\tIgnore = 0,\n\tInfo = 1,\n\tWarning = 2,\n\tError = 3\n}\n\nnamespace Severity {\n\n\tconst _error = 'error';\n\tconst _warning = 'warning';\n\tconst _warn = 'warn';\n\tconst _info = 'info';\n\n\t/**\n\t * Parses 'error', 'warning', 'warn', 'info' in call casings\n\t * and falls back to ignore.\n\t */\n\texport function fromValue(value: string): Severity {\n\t\tif (!value) {\n\t\t\treturn Severity.Ignore;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_error, value)) {\n\t\t\treturn Severity.Error;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n\t\t\treturn Severity.Warning;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_info, value)) {\n\t\t\treturn Severity.Info;\n\t\t}\n\t\treturn Severity.Ignore;\n\t}\n}\n\nexport default Severity;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray<T>(array: T | {}): array is T extends readonly any[] ? (unknown extends T ? never : readonly any[]) : any[] {\n\treturn Array.isArray(array);\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: any): str is string {\n\treturn (typeof str === 'string');\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: any): value is string[] {\n\treturn Array.isArray(value) && (<any[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: any): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === 'object'\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: any): obj is number {\n\treturn (typeof obj === 'number' && !isNaN(obj));\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: any): obj is boolean {\n\treturn (obj === true || obj === false);\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n\treturn (typeof obj === 'undefined');\n}\n\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined<T>(arg: T | null | undefined): arg is T {\n\treturn !isUndefinedOrNull(arg);\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n\treturn (isUndefined(obj) || obj === null);\n}\n\n\nexport function assertType(condition: any, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: any): obj is any {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: any): obj is Function {\n\treturn (typeof obj === 'function');\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: any[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: any[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: any, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: any[]) => any): T {\n\tconst createProxyMethod = (method: string): () => any => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tlet result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\n\t//  For every property\n\t[K in keyof Target]:\n\n\t// Function: add param to function\n\tTarget[K] extends (...args: any) => TargetFunctionsReturnType ? (firstArg: FirstParameter, ...args: Parameters<Target[K]>) => ReturnType<Target[K]> :\n\n\t// Else: just leave as is\n\tTarget[K]\n};\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents\n */\nexport type UriDto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: UriDto<T[K]> };\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents and\n * drops all functions.\n * todo@joh use toJSON-results\n */\nexport type Dto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: T[K] extends Function\n\t? never\n\t: UriDto<T[K]> };\n\n\nexport function NotImplementedProxy<T>(name: string): { new(): T } {\n\treturn <any>class {\n\t\tconstructor() {\n\t\t\treturn new Proxy({}, {\n\t\t\t\tget(target: any, prop: PropertyKey) {\n\t\t\t\t\tif (target[prop]) {\n\t\t\t\t\t\treturn target[prop];\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error(`Not Implemented: ${name}->${String(prop)}`);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { startsWithIgnoreCase, equalsIgnoreCase, rtrim } from 'vs/base/common/strings';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { sep, posix, isAbsolute, join, normalize } from 'vs/base/common/path';\nimport { isNumber } from 'vs/base/common/types';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(1);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(pos + 1);\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\nexport function isEqualOrParent(path: string, candidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (path === candidate) {\n\t\treturn true;\n\t}\n\n\tif (!path || !candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(path, candidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (candidate.length === path.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = candidate.length;\n\t\tif (candidate.charAt(candidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn path.charAt(sepOffset) === separator;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== separator) {\n\t\tcandidate += separator;\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isWindowsDriveLetter(pathNormalized.charCodeAt(0))\n\t\t\t&& pathNormalized.charCodeAt(1) === CharCode.Colon\n\t\t\t&& (path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase?: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n\nexport interface IPathWithLineAndColumn {\n\tpath: string;\n\tline?: number;\n\tcolumn?: number;\n}\n\nexport function parseLineAndColumnAware(rawPath: string): IPathWithLineAndColumn {\n\tconst segments = rawPath.split(':'); // C:\\file.txt:<line>:<column>\n\n\tlet path: string | undefined = undefined;\n\tlet line: number | undefined = undefined;\n\tlet column: number | undefined = undefined;\n\n\tsegments.forEach(segment => {\n\t\tconst segmentAsNumber = Number(segment);\n\t\tif (!isNumber(segmentAsNumber)) {\n\t\t\tpath = !!path ? [path, segment].join(':') : segment; // a colon can well be part of a path (e.g. C:\\...)\n\t\t} else if (line === undefined) {\n\t\t\tline = segmentAsNumber;\n\t\t} else if (column === undefined) {\n\t\t\tcolumn = segmentAsNumber;\n\t\t}\n\t});\n\n\tif (!path) {\n\t\tthrow new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`');\n\t}\n\n\treturn {\n\t\tpath,\n\t\tline: line !== undefined ? line : undefined,\n\t\tcolumn: column !== undefined ? column : line !== undefined ? 1 : undefined // if we have a line, make sure column is also set\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isObject, isUndefinedOrNull, isArray } from 'vs/base/common/types';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\t// See https://github.com/Microsoft/TypeScript/issues/10990\n\t\treturn obj as any;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.keys(<any>obj).forEach((key: string) => {\n\t\tif ((<any>obj)[key] && typeof (<any>obj)[key] === 'object') {\n\t\t\tresult[key] = deepClone((<any>obj)[key]);\n\t\t} else {\n\t\t\tresult[key] = (<any>obj)[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (let i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\n/**\n * @deprecated ES6\n */\nexport function assign<T>(destination: T): T;\nexport function assign<T, U>(destination: T, u: U): T & U;\nexport function assign<T, U, V>(destination: T, u: U, v: V): T & U & V;\nexport function assign<T, U, V, W>(destination: T, u: U, v: V, w: W): T & U & V & W;\nexport function assign(destination: any, ...sources: any[]): any {\n\tsources.forEach(source => Object.keys(source).forEach(key => destination[key] = source[key]));\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Calls JSON.Stringify with a replacer to break apart any circular references.\n * This prevents JSON.stringify from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen: any[] = [];\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.indexOf(value) !== -1) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.push(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\nexport function getOrDefault<T, R>(obj: T, fn: (obj: T) => R | undefined, defaultValue: R): R {\n\tconst result = fn(obj);\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\ntype obj = { [key: string]: any; };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as paths from 'vs/base/common/path';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'function'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn uriToFsPath(this, false);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new Uri(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new Uri(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new Uri(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new Uri('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new Uri(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param uri The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tstatic joinPath(uri: URI, ...pathFragment: string[]): URI {\n\t\tif (!uri.path) {\n\t\t\tthrow new Error(`[UriError]: cannot call joinPaths on URI without path`);\n\t\t}\n\t\tlet newPath: string;\n\t\tif (isWindows && uri.scheme === 'file') {\n\t\t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n\t\t} else {\n\t\t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n\t\t}\n\t\treturn uri.with({ path: newPath });\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new Uri(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// This class exists so that URI is compatibile with vscode.Uri (API).\nclass Uri extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\tget fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = uriToFsPath(this, false);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\ttoString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\ttoJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tif (!keepDriveLetterCasing) {\n\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t\t} else {\n\t\t\tvalue = uri.path.substr(1);\n\t\t}\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport function getPathFromAmdModule(requirefn: typeof require, relativePath: string): string {\n\treturn getUriFromAmdModule(requirefn, relativePath).fsPath;\n}\n\nexport function getUriFromAmdModule(requirefn: typeof require, relativePath: string): URI {\n\treturn URI.parse(requirefn.toUrl(relativePath));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IRemoteConsoleLog {\n\ttype: string;\n\tseverity: string;\n\targuments: string;\n}\n\ninterface IStackArgument {\n\t__$stack: string;\n}\n\nexport interface IStackFrame {\n\turi: URI;\n\tline: number;\n\tcolumn: number;\n}\n\nexport function isRemoteConsoleLog(obj: any): obj is IRemoteConsoleLog {\n\tconst entry = obj as IRemoteConsoleLog;\n\n\treturn entry && typeof entry.type === 'string' && typeof entry.severity === 'string';\n}\n\nexport function parse(entry: IRemoteConsoleLog): { args: any[], stack?: string } {\n\tconst args: any[] = [];\n\tlet stack: string | undefined;\n\n\t// Parse Entry\n\ttry {\n\t\tconst parsedArguments: any[] = JSON.parse(entry.arguments);\n\n\t\t// Check for special stack entry as last entry\n\t\tconst stackArgument = parsedArguments[parsedArguments.length - 1] as IStackArgument;\n\t\tif (stackArgument && stackArgument.__$stack) {\n\t\t\tparsedArguments.pop(); // stack is handled specially\n\t\t\tstack = stackArgument.__$stack;\n\t\t}\n\n\t\targs.push(...parsedArguments);\n\t} catch (error) {\n\t\targs.push('Unable to log remote console arguments', entry.arguments);\n\t}\n\n\treturn { args, stack };\n}\n\nexport function getFirstFrame(entry: IRemoteConsoleLog): IStackFrame | undefined;\nexport function getFirstFrame(stack: string | undefined): IStackFrame | undefined;\nexport function getFirstFrame(arg0: IRemoteConsoleLog | string | undefined): IStackFrame | undefined {\n\tif (typeof arg0 !== 'string') {\n\t\treturn getFirstFrame(parse(arg0!).stack);\n\t}\n\n\t// Parse a source information out of the stack if we have one. Format can be:\n\t// at vscode.commands.registerCommand (/Users/someone/Desktop/test-ts/out/src/extension.js:18:17)\n\t// or\n\t// at /Users/someone/Desktop/test-ts/out/src/extension.js:18:17\n\t// or\n\t// at c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17\n\t// or\n\t// at e.$executeContributedCommand(c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17)\n\tconst stack = arg0;\n\tif (stack) {\n\t\tconst topFrame = findFirstFrame(stack);\n\n\t\t// at [^\\/]* => line starts with \"at\" followed by any character except '/' (to not capture unix paths too late)\n\t\t// (?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\) => windows drive letter OR unix root OR unc root\n\t\t// (?:.+) => simple pattern for the path, only works because of the line/col pattern after\n\t\t// :(?:\\d+):(?:\\d+) => :line:column data\n\t\tconst matches = /at [^\\/]*((?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\))(?:.+)):(\\d+):(\\d+)/.exec(topFrame || '');\n\t\tif (matches && matches.length === 4) {\n\t\t\treturn {\n\t\t\t\turi: URI.file(matches[1]),\n\t\t\t\tline: Number(matches[2]),\n\t\t\t\tcolumn: Number(matches[3])\n\t\t\t};\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nfunction findFirstFrame(stack: string | undefined): string | undefined {\n\tif (!stack) {\n\t\treturn stack;\n\t}\n\n\tconst newlineIndex = stack.indexOf('\\n');\n\tif (newlineIndex === -1) {\n\t\treturn stack;\n\t}\n\n\treturn stack.substring(0, newlineIndex);\n}\n\nexport function log(entry: IRemoteConsoleLog, label: string): void {\n\tconst { args, stack } = parse(entry);\n\n\tconst isOneStringArg = typeof args[0] === 'string' && args.length === 1;\n\n\tlet topFrame = findFirstFrame(stack);\n\tif (topFrame) {\n\t\ttopFrame = `(${topFrame.trim()})`;\n\t}\n\n\tlet consoleArgs: string[] = [];\n\n\t// First arg is a string\n\tif (typeof args[0] === 'string') {\n\t\tif (topFrame && isOneStringArg) {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]} %c${topFrame}`, color('blue'), color(''), color('grey')];\n\t\t} else {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]}`, color('blue'), color(''), ...args.slice(1)];\n\t\t}\n\t}\n\n\t// First arg is something else, just apply all\n\telse {\n\t\tconsoleArgs = [`%c[${label}]%`, color('blue'), ...args];\n\t}\n\n\t// Stack: add to args unless already aded\n\tif (topFrame && !isOneStringArg) {\n\t\tconsoleArgs.push(topFrame);\n\t}\n\n\t// Log it\n\tif (typeof (console as any)[entry.severity] !== 'function') {\n\t\tthrow new Error('Unknown console method');\n\t}\n\t(console as any)[entry.severity].apply(console, consoleArgs);\n}\n\nfunction color(color: string): string {\n\treturn `color: ${color}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { regExpFlags } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\n\nexport function stringify(obj: any): string {\n\treturn JSON.stringify(obj, replacer);\n}\n\nexport function parse(text: string): any {\n\tlet data = JSON.parse(text);\n\tdata = revive(data);\n\treturn data;\n}\n\nexport interface MarshalledObject {\n\t$mid: number;\n}\n\nfunction replacer(key: string, value: any): any {\n\t// URI is done via toJSON-member\n\tif (value instanceof RegExp) {\n\t\treturn {\n\t\t\t$mid: 2,\n\t\t\tsource: value.source,\n\t\t\tflags: regExpFlags(value),\n\t\t};\n\t}\n\treturn value;\n}\n\nexport function revive(obj: any, depth = 0): any {\n\tif (!obj || depth > 200) {\n\t\treturn obj;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tswitch ((<MarshalledObject>obj).$mid) {\n\t\t\tcase 1: return URI.revive(obj);\n\t\t\tcase 2: return new RegExp(obj.source, obj.flags);\n\t\t}\n\n\t\tif (\n\t\t\tobj instanceof VSBuffer\n\t\t\t|| obj instanceof Uint8Array\n\t\t) {\n\t\t\treturn obj;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\tfor (let i = 0; i < obj.length; ++i) {\n\t\t\t\tobj[i] = revive(obj[i], depth + 1);\n\t\t\t}\n\t\t} else {\n\t\t\t// walk object\n\t\t\tfor (const key in obj) {\n\t\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\t\tobj[key] = revive(obj[key], depth + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn obj;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport * as platform from 'vs/base/common/platform';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const userData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeNotebook = 'vscode-notebook';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const webviewPanel = 'webview-panel';\n\n\t/**\n\t * Scheme used for loading the wrapper html and script in webviews.\n\t */\n\texport const vscodeWebview = 'vscode-webview';\n\n\t/**\n\t * Scheme used for loading resources inside of webviews.\n\t */\n\texport const vscodeWebviewResource = 'vscode-webview-resource';\n\n\t/**\n\t * Scheme used for extension pages\n\t */\n\texport const extension = 'extension';\n}\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined; } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\treturn this._delegate(uri);\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\t// const port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&tkn=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\t// NOTE@coder: Changed this to work against the current path.\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: window.location.host,\n\t\t\tpath: `${window.location.pathname.replace(/\\/+$/, '')}/vscode-remote-resource`,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { compareSubstringIgnoreCase, compare, compareSubstring } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux } from 'vs/base/common/platform';\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport interface IKeyIterator<K> {\n\treset(key: K): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator<string> {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class PathIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _splitOnBackslash: boolean = true,\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key.replace(/\\\\$|\\/$/, '');\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nconst enum UriIteratorState {\n\tScheme = 1, Authority = 2, Path = 3, Query = 4, Fragment = 5\n}\n\nexport class UriIterator implements IKeyIterator<URI> {\n\n\tprivate _pathIterator!: PathIterator;\n\tprivate _value!: URI;\n\tprivate _states: UriIteratorState[] = [];\n\tprivate _stateIdx: number = 0;\n\n\treset(key: URI): this {\n\t\tthis._value = key;\n\t\tthis._states = [];\n\t\tif (this._value.scheme) {\n\t\t\tthis._states.push(UriIteratorState.Scheme);\n\t\t}\n\t\tif (this._value.authority) {\n\t\t\tthis._states.push(UriIteratorState.Authority);\n\t\t}\n\t\tif (this._value.path) {\n\t\t\t//todo@jrieken the case-sensitive logic is copied form `resources.ts#hasToIgnoreCase`\n\t\t\t// which cannot be used because it depends on this\n\t\t\tconst caseSensitive = key.scheme === Schemas.file && isLinux;\n\t\t\tthis._pathIterator = new PathIterator(false, caseSensitive);\n\t\t\tthis._pathIterator.reset(key.path);\n\t\t\tif (this._pathIterator.value()) {\n\t\t\t\tthis._states.push(UriIteratorState.Path);\n\t\t\t}\n\t\t}\n\t\tif (this._value.query) {\n\t\t\tthis._states.push(UriIteratorState.Query);\n\t\t}\n\t\tif (this._value.fragment) {\n\t\t\tthis._states.push(UriIteratorState.Fragment);\n\t\t}\n\t\tthis._stateIdx = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext()) {\n\t\t\tthis._pathIterator.next();\n\t\t} else {\n\t\t\tthis._stateIdx += 1;\n\t\t}\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext())\n\t\t\t|| this._stateIdx < this._states.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn compare(a, this._value.scheme);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn compareSubstringIgnoreCase(a, this._value.authority);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.cmp(a);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn compare(a, this._value.query);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn compare(a, this._value.fragment);\n\t\t}\n\t\tthrow new Error();\n\t}\n\n\tvalue(): string {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn this._value.scheme;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn this._value.authority;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.value();\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn this._value.query;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn this._value.fragment;\n\t\t}\n\t\tthrow new Error();\n\t}\n}\n\nclass TernarySearchTreeNode<K, V> {\n\tsegment!: string;\n\tvalue: V | undefined;\n\tkey!: K;\n\tleft: TernarySearchTreeNode<K, V> | undefined;\n\tmid: TernarySearchTreeNode<K, V> | undefined;\n\tright: TernarySearchTreeNode<K, V> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n}\n\nexport class TernarySearchTree<K, V> {\n\n\tstatic forUris<E>(): TernarySearchTree<URI, E> {\n\t\treturn new TernarySearchTree<URI, E>(new UriIterator());\n\t}\n\n\tstatic forPaths<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new PathIterator());\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new StringIterator());\n\t}\n\n\tprivate _iter: IKeyIterator<K>;\n\tprivate _root: TernarySearchTreeNode<K, V> | undefined;\n\n\tconstructor(segments: IKeyIterator<K>) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\tset(key: K, element: V): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<K, V>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<K, V>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\t\treturn oldElement;\n\t}\n\n\tget(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node ? node.value : undefined;\n\t}\n\n\tdelete(key: K): void {\n\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [-1 | 0 | 1, TernarySearchTreeNode<K, V>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find and unset node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([1, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([-1, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([0, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// remove element\n\t\t\t\tnode.value = undefined;\n\n\t\t\t\t// clean up empty nodes\n\t\t\t\twhile (stack.length > 0 && node.isEmpty()) {\n\t\t\t\t\tlet [dir, parent] = stack.pop()!;\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase 1: parent.left = undefined; break;\n\t\t\t\t\t\tcase 0: parent.mid = undefined; break;\n\t\t\t\t\t\tcase -1: parent.right = undefined; break;\n\t\t\t\t\t}\n\t\t\t\t\tnode = parent;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfindSubstr(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: V | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: K): Iterator<V> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._nodeIterator(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _nodeIterator(node: TernarySearchTreeNode<K, V>): Iterator<V> {\n\t\tlet res: { done: false; value: V; };\n\t\tlet idx: number;\n\t\tlet data: V[];\n\t\tconst next = (): IteratorResult<V> => {\n\t\t\tif (!data) {\n\t\t\t\t// lazy till first invocation\n\t\t\t\tdata = [];\n\t\t\t\tidx = 0;\n\t\t\t\tthis._forEach(node, value => data.push(value));\n\t\t\t}\n\t\t\tif (idx >= data.length) {\n\t\t\t\treturn { done: true, value: undefined };\n\t\t\t}\n\n\t\t\tif (!res) {\n\t\t\t\tres = { done: false, value: data[idx++] };\n\t\t\t} else {\n\t\t\t\tres.value = data[idx++];\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t\treturn { next };\n\t}\n\n\tforEach(callback: (value: V, index: K) => any) {\n\t\tthis._forEach(this._root, callback);\n\t}\n\n\tprivate _forEach(node: TernarySearchTreeNode<K, V> | undefined, callback: (value: V, index: K) => any) {\n\t\tif (node) {\n\t\t\t// left\n\t\t\tthis._forEach(node.left, callback);\n\n\t\t\t// node\n\t\t\tif (node.value) {\n\t\t\t\t// callback(node.value, this._iter.join(parts));\n\t\t\t\tcallback(node.value, node.key);\n\t\t\t}\n\t\t\t// mid\n\t\t\tthis._forEach(node.mid, callback);\n\n\t\t\t// right\n\t\t\tthis._forEach(node.right, callback);\n\t\t}\n\t}\n}\n\ninterface ResourceMapKeyFn {\n\t(resource: URI): string;\n}\n\nexport class ResourceMap<T> implements Map<URI, T> {\n\n\tprivate static readonly defaultToKey = (resource: URI) => resource.toString();\n\n\treadonly [Symbol.toStringTag] = 'ResourceMap';\n\n\tprivate readonly map: Map<string, T>;\n\tprivate readonly toKey: ResourceMapKeyFn;\n\n\t/**\n\t *\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(toKey?: ResourceMapKeyFn);\n\n\t/**\n\t *\n\t * @param other Another resource which this maps is created from\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(other?: ResourceMap<T>, toKey?: ResourceMapKeyFn);\n\n\tconstructor(mapOrKeyFn?: ResourceMap<T> | ResourceMapKeyFn, toKey?: ResourceMapKeyFn) {\n\t\tif (mapOrKeyFn instanceof ResourceMap) {\n\t\t\tthis.map = new Map(mapOrKeyFn.map);\n\t\t\tthis.toKey = toKey ?? ResourceMap.defaultToKey;\n\t\t} else {\n\t\t\tthis.map = new Map();\n\t\t\tthis.toKey = mapOrKeyFn ?? ResourceMap.defaultToKey;\n\t\t}\n\t}\n\n\tset(resource: URI, value: T): this {\n\t\tthis.map.set(this.toKey(resource), value);\n\t\treturn this;\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource));\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI, map: Map<URI, T>) => void, thisArg?: any): void {\n\t\tif (typeof thisArg !== 'undefined') {\n\t\t\tclb = clb.bind(thisArg);\n\t\t}\n\t\tfor (let [index, value] of this.map) {\n\t\t\tclb(value, URI.parse(index), <any>this);\n\t\t}\n\t}\n\n\tvalues(): IterableIterator<T> {\n\t\treturn this.map.values();\n\t}\n\n\t*keys(): IterableIterator<URI> {\n\t\tfor (let key of this.map.keys()) {\n\t\t\tyield URI.parse(key);\n\t\t}\n\t}\n\n\t*entries(): IterableIterator<[URI, T]> {\n\t\tfor (let tuple of this.map.entries()) {\n\t\t\tyield [URI.parse(tuple[0]), tuple[1]];\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[URI, T]> {\n\t\tfor (let item of this.map) {\n\t\t\tyield [URI.parse(item[0]), item[1]];\n\t\t}\n\t}\n}\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> implements Map<K, V> {\n\n\treadonly [Symbol.toStringTag] = 'LinkedMap';\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tprivate _state: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state++;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): this {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tif (this._state !== state) {\n\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<K> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<V> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<[K, V]> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<[K, V]> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result: IteratorResult<[K, V]> = { value: [current.key, current.value], done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t\tthis._state++;\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t\tthis._state++;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t\tthis._state++;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t\tthis._state++;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t\tthis._state++;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t\tthis._state++;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\tget(key: K, touch: Touch = Touch.AsNew): V | undefined {\n\t\treturn super.get(key, touch);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\tset(key: K, value: V): this {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t\treturn this;\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport * as strings from 'vs/base/common/strings';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { LRUCache } from 'vs/base/common/map';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isThenable } from 'vs/base/common/async';\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause;\n}\n\nexport interface IRelativePattern {\n\tbase: string;\n\tpattern: string;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\nexport interface SiblingClause {\n\twhen: string;\n}\n\nconst GLOBSTAR = '**';\nconst GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep OR Path Sep followed by Path Val) 0-many times\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}|${PATH_REGEX}${NO_PATH_REGEX}+)*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(s => s === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Globstar is special\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (!previousSegmentWasGlobStar) {\n\t\t\t\t\tregEx += starsToRegExp(2);\n\t\t\t\t\tpreviousSegmentWasGlobStar = true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// States\n\t\t\tlet inBraces = false;\n\t\t\tlet braceVal = '';\n\n\t\t\tlet inBrackets = false;\n\t\t\tlet bracketVal = '';\n\n\t\t\tfor (const char of segment) {\n\t\t\t\t// Support brace expansion\n\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\tbraceVal += char;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Support brackets\n\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t// range operator\n\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\tres = char;\n\t\t\t\t\t}\n\n\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\tres = '^';\n\t\t\t\t\t}\n\n\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = strings.escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\n\t\t\t\t\tbracketVal += res;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tswitch (char) {\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(c => parseRegExp(c)).join('|')})`;\n\n\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase '?':\n\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '*':\n\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tregEx += strings.escapeRegExpCharacters(char);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tail: Add the slash we had split on if there is more to come and the remaining pattern is not a globstar\n\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after some to be included in the RegEx to prevent\n\t\t\t// a folder called \"something\" to match as well.\n\t\t\t// However, if pattern: some/**, we tolerate that we also match on \"something\" because our globstar behaviour\n\t\t\t// is to match 0-N segments.\n\t\t\tif (index < segments.length - 1 && (segments[index + 1] !== GLOBSTAR || index + 2 < segments.length)) {\n\t\t\t\tregEx += PATH_REGEX;\n\t\t\t}\n\n\t\t\t// reset state\n\t\t\tpreviousSegmentWasGlobStar = false;\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trival glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t   \t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t   \t\t\t// **/something\nconst T3 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?)*}$/; \t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t   \t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t   \t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The ParsedExpression returns a Promise iff hasSibling returns a Promise.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\nexport interface IGlobOptions {\n\t/**\n\t * Simplify patterns for use as exclusion filters during tree traversal to skip entire subtrees. Cannot be used outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename?: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\ninterface ParsedExpressionPattern {\n\t(path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle IRelativePattern\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivias\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) { // common pattern: **/*.txt just need endsWith check\n\t\tconst base = pattern.substr(4); // '**/*'.length === 4\n\t\tparsedPattern = function (path, basename) {\n\t\t\treturn typeof path === 'string' && path.endsWith(base) ? pattern : null;\n\t\t};\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\treturn function (path, basename) {\n\t\tif (!extpath.isEqualOrParent(path, arg2.base)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn parsedPattern(paths.relative(arg2.base, path), basename);\n\t};\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, originalPattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\tconst parsedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (basename) {\n\t\t\treturn basename === base ? originalPattern : null;\n\t\t}\n\t\treturn path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? originalPattern : null;\n\t};\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [originalPattern];\n\tparsedPattern.allBasenames = basenames;\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1).split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\tif (n === 1) {\n\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t}\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif ((<ParsedStringPattern>parsedPatterns[i])(path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(path: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst nativePath = paths.sep !== paths.posix.sep ? path.replace(ALL_FORWARD_SLASHES, paths.sep) : path;\n\tconst nativePathEnd = paths.sep + nativePath;\n\tconst parsedPattern: ParsedStringPattern = matchPathEnds ? function (path, basename) {\n\t\treturn typeof path === 'string' && (path === nativePath || path.endsWith(nativePathEnd)) ? pattern : null;\n\t} : function (path, basename) {\n\t\treturn typeof path === 'string' && path === nativePath ? pattern : null;\n\t};\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + path];\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): boolean | string | null | Promise<string | null> {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(<IExpression>arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): ParsedPattern | ParsedExpression {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\t\tconst resultPattern: ParsedPattern & { allBasenames?: string[]; allPaths?: string[]; } = function (path: string, basename?: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\t\tif (parsedPattern.allBasenames) {\n\t\t\tresultPattern.allBasenames = parsedPattern.allBasenames;\n\t\t}\n\t\tif (parsedPattern.allPaths) {\n\t\t\tresultPattern.allPaths = parsedPattern.allPaths;\n\t\t}\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function hasSiblingPromiseFn(siblingsFn?: () => Promise<string[]>) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Promise<Record<string, true>>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tsiblings = (siblingsFn() || Promise.resolve([]))\n\t\t\t\t.then(list => list ? listToMap(list) : {});\n\t\t}\n\t\treturn siblings.then(map => !!map[name]);\n\t};\n}\n\nexport function hasSiblingFn(siblingsFn?: () => string[]) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Record<string, true>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tconst list = siblingsFn();\n\t\t\tsiblings = list ? listToMap(list) : {};\n\t\t}\n\t\treturn !!siblings[name];\n\t};\n}\n\nfunction listToMap(list: string[]) {\n\tconst map: Record<string, true> = {};\n\tfor (const key of list) {\n\t\tmap[key] = true;\n\t}\n\treturn map;\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern;\n\n\treturn rp && typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (n === 1) {\n\t\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string) {\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\t// Pattern matches path\n\t\t\t\tconst result = (<ParsedStringPattern>parsedPatterns[i])(path, basename);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!basename) {\n\t\t\t\t\tbasename = paths.basename(path);\n\t\t\t\t}\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = basename.substr(0, basename.length - paths.extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst result = parsedPattern(path, basename, name, hasSibling);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = arrays.first(parsedPatterns, pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: boolean | SiblingClause, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = (<SiblingClause>value).when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', name!);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(m => m ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\t\t\tresult.requiresSiblings = true;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is Anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, <string[]>[]);\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, <string[]>[]);\n\t}\n\tconst aggregate: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbasename = path.substr(i);\n\t\t}\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\treturn aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCache } from 'vs/base/common/map';\n\n/**\n * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n * the Normalization Form Canonical Composition.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n */\nexport const canNormalize = typeof (String.prototype as any /* standalone editor compilation */).normalize === 'function';\n\nconst nfcCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\treturn normalize(str, 'NFC', nfcCache);\n}\n\nconst nfdCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFD(str: string): string {\n\treturn normalize(str, 'NFD', nfdCache);\n}\n\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str: string, form: string, normalizedCache: LRUCache<string, string>): string {\n\tif (!canNormalize || !str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = (<any>str).normalize(form);\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\tif (!canNormalize) {\n\t\t// no ES6 features...\n\t\treturn function (str: string) { return str; };\n\t} else {\n\t\t// transform into NFD form and remove accents\n\t\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\t\tconst regex = /[\\u0300-\\u036f]/g;\n\t\treturn function (str: string) {\n\t\t\treturn normalizeNFD(str).replace(regex, '');\n\t\t};\n\t}\n})();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { URI, uriToFsPath } from 'vs/base/common/uri';\nimport { equalsIgnoreCase, compare as strCompare } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isWindows, isLinux } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { ParsedExpression, IExpression, parse } from 'vs/base/common/glob';\nimport { TernarySearchTree } from 'vs/base/common/map';\n\nexport function originalFSPath(uri: URI): string {\n\treturn uriToFsPath(uri, true);\n}\n\n//#region IExtUri\n\nexport interface IExtUri {\n\n\t// --- identity\n\n\t/**\n\t * Compares two uris.\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tcompare(uri1: URI, uri2: URI, ignoreFragment?: boolean): number;\n\n\t/**\n\t * Tests whether two uris are equal\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n\t *\n\t * @param base A uri which is \"longer\"\n\t * @param parentCandidate A uri which is \"shorter\" then `base`\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Creates a key from a resource URI to be used to resource comparison and for resource maps.\n\t * @see ResourceMap\n\t * @param uri Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tgetComparisonKey(uri: URI, ignoreFragment?: boolean): string;\n\n\t// --- path math\n\n\tbasenameOrAuthority(resource: URI): string;\n\n\t/**\n\t * Returns the basename of the path component of an uri.\n\t * @param resource\n\t */\n\tbasename(resource: URI): string;\n\n\t/**\n\t * Returns the extension of the path component of an uri.\n\t * @param resource\n\t */\n\textname(resource: URI): string;\n\t/**\n\t * Return a URI representing the directory of a URI path.\n\t *\n\t * @param resource The input URI.\n\t * @returns The URI representing the directory of the input URI.\n\t */\n\tdirname(resource: URI): URI;\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param resource The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI\n\t/**\n\t * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n\t *\n\t * @param resource The URI to normalize the path.\n\t * @returns The URI with the normalized path.\n\t */\n\tnormalizePath(resource: URI): URI;\n\t/**\n\t *\n\t * @param from\n\t * @param to\n\t */\n\trelativePath(from: URI, to: URI): string | undefined;\n\t/**\n\t * Resolves an absolute or relative path against a base URI.\n\t * The path can be relative or absolute posix or a Windows path\n\t */\n\tresolvePath(base: URI, path: string): URI;\n\n\t// --- misc\n\n\t/**\n\t * Returns true if the URI path is absolute.\n\t */\n\tisAbsolutePath(resource: URI): boolean;\n\t/**\n\t * Tests whether the two authorities are the same\n\t */\n\tisEqualAuthority(a1: string, a2: string): boolean;\n\t/**\n\t * Returns true if the URI path has a trailing path separator\n\t */\n\thasTrailingPathSeparator(resource: URI, sep?: string): boolean;\n\t/**\n\t * Removes a trailing path separator, if there's one.\n\t * Important: Doesn't remove the first slash, it would make the URI invalid\n\t */\n\tremoveTrailingPathSeparator(resource: URI, sep?: string): URI;\n\t/**\n\t * Adds a trailing path separator to the URI if there isn't one already.\n\t * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n\t */\n\taddTrailingPathSeparator(resource: URI, sep?: string): URI;\n}\n\nexport class ExtUri implements IExtUri {\n\n\tconstructor(private _ignorePathCasing: (uri: URI) => boolean) { }\n\n\tcompare(uri1: URI, uri2: URI, ignoreFragment: boolean = false): number {\n\t\tif (uri1 === uri2) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n\t}\n\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment: boolean = false): boolean {\n\t\tif (uri1 === uri2) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!uri1 || !uri2) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n\t}\n\n\tgetComparisonKey(uri: URI, ignoreFragment: boolean = false): string {\n\t\treturn uri.with({\n\t\t\tpath: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n\t\t\tfragment: ignoreFragment ? null : undefined\n\t\t}).toString();\n\t}\n\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment: boolean = false): boolean {\n\t\tif (base.scheme === parentCandidate.scheme) {\n\t\t\tif (base.scheme === Schemas.file) {\n\t\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// --- path math\n\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI {\n\t\treturn URI.joinPath(resource, ...pathFragment);\n\t}\n\n\tbasenameOrAuthority(resource: URI): string {\n\t\treturn basename(resource) || resource.authority;\n\t}\n\n\tbasename(resource: URI): string {\n\t\treturn paths.posix.basename(resource.path);\n\t}\n\n\textname(resource: URI): string {\n\t\treturn paths.posix.extname(resource.path);\n\t}\n\n\tdirname(resource: URI): URI {\n\t\tif (resource.path.length === 0) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet dirname;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tdirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tdirname = paths.posix.dirname(resource.path);\n\t\t\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\t\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\t\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t\t\t}\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: dirname\n\t\t});\n\t}\n\n\tnormalizePath(resource: URI): URI {\n\t\tif (!resource.path.length) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet normalizedPath: string;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: normalizedPath\n\t\t});\n\t}\n\n\trelativePath(from: URI, to: URI): string | undefined {\n\t\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (from.scheme === Schemas.file) {\n\t\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t\t}\n\t\tlet fromPath = from.path || '/', toPath = to.path || '/';\n\t\tif (this._ignorePathCasing(from)) {\n\t\t\t// make casing of fromPath match toPath\n\t\t\tlet i = 0;\n\t\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t\t}\n\t\treturn paths.posix.relative(fromPath, toPath);\n\t}\n\n\tresolvePath(base: URI, path: string): URI {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\t\treturn base.with({\n\t\t\t\tauthority: newURI.authority,\n\t\t\t\tpath: newURI.path\n\t\t\t});\n\t\t}\n\t\tif (path.indexOf('/') === -1) { // no slashes? it's likely a Windows path\n\t\t\tpath = extpath.toSlashes(path);\n\t\t\tif (/^[a-zA-Z]:(\\/|$)/.test(path)) { // starts with a drive letter\n\t\t\t\tpath = '/' + path;\n\t\t\t}\n\t\t}\n\t\treturn base.with({\n\t\t\tpath: paths.posix.resolve(base.path, path)\n\t\t});\n\t}\n\n\t// --- misc\n\n\tisAbsolutePath(resource: URI): boolean {\n\t\treturn !!resource.path && resource.path[0] === '/';\n\t}\n\n\tisEqualAuthority(a1: string, a2: string) {\n\t\treturn a1 === a2 || equalsIgnoreCase(a1, a2);\n\t}\n\n\thasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t\t} else {\n\t\t\tconst p = resource.path;\n\t\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t\t}\n\t}\n\n\tremoveTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\t\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t\t}\n\t\treturn resource;\n\t}\n\n\taddTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\tlet isRootSep: boolean = false;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t\t} else {\n\t\t\tsep = '/';\n\t\t\tconst p = resource.path;\n\t\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t\t}\n\t\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path + '/' });\n\t\t}\n\t\treturn resource;\n\t}\n}\n\n\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn uri.scheme === Schemas.file ? !isLinux : true;\n});\n\n\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\n\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n\n//#endregion\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport class ResourceGlobMatcher {\n\n\tprivate readonly globalExpression: ParsedExpression;\n\tprivate readonly expressionsByRoot: TernarySearchTree<URI, { root: URI, expression: ParsedExpression }> = TernarySearchTree.forUris<{ root: URI, expression: ParsedExpression }>();\n\n\tconstructor(\n\t\tglobalExpression: IExpression,\n\t\trootExpressions: { root: URI, expression: IExpression }[]\n\t) {\n\t\tthis.globalExpression = parse(globalExpression);\n\t\tfor (const expression of rootExpressions) {\n\t\t\tthis.expressionsByRoot.set(expression.root, { root: expression.root, expression: parse(expression.expression) });\n\t\t}\n\t}\n\n\tmatches(resource: URI): boolean {\n\t\tconst rootExpression = this.expressionsByRoot.findSubstr(resource);\n\t\tif (rootExpression) {\n\t\t\tconst path = relativePath(rootExpression.root, resource);\n\t\t\tif (path && !!rootExpression.expression(path)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn !!this.globalExpression(resource.path);\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: Schemas.vscodeRemote, authority, path });\n\t}\n\n\treturn resource.with({ scheme: Schemas.file });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { posix, normalize, win32, sep } from 'vs/base/common/path';\nimport { startsWithIgnoreCase, rtrim } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows, isMacintosh } from 'vs/base/common/platform';\nimport { isEqual, basename, relativePath } from 'vs/base/common/resources';\n\nexport interface IWorkspaceFolderProvider {\n\tgetWorkspaceFolder(resource: URI): { uri: URI, name?: string } | null;\n\tgetWorkspace(): {\n\t\tfolders: { uri: URI, name?: string }[];\n\t};\n}\n\nexport interface IUserHomeProvider {\n\tuserHome?: URI;\n}\n\n/**\n * @deprecated use LabelService instead\n */\nexport function getPathLabel(resource: URI | string, userHomeProvider?: IUserHomeProvider, rootProvider?: IWorkspaceFolderProvider): string {\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\t// return early if we can resolve a relative path label from the root\n\tif (rootProvider) {\n\t\tconst baseResource = rootProvider.getWorkspaceFolder(resource);\n\t\tif (baseResource) {\n\t\t\tconst hasMultipleRoots = rootProvider.getWorkspace().folders.length > 1;\n\n\t\t\tlet pathLabel: string;\n\t\t\tif (isEqual(baseResource.uri, resource)) {\n\t\t\t\tpathLabel = ''; // no label if paths are identical\n\t\t\t} else {\n\t\t\t\tpathLabel = relativePath(baseResource.uri, resource)!;\n\t\t\t}\n\n\t\t\tif (hasMultipleRoots) {\n\t\t\t\tconst rootName = baseResource.name ? baseResource.name : basename(baseResource.uri);\n\t\t\t\tpathLabel = pathLabel ? (rootName + ' • ' + pathLabel) : rootName; // always show root basename if there are multiple\n\t\t\t}\n\n\t\t\treturn pathLabel;\n\t\t}\n\t}\n\n\t// return if the resource is neither file:// nor untitled:// and no baseResource was provided\n\tif (resource.scheme !== Schemas.file && resource.scheme !== Schemas.untitled) {\n\t\treturn resource.with({ query: null, fragment: null }).toString(true);\n\t}\n\n\t// convert c:\\something => C:\\something\n\tif (hasDriveLetter(resource.fsPath)) {\n\t\treturn normalize(normalizeDriveLetter(resource.fsPath));\n\t}\n\n\t// normalize and tildify (macOS, Linux only)\n\tlet res = normalize(resource.fsPath);\n\tif (!isWindows && userHomeProvider?.userHome) {\n\t\tres = tildify(res, userHomeProvider.userHome.fsPath);\n\t}\n\n\treturn res;\n}\n\nexport function getBaseLabel(resource: URI | string): string;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined {\n\tif (!resource) {\n\t\treturn undefined;\n\t}\n\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\tconst base = basename(resource) || (resource.scheme === Schemas.file ? resource.fsPath : resource.path) /* can be empty string if '/' is passed in */;\n\n\t// convert c: => C:\n\tif (hasDriveLetter(base)) {\n\t\treturn normalizeDriveLetter(base);\n\t}\n\n\treturn base;\n}\n\nfunction hasDriveLetter(path: string): boolean {\n\treturn !!(isWindows && path && path[1] === ':');\n}\n\nexport function normalizeDriveLetter(path: string): string {\n\tif (hasDriveLetter(path)) {\n\t\treturn path.charAt(0).toUpperCase() + path.slice(1);\n\t}\n\n\treturn path;\n}\n\nlet normalizedUserHomeCached: { original: string; normalized: string } = Object.create(null);\nexport function tildify(path: string, userHome: string): string {\n\tif (isWindows || !path || !userHome) {\n\t\treturn path; // unsupported\n\t}\n\n\t// Keep a normalized user home path as cache to prevent accumulated string creation\n\tlet normalizedUserHome = normalizedUserHomeCached.original === userHome ? normalizedUserHomeCached.normalized : undefined;\n\tif (!normalizedUserHome) {\n\t\tnormalizedUserHome = `${rtrim(userHome, posix.sep)}${posix.sep}`;\n\t\tnormalizedUserHomeCached = { original: userHome, normalized: normalizedUserHome };\n\t}\n\n\t// Linux: case sensitive, macOS: case insensitive\n\tif (isLinux ? path.startsWith(normalizedUserHome) : startsWithIgnoreCase(path, normalizedUserHome)) {\n\t\tpath = `~/${path.substr(normalizedUserHome.length)}`;\n\t}\n\n\treturn path;\n}\n\nexport function untildify(path: string, userHome: string): string {\n\treturn path.replace(/^~($|\\/|\\\\)/, `${userHome}$1`);\n}\n\n/**\n * Shortens the paths but keeps them easy to distinguish.\n * Replaces not important parts with ellipsis.\n * Every shorten path matches only one original path and vice versa.\n *\n * Algorithm for shortening paths is as follows:\n * 1. For every path in list, find unique substring of that path.\n * 2. Unique substring along with ellipsis is shortened path of that path.\n * 3. To find unique substring of path, consider every segment of length from 1 to path.length of path from end of string\n *    and if present segment is not substring to any other paths then present segment is unique path,\n *    else check if it is not present as suffix of any other path and present segment is suffix of path itself,\n *    if it is true take present segment as unique path.\n * 4. Apply ellipsis to unique segment according to whether segment is present at start/in-between/end of path.\n *\n * Example 1\n * 1. consider 2 paths i.e. ['a\\\\b\\\\c\\\\d', 'a\\\\f\\\\b\\\\c\\\\d']\n * 2. find unique path of first path,\n * \ta. 'd' is present in path2 and is suffix of path2, hence not unique of present path.\n * \tb. 'c' is present in path2 and 'c' is not suffix of present path, similarly for 'b' and 'a' also.\n * \tc. 'd\\\\c' is suffix of path2.\n *  d. 'b\\\\c' is not suffix of present path.\n *  e. 'a\\\\b' is not present in path2, hence unique path is 'a\\\\b...'.\n * 3. for path2, 'f' is not present in path1 hence unique is '...\\\\f\\\\...'.\n *\n * Example 2\n * 1. consider 2 paths i.e. ['a\\\\b', 'a\\\\b\\\\c'].\n * \ta. Even if 'b' is present in path2, as 'b' is suffix of path1 and is not suffix of path2, unique path will be '...\\\\b'.\n * 2. for path2, 'c' is not present in path1 hence unique path is '..\\\\c'.\n */\nconst ellipsis = '\\u2026';\nconst unc = '\\\\\\\\';\nconst home = '~';\nexport function shorten(paths: string[], pathSeparator: string = sep): string[] {\n\tconst shortenedPaths: string[] = new Array(paths.length);\n\n\t// for every path\n\tlet match = false;\n\tfor (let pathIndex = 0; pathIndex < paths.length; pathIndex++) {\n\t\tlet path = paths[pathIndex];\n\n\t\tif (path === '') {\n\t\t\tshortenedPaths[pathIndex] = `.${pathSeparator}`;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!path) {\n\t\t\tshortenedPaths[pathIndex] = path;\n\t\t\tcontinue;\n\t\t}\n\n\t\tmatch = true;\n\n\t\t// trim for now and concatenate unc path (e.g. \\\\network) or root path (/etc, ~/etc) later\n\t\tlet prefix = '';\n\t\tif (path.indexOf(unc) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(unc) + unc.length);\n\t\t\tpath = path.substr(path.indexOf(unc) + unc.length);\n\t\t} else if (path.indexOf(pathSeparator) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(pathSeparator) + pathSeparator.length);\n\t\t\tpath = path.substr(path.indexOf(pathSeparator) + pathSeparator.length);\n\t\t} else if (path.indexOf(home) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(home) + home.length);\n\t\t\tpath = path.substr(path.indexOf(home) + home.length);\n\t\t}\n\n\t\t// pick the first shortest subpath found\n\t\tconst segments: string[] = path.split(pathSeparator);\n\t\tfor (let subpathLength = 1; match && subpathLength <= segments.length; subpathLength++) {\n\t\t\tfor (let start = segments.length - subpathLength; match && start >= 0; start--) {\n\t\t\t\tmatch = false;\n\t\t\t\tlet subpath = segments.slice(start, start + subpathLength).join(pathSeparator);\n\n\t\t\t\t// that is unique to any other path\n\t\t\t\tfor (let otherPathIndex = 0; !match && otherPathIndex < paths.length; otherPathIndex++) {\n\n\t\t\t\t\t// suffix subpath treated specially as we consider no match 'x' and 'x/...'\n\t\t\t\t\tif (otherPathIndex !== pathIndex && paths[otherPathIndex] && paths[otherPathIndex].indexOf(subpath) > -1) {\n\t\t\t\t\t\tconst isSubpathEnding: boolean = (start + subpathLength === segments.length);\n\n\t\t\t\t\t\t// Adding separator as prefix for subpath, such that 'endsWith(src, trgt)' considers subpath as directory name instead of plain string.\n\t\t\t\t\t\t// prefix is not added when either subpath is root directory or path[otherPathIndex] does not have multiple directories.\n\t\t\t\t\t\tconst subpathWithSep: string = (start > 0 && paths[otherPathIndex].indexOf(pathSeparator) > -1) ? pathSeparator + subpath : subpath;\n\t\t\t\t\t\tconst isOtherPathEnding: boolean = paths[otherPathIndex].endsWith(subpathWithSep);\n\n\t\t\t\t\t\tmatch = !isSubpathEnding || isOtherPathEnding;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// found unique subpath\n\t\t\t\tif (!match) {\n\t\t\t\t\tlet result = '';\n\n\t\t\t\t\t// preserve disk drive or root prefix\n\t\t\t\t\tif (segments[0].endsWith(':') || prefix !== '') {\n\t\t\t\t\t\tif (start === 1) {\n\t\t\t\t\t\t\t// extend subpath to include disk drive prefix\n\t\t\t\t\t\t\tstart = 0;\n\t\t\t\t\t\t\tsubpathLength++;\n\t\t\t\t\t\t\tsubpath = segments[0] + pathSeparator + subpath;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\t\tresult = segments[0] + pathSeparator;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresult = prefix + result;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add ellipsis at the beginning if neeeded\n\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\tresult = result + ellipsis + pathSeparator;\n\t\t\t\t\t}\n\n\t\t\t\t\tresult = result + subpath;\n\n\t\t\t\t\t// add ellipsis at the end if needed\n\t\t\t\t\tif (start + subpathLength < segments.length) {\n\t\t\t\t\t\tresult = result + pathSeparator + ellipsis;\n\t\t\t\t\t}\n\n\t\t\t\t\tshortenedPaths[pathIndex] = result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (match) {\n\t\t\tshortenedPaths[pathIndex] = path; // use full path if no unique subpaths found\n\t\t}\n\t}\n\n\treturn shortenedPaths;\n}\n\nexport interface ISeparator {\n\tlabel: string;\n}\n\nenum Type {\n\tTEXT,\n\tVARIABLE,\n\tSEPARATOR\n}\n\ninterface ISegment {\n\tvalue: string;\n\ttype: Type;\n}\n\n/**\n * Helper to insert values for specific template variables into the string. E.g. \"this $(is) a $(template)\" can be\n * passed to this function together with an object that maps \"is\" and \"template\" to strings to have them replaced.\n * @param value string to which templating is applied\n * @param values the values of the templates to use\n */\nexport function template(template: string, values: { [key: string]: string | ISeparator | undefined | null } = Object.create(null)): string {\n\tconst segments: ISegment[] = [];\n\n\tlet inVariable = false;\n\tlet curVal = '';\n\tfor (const char of template) {\n\t\t// Beginning of variable\n\t\tif (char === '$' || (inVariable && char === '{')) {\n\t\t\tif (curVal) {\n\t\t\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = true;\n\t\t}\n\n\t\t// End of variable\n\t\telse if (char === '}' && inVariable) {\n\t\t\tconst resolved = values[curVal];\n\n\t\t\t// Variable\n\t\t\tif (typeof resolved === 'string') {\n\t\t\t\tif (resolved.length) {\n\t\t\t\t\tsegments.push({ value: resolved, type: Type.VARIABLE });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Separator\n\t\t\telse if (resolved) {\n\t\t\t\tconst prevSegment = segments[segments.length - 1];\n\t\t\t\tif (!prevSegment || prevSegment.type !== Type.SEPARATOR) {\n\t\t\t\t\tsegments.push({ value: resolved.label, type: Type.SEPARATOR }); // prevent duplicate separators\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = false;\n\t\t}\n\n\t\t// Text or Variable Name\n\t\telse {\n\t\t\tcurVal += char;\n\t\t}\n\t}\n\n\t// Tail\n\tif (curVal && !inVariable) {\n\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t}\n\n\treturn segments.filter((segment, index) => {\n\n\t\t// Only keep separator if we have values to the left and right\n\t\tif (segment.type === Type.SEPARATOR) {\n\t\t\tconst left = segments[index - 1];\n\t\t\tconst right = segments[index + 1];\n\n\t\t\treturn [left, right].every(segment => segment && (segment.type === Type.VARIABLE || segment.type === Type.TEXT) && segment.value.length > 0);\n\t\t}\n\n\t\t// accept any TEXT and VARIABLE\n\t\treturn true;\n\t}).map(segment => segment.value).join('');\n}\n\n/**\n * Handles mnemonics for menu items. Depending on OS:\n * - Windows: Supported via & character (replace && with &)\n * -   Linux: Supported via & character (replace && with &)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicMenuLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '').replace(/&/g, isMacintosh ? '&' : '&&');\n\t}\n\n\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n}\n\n/**\n * Handles mnemonics for buttons. Depending on OS:\n * - Windows: Supported via & character (replace && with & and & with && for escaping)\n * -   Linux: Supported via _ character (replace && with _)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicButtonLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '');\n\t}\n\n\tif (isWindows) {\n\t\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n\t}\n\n\treturn label.replace(/&&/g, '_');\n}\n\nexport function unmnemonicLabel(label: string): string {\n\treturn label.replace(/&/g, '&&');\n}\n\n/**\n * Splits a path in name and parent path, supporting both '/' and '\\'\n */\nexport function splitName(fullPath: string): { name: string, parentPath: string } {\n\tconst p = fullPath.indexOf('/') !== -1 ? posix : win32;\n\tconst name = p.basename(fullPath);\n\tconst parentPath = p.dirname(fullPath);\n\tif (name.length) {\n\t\treturn { name, parentPath };\n\t}\n\t// only the root segment\n\treturn { name: parentPath, parentPath: '' };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { MarshalledObject } from 'vs/base/common/marshalling';\nimport { Schemas } from './network';\n\nexport interface IURITransformer {\n\ttransformIncoming(uri: UriComponents): UriComponents;\n\ttransformOutgoing(uri: UriComponents): UriComponents;\n\ttransformOutgoingURI(uri: URI): URI;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nexport interface UriParts {\n\tscheme: string;\n\tauthority?: string;\n\tpath?: string;\n}\n\nexport interface IRawURITransformer {\n\ttransformIncoming(uri: UriParts): UriParts;\n\ttransformOutgoing(uri: UriParts): UriParts;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nfunction toJSON(uri: URI): UriComponents {\n\treturn <UriComponents><any>uri.toJSON();\n}\n\nexport class URITransformer implements IURITransformer {\n\n\tconstructor(private readonly remoteAuthority: string) {\n\t}\n\n\t// NOTE@coder: Coming in from the browser it'll be vscode-remote so it needs\n\t// to be transformed into file.\n\tpublic transformIncoming(uri: UriComponents): UriComponents {\n\t\treturn uri.scheme === Schemas.vscodeRemote\n\t\t\t? toJSON(URI.file(uri.path))\n\t\t\t: uri;\n\t}\n\n\t// NOTE@coder: Going out to the browser it'll be file so it needs to be\n\t// transformed into vscode-remote.\n\tpublic transformOutgoing(uri: UriComponents): UriComponents {\n\t\treturn uri.scheme === Schemas.file\n\t\t\t? toJSON(URI.from({ authority: this.remoteAuthority, scheme: Schemas.vscodeRemote, path: uri.path }))\n\t\t\t: uri;\n\t}\n\n\tpublic transformOutgoingURI(uri: URI): URI {\n\t\treturn uri.scheme === Schemas.file\n\t\t\t? URI.from({ authority: this.remoteAuthority, scheme: Schemas.vscodeRemote, path:uri.path })\n\t\t\t: uri;\n\t}\n\n\tpublic transformOutgoingScheme(scheme: string): string {\n\t\treturn scheme === Schemas.file\n\t\t\t? Schemas.vscodeRemote\n\t\t\t: scheme;\n\t}\n}\n\nexport const DefaultURITransformer: IURITransformer = new class {\n\ttransformIncoming(uri: UriComponents) {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoing(uri: UriComponents): UriComponents {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingURI(uri: URI): URI {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingScheme(scheme: string): string {\n\t\treturn scheme;\n\t}\n};\n\nfunction _transformOutgoingURIs(obj: any, transformer: IURITransformer, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\t\tif (obj instanceof URI) {\n\t\t\treturn transformer.transformOutgoing(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformOutgoingURIs(obj[key], transformer, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformOutgoingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformOutgoingURIs(obj, transformer, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\n\nfunction _transformIncomingURIs(obj: any, transformer: IURITransformer, revive: boolean, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tif ((<MarshalledObject>obj).$mid === 1) {\n\t\t\treturn revive ? URI.revive(transformer.transformIncoming(obj)) : transformer.transformIncoming(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformIncomingURIs(obj[key], transformer, revive, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, false, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\nexport function transformAndReviveIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, true, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nexport function isUUID(value: string): boolean {\n\treturn _UUIDPattern.test(value);\n}\n\n// prep-work\nconst _data = new Uint8Array(16);\nconst _hex: string[] = [];\nfor (let i = 0; i < 256; i++) {\n\t_hex.push(i.toString(16).padStart(2, '0'));\n}\n\n// todo@joh node nodejs use `crypto#randomBytes`, see: https://nodejs.org/docs/latest/api/crypto.html#crypto_crypto_randombytes_size_callback\n// todo@joh use browser-crypto\nconst _fillRandomValues = function (bucket: Uint8Array): Uint8Array {\n\tfor (let i = 0; i < bucket.length; i++) {\n\t\tbucket[i] = Math.floor(Math.random() * 256);\n\t}\n\treturn bucket;\n};\n\nexport function generateUuid(): string {\n\t// get data\n\t_fillRandomValues(_data);\n\n\t// set version bits\n\t_data[6] = (_data[6] & 0x0f) | 0x40;\n\t_data[8] = (_data[8] & 0x3f) | 0x80;\n\n\t// print as string\n\tlet i = 0;\n\tlet result = '';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as sd from 'string_decoder';\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * Convenient way to iterate over output line by line. This helper accommodates for the fact that\n * a buffer might not end with new lines all the way.\n *\n * To use:\n * - call the write method\n * - forEach() over the result to get the lines\n */\nexport class LineDecoder {\n\tprivate stringDecoder: sd.StringDecoder;\n\tprivate remaining: string | null;\n\n\tconstructor(encoding: string = 'utf8') {\n\t\tthis.stringDecoder = new sd.StringDecoder(encoding);\n\t\tthis.remaining = null;\n\t}\n\n\twrite(buffer: Buffer): string[] {\n\t\tconst result: string[] = [];\n\t\tconst value = this.remaining\n\t\t\t? this.remaining + this.stringDecoder.write(buffer)\n\t\t\t: this.stringDecoder.write(buffer);\n\n\t\tif (value.length < 1) {\n\t\t\treturn result;\n\t\t}\n\t\tlet start = 0;\n\t\tlet ch: number;\n\t\tlet idx = start;\n\t\twhile (idx < value.length) {\n\t\t\tch = value.charCodeAt(idx);\n\t\t\tif (ch === CharCode.CarriageReturn || ch === CharCode.LineFeed) {\n\t\t\t\tresult.push(value.substring(start, idx));\n\t\t\t\tidx++;\n\t\t\t\tif (idx < value.length) {\n\t\t\t\t\tconst lastChar = ch;\n\t\t\t\t\tch = value.charCodeAt(idx);\n\t\t\t\t\tif ((lastChar === CharCode.CarriageReturn && ch === CharCode.LineFeed) || (lastChar === CharCode.LineFeed && ch === CharCode.CarriageReturn)) {\n\t\t\t\t\t\tidx++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstart = idx;\n\t\t\t} else {\n\t\t\t\tidx++;\n\t\t\t}\n\t\t}\n\t\tthis.remaining = start < value.length ? value.substr(start) : null;\n\t\treturn result;\n\t}\n\n\tend(): string | null {\n\t\treturn this.remaining;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { exec } from 'child_process';\nimport { isWindows } from 'vs/base/common/platform';\n\nconst cmdline = {\n\twindows: 'getmac.exe',\n\tunix: '/sbin/ifconfig -a || /sbin/ip link'\n};\n\nconst invalidMacAddresses = new Set([\n\t'00:00:00:00:00:00',\n\t'ff:ff:ff:ff:ff:ff',\n\t'ac:de:48:00:11:22'\n]);\n\nfunction validateMacAddress(candidate: string): boolean {\n\tconst tempCandidate = candidate.replace(/\\-/g, ':').toLowerCase();\n\treturn !invalidMacAddresses.has(tempCandidate);\n}\n\nexport function getMac(): Promise<string> {\n\treturn new Promise(async (resolve, reject) => {\n\t\tconst timeout = setTimeout(() => reject('Unable to retrieve mac address (timeout after 10s)'), 10000);\n\n\t\ttry {\n\t\t\tresolve(await doGetMac());\n\t\t} catch (error) {\n\t\t\treject(error);\n\t\t} finally {\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t});\n}\n\nfunction doGetMac(): Promise<string> {\n\treturn new Promise((resolve, reject) => {\n\t\ttry {\n\t\t\texec(isWindows ? cmdline.windows : cmdline.unix, { timeout: 10000 }, (err, stdout, stdin) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn reject(`Unable to retrieve mac address (${err.toString()})`);\n\t\t\t\t} else {\n\t\t\t\t\tconst regex = /(?:[a-f\\d]{2}[:\\-]){5}[a-f\\d]{2}/gi;\n\n\t\t\t\t\tlet match;\n\t\t\t\t\twhile ((match = regex.exec(stdout)) !== null) {\n\t\t\t\t\t\tconst macAddressCandidate = match[0];\n\t\t\t\t\t\tif (validateMacAddress(macAddressCandidate)) {\n\t\t\t\t\t\t\treturn resolve(macAddressCandidate);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn reject('Unable to retrieve mac address (unexpected format)');\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treject(err);\n\t\t}\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as errors from 'vs/base/common/errors';\nimport * as uuid from 'vs/base/common/uuid';\nimport { networkInterfaces } from 'os';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { getMac } from 'vs/base/node/macAddress';\n\n// http://www.techrepublic.com/blog/data-center/mac-address-scorecard-for-common-virtual-machine-platforms/\n// VMware ESX 3, Server, Workstation, Player\t00-50-56, 00-0C-29, 00-05-69\n// Microsoft Hyper-V, Virtual Server, Virtual PC\t00-03-FF\n// Parallels Desktop, Workstation, Server, Virtuozzo\t00-1C-42\n// Virtual Iron 4\t00-0F-4B\n// Red Hat Xen\t00-16-3E\n// Oracle VM\t00-16-3E\n// XenSource\t00-16-3E\n// Novell Xen\t00-16-3E\n// Sun xVM VirtualBox\t08-00-27\nexport const virtualMachineHint: { value(): number } = new class {\n\n\tprivate _virtualMachineOUIs?: TernarySearchTree<string, boolean>;\n\tprivate _value?: number;\n\n\tprivate _isVirtualMachineMacAdress(mac: string): boolean {\n\t\tif (!this._virtualMachineOUIs) {\n\t\t\tthis._virtualMachineOUIs = TernarySearchTree.forStrings<boolean>();\n\n\t\t\t// dash-separated\n\t\t\tthis._virtualMachineOUIs.set('00-50-56', true);\n\t\t\tthis._virtualMachineOUIs.set('00-0C-29', true);\n\t\t\tthis._virtualMachineOUIs.set('00-05-69', true);\n\t\t\tthis._virtualMachineOUIs.set('00-03-FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00-1C-42', true);\n\t\t\tthis._virtualMachineOUIs.set('00-16-3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08-00-27', true);\n\n\t\t\t// colon-separated\n\t\t\tthis._virtualMachineOUIs.set('00:50:56', true);\n\t\t\tthis._virtualMachineOUIs.set('00:0C:29', true);\n\t\t\tthis._virtualMachineOUIs.set('00:05:69', true);\n\t\t\tthis._virtualMachineOUIs.set('00:03:FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00:1C:42', true);\n\t\t\tthis._virtualMachineOUIs.set('00:16:3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08:00:27', true);\n\t\t}\n\t\treturn !!this._virtualMachineOUIs.findSubstr(mac);\n\t}\n\n\tvalue(): number {\n\t\tif (this._value === undefined) {\n\t\t\tlet vmOui = 0;\n\t\t\tlet interfaceCount = 0;\n\n\t\t\tconst interfaces = networkInterfaces();\n\t\t\tfor (let name in interfaces) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(interfaces, name)) {\n\t\t\t\t\tfor (const { mac, internal } of interfaces[name]) {\n\t\t\t\t\t\tif (!internal) {\n\t\t\t\t\t\t\tinterfaceCount += 1;\n\t\t\t\t\t\t\tif (this._isVirtualMachineMacAdress(mac.toUpperCase())) {\n\t\t\t\t\t\t\t\tvmOui += 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._value = interfaceCount > 0\n\t\t\t\t? vmOui / interfaceCount\n\t\t\t\t: 0;\n\t\t}\n\n\t\treturn this._value;\n\t}\n};\n\nlet machineId: Promise<string>;\nexport async function getMachineId(): Promise<string> {\n\tif (!machineId) {\n\t\tmachineId = (async () => {\n\t\t\tconst id = await getMacMachineId();\n\n\t\t\treturn id || uuid.generateUuid(); // fallback, generate a UUID\n\t\t})();\n\t}\n\n\treturn machineId;\n}\n\nasync function getMacMachineId(): Promise<string | undefined> {\n\ttry {\n\t\tconst crypto = await import('crypto');\n\t\tconst macAddress = await getMac();\n\t\treturn crypto.createHash('sha256').update(macAddress, 'utf8').digest('hex');\n\t} catch (err) {\n\t\terrors.onUnexpectedError(err);\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\ninterface IPaths {\n\tgetAppDataPath(platform: string): string;\n\tgetDefaultUserDataPath(platform: string): string;\n}\n\nconst pathsPath = getPathFromAmdModule(require, 'paths');\nconst paths = require.__$__nodeRequire<IPaths>(pathsPath);\nexport const getAppDataPath = paths.getAppDataPath;\nexport const getDefaultUserDataPath = paths.getDefaultUserDataPath;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join } from 'vs/base/common/path';\nimport { Queue } from 'vs/base/common/async';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as platform from 'vs/base/common/platform';\nimport { Event } from 'vs/base/common/event';\nimport { promisify } from 'util';\nimport { isRootOrDriveLetter } from 'vs/base/common/extpath';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { normalizeNFC } from 'vs/base/common/normalization';\n\n// See https://github.com/Microsoft/vscode/issues/30180\nconst WIN32_MAX_FILE_SIZE = 300 * 1024 * 1024; // 300 MB\nconst GENERAL_MAX_FILE_SIZE = 16 * 1024 * 1024 * 1024; // 16 GB\n\n// See https://github.com/v8/v8/blob/5918a23a3d571b9625e5cce246bdd5b46ff7cd8b/src/heap/heap.cc#L149\nconst WIN32_MAX_HEAP_SIZE = 700 * 1024 * 1024; // 700 MB\nconst GENERAL_MAX_HEAP_SIZE = 700 * 2 * 1024 * 1024; // 1400 MB\n\nexport const MAX_FILE_SIZE = process.arch === 'ia32' ? WIN32_MAX_FILE_SIZE : GENERAL_MAX_FILE_SIZE;\nexport const MAX_HEAP_SIZE = process.arch === 'ia32' ? WIN32_MAX_HEAP_SIZE : GENERAL_MAX_HEAP_SIZE;\n\nexport enum RimRafMode {\n\n\t/**\n\t * Slow version that unlinks each file and folder.\n\t */\n\tUNLINK,\n\n\t/**\n\t * Fast version that first moves the file/folder\n\t * into a temp directory and then deletes that\n\t * without waiting for it.\n\t */\n\tMOVE\n}\n\nexport async function rimraf(path: string, mode = RimRafMode.UNLINK): Promise<void> {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\t// delete: via unlink\n\tif (mode === RimRafMode.UNLINK) {\n\t\treturn rimrafUnlink(path);\n\t}\n\n\t// delete: via move\n\treturn rimrafMove(path);\n}\n\nasync function rimrafUnlink(path: string): Promise<void> {\n\ttry {\n\t\tconst stat = await lstat(path);\n\n\t\t// Folder delete (recursive) - NOT for symbolic links though!\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\n\t\t\t// Children\n\t\t\tconst children = await readdir(path);\n\t\t\tawait Promise.all(children.map(child => rimrafUnlink(join(path, child))));\n\n\t\t\t// Folder\n\t\t\tawait promisify(fs.rmdir)(path);\n\t\t}\n\n\t\t// Single file delete\n\t\telse {\n\n\t\t\t// chmod as needed to allow for unlink\n\t\t\tconst mode = stat.mode;\n\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\tawait chmod(path, mode | 128);\n\t\t\t}\n\n\t\t\treturn unlink(path);\n\t\t}\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nasync function rimrafMove(path: string): Promise<void> {\n\ttry {\n\t\tconst pathInTemp = join(os.tmpdir(), generateUuid());\n\t\ttry {\n\t\t\tawait rename(path, pathInTemp);\n\t\t} catch (error) {\n\t\t\treturn rimrafUnlink(path); // if rename fails, delete without tmp dir\n\t\t}\n\n\t\t// Delete but do not return as promise\n\t\trimrafUnlink(pathInTemp);\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport function rimrafSync(path: string): void {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\ttry {\n\t\tconst stat = fs.lstatSync(path);\n\n\t\t// Folder delete (recursive) - NOT for symbolic links though!\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\n\t\t\t// Children\n\t\t\tconst children = readdirSync(path);\n\t\t\tchildren.map(child => rimrafSync(join(path, child)));\n\n\t\t\t// Folder\n\t\t\tfs.rmdirSync(path);\n\t\t}\n\n\t\t// Single file delete\n\t\telse {\n\n\t\t\t// chmod as needed to allow for unlink\n\t\t\tconst mode = stat.mode;\n\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\tfs.chmodSync(path, mode | 128);\n\t\t\t}\n\n\t\t\treturn fs.unlinkSync(path);\n\t\t}\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function readdir(path: string): Promise<string[]> {\n\treturn handleDirectoryChildren(await promisify(fs.readdir)(path));\n}\n\nexport async function readdirWithFileTypes(path: string): Promise<fs.Dirent[]> {\n\tconst children = await promisify(fs.readdir)(path, { withFileTypes: true });\n\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\tfor (const child of children) {\n\t\t\tchild.name = normalizeNFC(child.name);\n\t\t}\n\t}\n\n\treturn children;\n}\n\nexport function readdirSync(path: string): string[] {\n\treturn handleDirectoryChildren(fs.readdirSync(path));\n}\n\nfunction handleDirectoryChildren(children: string[]): string[] {\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\treturn children.map(child => normalizeNFC(child));\n\t}\n\n\treturn children;\n}\n\nexport function exists(path: string): Promise<boolean> {\n\treturn promisify(fs.exists)(path);\n}\n\nexport function chmod(path: string, mode: number): Promise<void> {\n\treturn promisify(fs.chmod)(path, mode);\n}\n\nexport function stat(path: string): Promise<fs.Stats> {\n\treturn promisify(fs.stat)(path);\n}\n\nexport interface IStatAndLink {\n\n\t// The stats of the file. If the file is a symbolic\n\t// link, the stats will be of that target file and\n\t// not the link itself.\n\t// If the file is a symbolic link pointing to a non\n\t// existing file, the stat will be of the link and\n\t// the `dangling` flag will indicate this.\n\tstat: fs.Stats;\n\n\t// Will be provided if the resource is a symbolic link\n\t// on disk. Use the `dangling` flag to find out if it\n\t// points to a resource that does not exist on disk.\n\tsymbolicLink?: { dangling: boolean };\n}\n\nexport async function statLink(path: string): Promise<IStatAndLink> {\n\n\t// First stat the link\n\tlet lstats: fs.Stats | undefined;\n\ttry {\n\t\tlstats = await lstat(path);\n\n\t\t// Return early if the stat is not a symbolic link at all\n\t\tif (!lstats.isSymbolicLink()) {\n\t\t\treturn { stat: lstats };\n\t\t}\n\t} catch (error) {\n\t\t/* ignore - use stat() instead */\n\t}\n\n\t// If the stat is a symbolic link or failed to stat, use fs.stat()\n\t// which for symbolic links will stat the target they point to\n\ttry {\n\t\tconst stats = await stat(path);\n\n\t\treturn { stat: stats, symbolicLink: lstats?.isSymbolicLink() ? { dangling: false } : undefined };\n\t} catch (error) {\n\n\t\t// If the link points to a non-existing file we still want\n\t\t// to return it as result while setting dangling: true flag\n\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n\nexport function lstat(path: string): Promise<fs.Stats> {\n\treturn promisify(fs.lstat)(path);\n}\n\nexport function rename(oldPath: string, newPath: string): Promise<void> {\n\treturn promisify(fs.rename)(oldPath, newPath);\n}\n\nexport function renameIgnoreError(oldPath: string, newPath: string): Promise<void> {\n\treturn new Promise(resolve => fs.rename(oldPath, newPath, () => resolve()));\n}\n\nexport function unlink(path: string): Promise<void> {\n\treturn promisify(fs.unlink)(path);\n}\n\nexport function symlink(target: string, path: string, type?: string): Promise<void> {\n\treturn promisify(fs.symlink)(target, path, type);\n}\n\nexport function truncate(path: string, len: number): Promise<void> {\n\treturn promisify(fs.truncate)(path, len);\n}\n\nexport function readFile(path: string): Promise<Buffer>;\nexport function readFile(path: string, encoding: string): Promise<string>;\nexport function readFile(path: string, encoding?: string): Promise<Buffer | string> {\n\treturn promisify(fs.readFile)(path, encoding);\n}\n\nexport async function mkdirp(path: string, mode?: number): Promise<void> {\n\treturn promisify(fs.mkdir)(path, { mode, recursive: true });\n}\n\n// According to node.js docs (https://nodejs.org/docs/v6.5.0/api/fs.html#fs_fs_writefile_file_data_options_callback)\n// it is not safe to call writeFile() on the same path multiple times without waiting for the callback to return.\n// Therefor we use a Queue on the path that is given to us to sequentialize calls to the same path properly.\nconst writeFilePathQueues: Map<string, Queue<void>> = new Map();\n\nexport function writeFile(path: string, data: string, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Buffer, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void> {\n\tconst queueKey = toQueueKey(path);\n\n\treturn ensureWriteFileQueue(queueKey).queue(() => {\n\t\tconst ensuredOptions = ensureWriteOptions(options);\n\n\t\treturn new Promise((resolve, reject) => doWriteFileAndFlush(path, data, ensuredOptions, error => error ? reject(error) : resolve()));\n\t});\n}\n\nfunction toQueueKey(path: string): string {\n\tlet queueKey = path;\n\tif (platform.isWindows || platform.isMacintosh) {\n\t\tqueueKey = queueKey.toLowerCase(); // accommodate for case insensitive file systems\n\t}\n\n\treturn queueKey;\n}\n\nfunction ensureWriteFileQueue(queueKey: string): Queue<void> {\n\tconst existingWriteFileQueue = writeFilePathQueues.get(queueKey);\n\tif (existingWriteFileQueue) {\n\t\treturn existingWriteFileQueue;\n\t}\n\n\tconst writeFileQueue = new Queue<void>();\n\twriteFilePathQueues.set(queueKey, writeFileQueue);\n\n\tconst onFinish = Event.once(writeFileQueue.onFinished);\n\tonFinish(() => {\n\t\twriteFilePathQueues.delete(queueKey);\n\t\twriteFileQueue.dispose();\n\t});\n\n\treturn writeFileQueue;\n}\n\nexport interface IWriteFileOptions {\n\tmode?: number;\n\tflag?: string;\n}\n\ninterface IEnsuredWriteFileOptions extends IWriteFileOptions {\n\tmode: number;\n\tflag: string;\n}\n\nlet canFlush = true;\n\n// Calls fs.writeFile() followed by a fs.sync() call to flush the changes to disk\n// We do this in cases where we want to make sure the data is really on disk and\n// not in some cache.\n//\n// See https://github.com/nodejs/node/blob/v5.10.0/lib/fs.js#L1194\nfunction doWriteFileAndFlush(path: string, data: string | Buffer | Uint8Array, options: IEnsuredWriteFileOptions, callback: (error: Error | null) => void): void {\n\tif (!canFlush) {\n\t\treturn fs.writeFile(path, data, { mode: options.mode, flag: options.flag }, callback);\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tfs.open(path, options.flag, options.mode, (openError, fd) => {\n\t\tif (openError) {\n\t\t\treturn callback(openError);\n\t\t}\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFile(fd, data, writeError => {\n\t\t\tif (writeError) {\n\t\t\t\treturn fs.close(fd, () => callback(writeError)); // still need to close the handle on error!\n\t\t\t}\n\n\t\t\t// Flush contents (not metadata) of the file to disk\n\t\t\tfs.fdatasync(fd, (syncError: Error | null) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tcanFlush = false;\n\t\t\t\t}\n\n\t\t\t\treturn fs.close(fd, closeError => callback(closeError));\n\t\t\t});\n\t\t});\n\t});\n}\n\nexport function writeFileSync(path: string, data: string | Buffer, options?: IWriteFileOptions): void {\n\tconst ensuredOptions = ensureWriteOptions(options);\n\n\tif (!canFlush) {\n\t\treturn fs.writeFileSync(path, data, { mode: ensuredOptions.mode, flag: ensuredOptions.flag });\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tconst fd = fs.openSync(path, ensuredOptions.flag, ensuredOptions.mode);\n\n\ttry {\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFileSync(fd, data);\n\n\t\t// Flush contents (not metadata) of the file to disk\n\t\ttry {\n\t\t\tfs.fdatasyncSync(fd);\n\t\t} catch (syncError) {\n\t\t\tconsole.warn('[node.js fs] fdatasyncSync is now disabled for this session because it failed: ', syncError);\n\t\t\tcanFlush = false;\n\t\t}\n\t} finally {\n\t\tfs.closeSync(fd);\n\t}\n}\n\nfunction ensureWriteOptions(options?: IWriteFileOptions): IEnsuredWriteFileOptions {\n\tif (!options) {\n\t\treturn { mode: 0o666, flag: 'w' };\n\t}\n\n\treturn {\n\t\tmode: typeof options.mode === 'number' ? options.mode : 0o666,\n\t\tflag: typeof options.flag === 'string' ? options.flag : 'w'\n\t};\n}\n\nexport async function readDirsInDir(dirPath: string): Promise<string[]> {\n\tconst children = await readdir(dirPath);\n\tconst directories: string[] = [];\n\n\tfor (const child of children) {\n\t\tif (await dirExists(join(dirPath, child))) {\n\t\t\tdirectories.push(child);\n\t\t}\n\t}\n\n\treturn directories;\n}\n\nexport async function dirExists(path: string): Promise<boolean> {\n\ttry {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn fileStat.isDirectory();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\nexport async function fileExists(path: string): Promise<boolean> {\n\ttry {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn fileStat.isFile();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\nexport function whenDeleted(path: string): Promise<void> {\n\n\t// Complete when wait marker file is deleted\n\treturn new Promise<void>(resolve => {\n\t\tlet running = false;\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!running) {\n\t\t\t\trunning = true;\n\t\t\t\tfs.exists(path, exists => {\n\t\t\t\t\trunning = false;\n\n\t\t\t\t\tif (!exists) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, 1000);\n\t});\n}\n\nexport async function move(source: string, target: string): Promise<void> {\n\tif (source === target) {\n\t\treturn Promise.resolve();\n\t}\n\n\tasync function updateMtime(path: string): Promise<void> {\n\t\tconst stat = await lstat(path);\n\t\tif (stat.isDirectory() || stat.isSymbolicLink()) {\n\t\t\treturn Promise.resolve(); // only for files\n\t\t}\n\n\t\tconst fd = await promisify(fs.open)(path, 'a');\n\t\ttry {\n\t\t\tawait promisify(fs.futimes)(fd, stat.atime, new Date());\n\t\t} catch (error) {\n\t\t\t//ignore\n\t\t}\n\n\t\treturn promisify(fs.close)(fd);\n\t}\n\n\ttry {\n\t\tawait rename(source, target);\n\t\tawait updateMtime(target);\n\t} catch (error) {\n\n\t\t// In two cases we fallback to classic copy and delete:\n\t\t//\n\t\t// 1.) The EXDEV error indicates that source and target are on different devices\n\t\t// In this case, fallback to using a copy() operation as there is no way to\n\t\t// rename() between different devices.\n\t\t//\n\t\t// 2.) The user tries to rename a file/folder that ends with a dot. This is not\n\t\t// really possible to move then, at least on UNC devices.\n\t\tif (source.toLowerCase() !== target.toLowerCase() && error.code === 'EXDEV' || source.endsWith('.')) {\n\t\t\tawait copy(source, target);\n\t\t\tawait rimraf(source, RimRafMode.MOVE);\n\t\t\tawait updateMtime(target);\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function copy(source: string, target: string, copiedSourcesIn?: { [path: string]: boolean }): Promise<void> {\n\tconst copiedSources = copiedSourcesIn ? copiedSourcesIn : Object.create(null);\n\n\tconst fileStat = await stat(source);\n\tif (!fileStat.isDirectory()) {\n\t\treturn doCopyFile(source, target, fileStat.mode & 511);\n\t}\n\n\tif (copiedSources[source]) {\n\t\treturn Promise.resolve(); // escape when there are cycles (can happen with symlinks)\n\t}\n\n\tcopiedSources[source] = true; // remember as copied\n\n\t// Create folder\n\tawait mkdirp(target, fileStat.mode & 511);\n\n\t// Copy each file recursively\n\tconst files = await readdir(source);\n\tfor (let i = 0; i < files.length; i++) {\n\t\tconst file = files[i];\n\t\tawait copy(join(source, file), join(target, file), copiedSources);\n\t}\n}\n\nasync function doCopyFile(source: string, target: string, mode: number): Promise<void> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst reader = fs.createReadStream(source);\n\t\tconst writer = fs.createWriteStream(target, { mode });\n\n\t\tlet finished = false;\n\t\tconst finish = (error?: Error) => {\n\t\t\tif (!finished) {\n\t\t\t\tfinished = true;\n\n\t\t\t\t// in error cases, pass to callback\n\t\t\t\tif (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\t// we need to explicitly chmod because of https://github.com/nodejs/node/issues/1104\n\t\t\t\tfs.chmod(target, mode, error => error ? reject(error) : resolve());\n\t\t\t}\n\t\t};\n\n\t\t// handle errors properly\n\t\treader.once('error', error => finish(error));\n\t\twriter.once('error', error => finish(error));\n\n\t\t// we are done (underlying fd has been closed)\n\t\twriter.once('close', () => finish());\n\n\t\t// start piping\n\t\treader.pipe(writer);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { rtrim } from 'vs/base/common/strings';\nimport { sep, join, normalize, dirname, basename } from 'vs/base/common/path';\nimport { readdirSync } from 'vs/base/node/pfs';\nimport { promisify } from 'util';\n\n/**\n * Copied from: https://github.com/Microsoft/vscode-node-debug/blob/master/src/node/pathUtilities.ts#L83\n *\n * Given an absolute, normalized, and existing file path 'realcase' returns the exact path that the file has on disk.\n * On a case insensitive file system, the returned path might differ from the original path by character casing.\n * On a case sensitive file system, the returned path will always be identical to the original path.\n * In case of errors, null is returned. But you cannot use this function to verify that a path exists.\n * realcaseSync does not handle '..' or '.' path segments and it does not take the locale into account.\n */\nexport function realcaseSync(path: string): string | null {\n\tconst dir = dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tconst entries = readdirSync(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport async function realpath(path: string): Promise<string> {\n\ttry {\n\t\treturn await promisify(fs.realpath)(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpath(). Since fs.realpath() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\tawait promisify(fs.access)(normalizedPath, fs.constants.R_OK);\n\n\t\treturn normalizedPath;\n\t}\n}\n\nexport function realpathSync(path: string): string {\n\ttry {\n\t\treturn fs.realpathSync(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpathSync(). Since fs.realpathSync() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\t\tfs.accessSync(normalizedPath, fs.constants.R_OK); // throws in case of an error\n\n\t\treturn normalizedPath;\n\t}\n}\n\nfunction normalizePath(path: string): string {\n\treturn rtrim(normalize(path), sep);\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join, basename } from 'vs/base/common/path';\nimport { watch } from 'fs';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { toDisposable, IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { exists, readdir } from 'vs/base/node/pfs';\n\nexport function watchFile(path: string, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\treturn doWatchNonRecursive({ path, isDirectory: false }, onChange, onError);\n}\n\nexport function watchFolder(path: string, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\treturn doWatchNonRecursive({ path, isDirectory: true }, onChange, onError);\n}\n\nexport const CHANGE_BUFFER_DELAY = 100;\n\nfunction doWatchNonRecursive(file: { path: string, isDirectory: boolean }, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\tconst originalFileName = basename(file.path);\n\tconst mapPathToStatDisposable = new Map<string, IDisposable>();\n\n\tlet disposed = false;\n\tlet watcherDisposables: IDisposable[] = [toDisposable(() => {\n\t\tmapPathToStatDisposable.forEach(disposable => dispose(disposable));\n\t\tmapPathToStatDisposable.clear();\n\t})];\n\n\ttry {\n\n\t\t// Creating watcher can fail with an exception\n\t\tconst watcher = watch(file.path);\n\t\twatcherDisposables.push(toDisposable(() => {\n\t\t\twatcher.removeAllListeners();\n\t\t\twatcher.close();\n\t\t}));\n\n\t\t// Folder: resolve children to emit proper events\n\t\tconst folderChildren: Set<string> = new Set<string>();\n\t\tif (file.isDirectory) {\n\t\t\treaddir(file.path).then(children => children.forEach(child => folderChildren.add(child)));\n\t\t}\n\n\t\twatcher.on('error', (code: number, signal: string) => {\n\t\t\tif (!disposed) {\n\t\t\t\tonError(`Failed to watch ${file.path} for changes using fs.watch() (${code}, ${signal})`);\n\t\t\t}\n\t\t});\n\n\t\twatcher.on('change', (type, raw) => {\n\t\t\tif (disposed) {\n\t\t\t\treturn; // ignore if already disposed\n\t\t\t}\n\n\t\t\t// Normalize file name\n\t\t\tlet changedFileName: string = '';\n\t\t\tif (raw) { // https://github.com/Microsoft/vscode/issues/38191\n\t\t\t\tchangedFileName = raw.toString();\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t\t\t\t// See also https://github.com/nodejs/node/issues/2165\n\t\t\t\t\tchangedFileName = normalizeNFC(changedFileName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!changedFileName || (type !== 'change' && type !== 'rename')) {\n\t\t\t\treturn; // ignore unexpected events\n\t\t\t}\n\n\t\t\t// File path: use path directly for files and join with changed file name otherwise\n\t\t\tconst changedFilePath = file.isDirectory ? join(file.path, changedFileName) : file.path;\n\n\t\t\t// File\n\t\t\tif (!file.isDirectory) {\n\t\t\t\tif (type === 'rename' || changedFileName !== originalFileName) {\n\t\t\t\t\t// The file was either deleted or renamed. Many tools apply changes to files in an\n\t\t\t\t\t// atomic way (\"Atomic Save\") by first renaming the file to a temporary name and then\n\t\t\t\t\t// renaming it back to the original name. Our watcher will detect this as a rename\n\t\t\t\t\t// and then stops to work on Mac and Linux because the watcher is applied to the\n\t\t\t\t\t// inode and not the name. The fix is to detect this case and trying to watch the file\n\t\t\t\t\t// again after a certain delay.\n\t\t\t\t\t// In addition, we send out a delete event if after a timeout we detect that the file\n\t\t\t\t\t// does indeed not exist anymore.\n\n\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\tconst fileExists = await exists(changedFilePath);\n\n\t\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File still exists, so emit as change event and reapply the watcher\n\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\tonChange('changed', changedFilePath);\n\n\t\t\t\t\t\t\twatcherDisposables = [doWatchNonRecursive(file, onChange, onError)];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File seems to be really gone, so emit a deleted event\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tonChange('deleted', changedFilePath);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, CHANGE_BUFFER_DELAY);\n\n\t\t\t\t\t// Very important to dispose the watcher which now points to a stale inode\n\t\t\t\t\t// and wire in a new disposable that tracks our timeout that is installed\n\t\t\t\t\tdispose(watcherDisposables);\n\t\t\t\t\twatcherDisposables = [toDisposable(() => clearTimeout(timeoutHandle))];\n\t\t\t\t} else {\n\t\t\t\t\tonChange('changed', changedFilePath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Folder\n\t\t\telse {\n\n\t\t\t\t// Children add/delete\n\t\t\t\tif (type === 'rename') {\n\n\t\t\t\t\t// Cancel any previous stats for this file path if existing\n\t\t\t\t\tconst statDisposable = mapPathToStatDisposable.get(changedFilePath);\n\t\t\t\t\tif (statDisposable) {\n\t\t\t\t\t\tdispose(statDisposable);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait a bit and try see if the file still exists on disk to decide on the resulting event\n\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\tmapPathToStatDisposable.delete(changedFilePath);\n\n\t\t\t\t\t\tconst fileExists = await exists(changedFilePath);\n\n\t\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Figure out the correct event type:\n\t\t\t\t\t\t// File Exists: either 'added' or 'changed' if known before\n\t\t\t\t\t\t// File Does not Exist: always 'deleted'\n\t\t\t\t\t\tlet type: 'added' | 'deleted' | 'changed';\n\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\t\t\ttype = 'changed';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttype = 'added';\n\t\t\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfolderChildren.delete(changedFileName);\n\t\t\t\t\t\t\ttype = 'deleted';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tonChange(type, changedFilePath);\n\t\t\t\t\t}, CHANGE_BUFFER_DELAY);\n\n\t\t\t\t\tmapPathToStatDisposable.set(changedFilePath, toDisposable(() => clearTimeout(timeoutHandle)));\n\t\t\t\t}\n\n\t\t\t\t// Other events\n\t\t\t\telse {\n\n\t\t\t\t\t// Figure out the correct event type: if this is the\n\t\t\t\t\t// first time we see this child, it can only be added\n\t\t\t\t\tlet type: 'added' | 'changed';\n\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\ttype = 'changed';\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'added';\n\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t}\n\n\t\t\t\t\tonChange(type, changedFilePath);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (error) {\n\t\texists(file.path).then(exists => {\n\t\t\tif (exists && !disposed) {\n\t\t\t\tonError(`Failed to watch ${file.path} for changes using fs.watch() (${error.toString()})`);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn toDisposable(() => {\n\t\tdisposed = true;\n\n\t\twatcherDisposables = dispose(watcherDisposables);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter, Relay, EventMultiplexer } from 'vs/base/common/event';\nimport { IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { getRandomElement } from 'vs/base/common/arrays';\nimport { isFunction, isUndefinedOrNull } from 'vs/base/common/types';\nimport { revive } from 'vs/base/common/marshalling';\nimport * as strings from 'vs/base/common/strings';\n\n/**\n * An `IChannel` is an abstraction over a collection of commands.\n * You can `call` several commands on a channel, each taking at\n * most one single argument. A `call` always returns a promise\n * with at most one single return value.\n */\nexport interface IChannel {\n\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IServerChannel` is the counter part to `IChannel`,\n * on the server-side. You should implement this interface\n * if you'd like to handle remote promises or events.\n */\nexport interface IServerChannel<TContext = string> {\n\tcall<T>(ctx: TContext, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(ctx: TContext, event: string, arg?: any): Event<T>;\n}\n\nexport const enum RequestType {\n\tPromise = 100,\n\tPromiseCancel = 101,\n\tEventListen = 102,\n\tEventDispose = 103\n}\n\nfunction requestTypeToStr(type: RequestType): string {\n\tswitch (type) {\n\t\tcase RequestType.Promise:\n\t\t\treturn 'req';\n\t\tcase RequestType.PromiseCancel:\n\t\t\treturn 'cancel';\n\t\tcase RequestType.EventListen:\n\t\t\treturn 'subscribe';\n\t\tcase RequestType.EventDispose:\n\t\t\treturn 'unsubscribe';\n\t}\n}\n\ntype IRawPromiseRequest = { type: RequestType.Promise; id: number; channelName: string; name: string; arg: any; };\ntype IRawPromiseCancelRequest = { type: RequestType.PromiseCancel, id: number };\ntype IRawEventListenRequest = { type: RequestType.EventListen; id: number; channelName: string; name: string; arg: any; };\ntype IRawEventDisposeRequest = { type: RequestType.EventDispose, id: number };\ntype IRawRequest = IRawPromiseRequest | IRawPromiseCancelRequest | IRawEventListenRequest | IRawEventDisposeRequest;\n\nexport const enum ResponseType {\n\tInitialize = 200,\n\tPromiseSuccess = 201,\n\tPromiseError = 202,\n\tPromiseErrorObj = 203,\n\tEventFire = 204\n}\n\nfunction responseTypeToStr(type: ResponseType): string {\n\tswitch (type) {\n\t\tcase ResponseType.Initialize:\n\t\t\treturn `init`;\n\t\tcase ResponseType.PromiseSuccess:\n\t\t\treturn `reply:`;\n\t\tcase ResponseType.PromiseError:\n\t\tcase ResponseType.PromiseErrorObj:\n\t\t\treturn `replyErr:`;\n\t\tcase ResponseType.EventFire:\n\t\t\treturn `event:`;\n\t}\n}\n\ntype IRawInitializeResponse = { type: ResponseType.Initialize };\ntype IRawPromiseSuccessResponse = { type: ResponseType.PromiseSuccess; id: number; data: any };\ntype IRawPromiseErrorResponse = { type: ResponseType.PromiseError; id: number; data: { message: string, name: string, stack: string[] | undefined } };\ntype IRawPromiseErrorObjResponse = { type: ResponseType.PromiseErrorObj; id: number; data: any };\ntype IRawEventFireResponse = { type: ResponseType.EventFire; id: number; data: any };\ntype IRawResponse = IRawInitializeResponse | IRawPromiseSuccessResponse | IRawPromiseErrorResponse | IRawPromiseErrorObjResponse | IRawEventFireResponse;\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(buffer: VSBuffer): void;\n\tonMessage: Event<VSBuffer>;\n\t/**\n\t * Wait for the write buffer (if applicable) to become empty.\n\t */\n\tdrain?(): Promise<void>;\n}\n\nenum State {\n\tUninitialized,\n\tIdle\n}\n\n/**\n * An `IChannelServer` hosts a collection of channels. You are\n * able to register channels onto it, provided a channel name.\n */\nexport interface IChannelServer<TContext = string> {\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void;\n}\n\n/**\n * An `IChannelClient` has access to a collection of channels. You\n * are able to get those channels, given their channel name.\n */\nexport interface IChannelClient {\n\tgetChannel<T extends IChannel>(channelName: string): T;\n}\n\nexport interface Client<TContext> {\n\treadonly ctx: TContext;\n}\n\nexport interface IConnectionHub<TContext> {\n\treadonly connections: Connection<TContext>[];\n\treadonly onDidAddConnection: Event<Connection<TContext>>;\n\treadonly onDidRemoveConnection: Event<Connection<TContext>>;\n}\n\n/**\n * An `IClientRouter` is responsible for routing calls to specific\n * channels, in scenarios in which there are multiple possible\n * channels (each from a separate client) to pick from.\n */\nexport interface IClientRouter<TContext = string> {\n\trouteCall(hub: IConnectionHub<TContext>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<TContext>>;\n\trouteEvent(hub: IConnectionHub<TContext>, event: string, arg?: any): Promise<Client<TContext>>;\n}\n\n/**\n * Similar to the `IChannelClient`, you can get channels from this\n * collection of channels. The difference being that in the\n * `IRoutingChannelClient`, there are multiple clients providing\n * the same channel. You'll need to pass in an `IClientRouter` in\n * order to pick the right one.\n */\nexport interface IRoutingChannelClient<TContext = string> {\n\tgetChannel<T extends IChannel>(channelName: string, router?: IClientRouter<TContext>): T;\n}\n\ninterface IReader {\n\tread(bytes: number): VSBuffer;\n}\n\ninterface IWriter {\n\twrite(buffer: VSBuffer): void;\n}\n\nclass BufferReader implements IReader {\n\n\tprivate pos = 0;\n\n\tconstructor(private buffer: VSBuffer) { }\n\n\tread(bytes: number): VSBuffer {\n\t\tconst result = this.buffer.slice(this.pos, this.pos + bytes);\n\t\tthis.pos += result.byteLength;\n\t\treturn result;\n\t}\n}\n\nclass BufferWriter implements IWriter {\n\n\tprivate buffers: VSBuffer[] = [];\n\n\tget buffer(): VSBuffer {\n\t\treturn VSBuffer.concat(this.buffers);\n\t}\n\n\twrite(buffer: VSBuffer): void {\n\t\tthis.buffers.push(buffer);\n\t}\n}\n\nenum DataType {\n\tUndefined = 0,\n\tString = 1,\n\tBuffer = 2,\n\tVSBuffer = 3,\n\tArray = 4,\n\tObject = 5\n}\n\nfunction createSizeBuffer(size: number): VSBuffer {\n\tconst result = VSBuffer.alloc(4);\n\tresult.writeUInt32BE(size, 0);\n\treturn result;\n}\n\nfunction readSizeBuffer(reader: IReader): number {\n\treturn reader.read(4).readUInt32BE(0);\n}\n\nfunction createOneByteBuffer(value: number): VSBuffer {\n\tconst result = VSBuffer.alloc(1);\n\tresult.writeUInt8(value, 0);\n\treturn result;\n}\n\nconst BufferPresets = {\n\tUndefined: createOneByteBuffer(DataType.Undefined),\n\tString: createOneByteBuffer(DataType.String),\n\tBuffer: createOneByteBuffer(DataType.Buffer),\n\tVSBuffer: createOneByteBuffer(DataType.VSBuffer),\n\tArray: createOneByteBuffer(DataType.Array),\n\tObject: createOneByteBuffer(DataType.Object),\n};\n\ndeclare const Buffer: any;\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nfunction serialize(writer: IWriter, data: any): void {\n\tif (typeof data === 'undefined') {\n\t\twriter.write(BufferPresets.Undefined);\n\t} else if (typeof data === 'string') {\n\t\tconst buffer = VSBuffer.fromString(data);\n\t\twriter.write(BufferPresets.String);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (hasBuffer && Buffer.isBuffer(data)) {\n\t\tconst buffer = VSBuffer.wrap(data);\n\t\twriter.write(BufferPresets.Buffer);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (data instanceof VSBuffer) {\n\t\twriter.write(BufferPresets.VSBuffer);\n\t\twriter.write(createSizeBuffer(data.byteLength));\n\t\twriter.write(data);\n\t} else if (Array.isArray(data)) {\n\t\twriter.write(BufferPresets.Array);\n\t\twriter.write(createSizeBuffer(data.length));\n\n\t\tfor (const el of data) {\n\t\t\tserialize(writer, el);\n\t\t}\n\t} else {\n\t\tconst buffer = VSBuffer.fromString(JSON.stringify(data));\n\t\twriter.write(BufferPresets.Object);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t}\n}\n\nfunction deserialize(reader: IReader): any {\n\tconst type = reader.read(1).readUInt8(0);\n\n\tswitch (type) {\n\t\tcase DataType.Undefined: return undefined;\n\t\tcase DataType.String: return reader.read(readSizeBuffer(reader)).toString();\n\t\tcase DataType.Buffer: return reader.read(readSizeBuffer(reader)).buffer;\n\t\tcase DataType.VSBuffer: return reader.read(readSizeBuffer(reader));\n\t\tcase DataType.Array: {\n\t\t\tconst length = readSizeBuffer(reader);\n\t\t\tconst result: any[] = [];\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tresult.push(deserialize(reader));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcase DataType.Object: return JSON.parse(reader.read(readSizeBuffer(reader)).toString());\n\t}\n}\n\ninterface PendingRequest {\n\trequest: IRawPromiseRequest | IRawEventListenRequest;\n\ttimeoutTimer: any;\n}\n\nexport class ChannelServer<TContext = string> implements IChannelServer<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate activeRequests = new Map<number, IDisposable>();\n\tprivate protocolListener: IDisposable | null;\n\n\t// Requests might come in for channels which are not yet registered.\n\t// They will timeout after `timeoutDelay`.\n\tprivate pendingRequests = new Map<string, PendingRequest[]>();\n\n\tconstructor(private protocol: IMessagePassingProtocol, private ctx: TContext, private logger: IIPCLogger | null = null, private timeoutDelay: number = 1000) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onRawMessage(msg));\n\t\tthis.sendResponse({ type: ResponseType.Initialize });\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\t// https://github.com/microsoft/vscode/issues/72531\n\t\tsetTimeout(() => this.flushPendingRequests(channelName), 0);\n\t}\n\n\tprivate sendResponse(response: IRawResponse): void {\n\t\tswitch (response.type) {\n\t\t\tcase ResponseType.Initialize: {\n\t\t\t\tconst msgLength = this.send([response.type]);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, 0, RequestInitiator.OtherSide, responseTypeToStr(response.type));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj: {\n\t\t\t\tconst msgLength = this.send([response.type, response.id], response.data);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, response.id, RequestInitiator.OtherSide, responseTypeToStr(response.type), response.data);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onRawMessage(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type = header[0] as RequestType;\n\n\t\tswitch (type) {\n\t\t\tcase RequestType.Promise:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\t}\n\t\t\t\treturn this.onPromise({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.EventListen:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\t}\n\t\t\t\treturn this.onEventListen({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\t}\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\t}\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t}\n\t}\n\n\tprivate onPromise(request: IRawPromiseRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tlet promise: Promise<any>;\n\n\t\ttry {\n\t\t\tpromise = channel.call(this.ctx, request.name, request.arg, cancellationTokenSource.token);\n\t\t} catch (err) {\n\t\t\tpromise = Promise.reject(err);\n\t\t}\n\n\t\tconst id = request.id;\n\n\t\tpromise.then(data => {\n\t\t\tthis.sendResponse(<IRawResponse>{ id, data, type: ResponseType.PromiseSuccess });\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}, err => {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid, data: {\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tname: err.name,\n\t\t\t\t\t\tstack: err.stack ? (err.stack.split ? err.stack.split('\\n') : err.stack) : undefined\n\t\t\t\t\t}, type: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.sendResponse(<IRawResponse>{ id, data: err, type: ResponseType.PromiseErrorObj });\n\t\t\t}\n\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t});\n\n\t\tconst disposable = toDisposable(() => cancellationTokenSource.cancel());\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate onEventListen(request: IRawEventListenRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = request.id;\n\t\tconst event = channel.listen(this.ctx, request.name, request.arg);\n\t\tconst disposable = event(data => this.sendResponse(<IRawResponse>{ id, data, type: ResponseType.EventFire }));\n\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate disposeActiveRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests.get(request.id);\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}\n\t}\n\n\tprivate collectPendingRequest(request: IRawPromiseRequest | IRawEventListenRequest): void {\n\t\tlet pendingRequests = this.pendingRequests.get(request.channelName);\n\n\t\tif (!pendingRequests) {\n\t\t\tpendingRequests = [];\n\t\t\tthis.pendingRequests.set(request.channelName, pendingRequests);\n\t\t}\n\n\t\tconst timer = setTimeout(() => {\n\t\t\tconsole.error(`Unknown channel: ${request.channelName}`);\n\n\t\t\tif (request.type === RequestType.Promise) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid: request.id,\n\t\t\t\t\tdata: { name: 'Unknown channel', message: `Channel name '${request.channelName}' timed out after ${this.timeoutDelay}ms`, stack: undefined },\n\t\t\t\t\ttype: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t}\n\t\t}, this.timeoutDelay);\n\n\t\tpendingRequests.push({ request, timeoutTimer: timer });\n\t}\n\n\tprivate flushPendingRequests(channelName: string): void {\n\t\tconst requests = this.pendingRequests.get(channelName);\n\n\t\tif (requests) {\n\t\t\tfor (const request of requests) {\n\t\t\t\tclearTimeout(request.timeoutTimer);\n\n\t\t\t\tswitch (request.request.type) {\n\t\t\t\t\tcase RequestType.Promise: this.onPromise(request.request); break;\n\t\t\t\t\tcase RequestType.EventListen: this.onEventListen(request.request); break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pendingRequests.delete(channelName);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(d => d.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport const enum RequestInitiator {\n\tLocalSide = 0,\n\tOtherSide = 1\n}\n\nexport interface IIPCLogger {\n\tlogIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n\tlogOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n}\n\nexport class ChannelClient implements IChannelClient, IDisposable {\n\n\tprivate state: State = State.Uninitialized;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate handlers = new Map<number, IHandler>();\n\tprivate lastRequestId: number = 0;\n\tprivate protocolListener: IDisposable | null;\n\tprivate logger: IIPCLogger | null;\n\n\tprivate readonly _onDidInitialize = new Emitter<void>();\n\treadonly onDidInitialize = this._onDidInitialize.event;\n\n\tconstructor(private protocol: IMessagePassingProtocol, logger: IIPCLogger | null = null) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onBuffer(msg));\n\t\tthis.logger = logger;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\treturn that.requestPromise(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate requestPromise(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.Promise;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tlet disposable: IDisposable;\n\n\t\tconst result = new Promise((c, e) => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn e(errors.canceled());\n\t\t\t}\n\n\t\t\tconst doRequest = () => {\n\t\t\t\tconst handler: IHandler = response => {\n\t\t\t\t\tswitch (response.type) {\n\t\t\t\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseError:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t\t(<any>error).stack = response.data.stack;\n\t\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.handlers.set(id, handler);\n\t\t\t\tthis.sendRequest(request);\n\t\t\t};\n\n\t\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\t\t\tif (this.state === State.Idle) {\n\t\t\t\tdoRequest();\n\t\t\t} else {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tdoRequest();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst cancel = () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.PromiseCancel });\n\t\t\t\t}\n\n\t\t\t\te(errors.canceled());\n\t\t\t};\n\n\t\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(cancel);\n\t\t\tdisposable = combinedDisposable(toDisposable(cancel), cancellationTokenListener);\n\t\t\tthis.activeRequests.add(disposable);\n\t\t});\n\n\t\treturn result.finally(() => { this.activeRequests.delete(disposable); });\n\t}\n\n\tprivate requestEvent(channelName: string, name: string, arg?: any): Event<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.EventListen;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tthis.activeRequests.add(emitter);\n\t\t\t\t\tthis.sendRequest(request);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.activeRequests.delete(emitter);\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.EventDispose });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst handler: IHandler = (res: IRawResponse) => emitter.fire((res as IRawEventFireResponse).data);\n\t\tthis.handlers.set(id, handler);\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate sendRequest(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Promise:\n\t\t\tcase RequestType.EventListen: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id, request.channelName, request.name], request.arg);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, `${requestTypeToStr(request.type)}: ${request.channelName}.${request.name}`, request.arg);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\tcase RequestType.EventDispose: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id]);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, requestTypeToStr(request.type));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onBuffer(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type: ResponseType = header[0];\n\n\t\tswitch (type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, 0, RequestInitiator.LocalSide, responseTypeToStr(type));\n\t\t\t\t}\n\t\t\t\treturn this.onResponse({ type: header[0] });\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.LocalSide, responseTypeToStr(type), body);\n\t\t\t\t}\n\t\t\t\treturn this.onResponse({ type: header[0], id: header[1], data: body });\n\t\t}\n\t}\n\n\tprivate onResponse(response: IRawResponse): void {\n\t\tif (response.type === ResponseType.Initialize) {\n\t\t\tthis.state = State.Idle;\n\t\t\tthis._onDidInitialize.fire();\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers.get(response.id);\n\n\t\tif (handler) {\n\t\t\thandler(response);\n\t\t}\n\t}\n\n\tprivate whenInitialized(): Promise<void> {\n\t\tif (this.state === State.Idle) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn Event.toPromise(this.onDidInitialize);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(p => p.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport interface ClientConnectionEvent {\n\tprotocol: IMessagePassingProtocol;\n\tonDidClientDisconnect: Event<void>;\n}\n\ninterface Connection<TContext> extends Client<TContext> {\n\treadonly channelServer: ChannelServer<TContext>;\n\treadonly channelClient: ChannelClient;\n}\n\n/**\n * An `IPCServer` is both a channel server and a routing channel\n * client.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCServer<TContext = string> implements IChannelServer<TContext>, IRoutingChannelClient<TContext>, IConnectionHub<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate _connections = new Set<Connection<TContext>>();\n\n\tprivate readonly _onDidAddConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidAddConnection: Event<Connection<TContext>> = this._onDidAddConnection.event;\n\n\tprivate readonly _onDidRemoveConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidRemoveConnection: Event<Connection<TContext>> = this._onDidRemoveConnection.event;\n\n\tget connections(): Connection<TContext>[] {\n\t\tconst result: Connection<TContext>[] = [];\n\t\tthis._connections.forEach(ctx => result.push(ctx));\n\t\treturn result;\n\t}\n\n\tconstructor(onDidClientConnect: Event<ClientConnectionEvent>) {\n\t\tonDidClientConnect(({ protocol, onDidClientDisconnect }) => {\n\t\t\tconst onFirstMessage = Event.once(protocol.onMessage);\n\n\t\t\tonFirstMessage(msg => {\n\t\t\t\tconst reader = new BufferReader(msg);\n\t\t\t\tconst ctx = deserialize(reader) as TContext;\n\n\t\t\t\tconst channelServer = new ChannelServer(protocol, ctx);\n\t\t\t\tconst channelClient = new ChannelClient(protocol);\n\n\t\t\t\tthis.channels.forEach((channel, name) => channelServer.registerChannel(name, channel));\n\n\t\t\t\tconst connection: Connection<TContext> = { channelServer, channelClient, ctx };\n\t\t\t\tthis._connections.add(connection);\n\t\t\t\tthis._onDidAddConnection.fire(connection);\n\n\t\t\t\tonDidClientDisconnect(() => {\n\t\t\t\t\tchannelServer.dispose();\n\t\t\t\t\tchannelClient.dispose();\n\t\t\t\t\tthis._connections.delete(connection);\n\t\t\t\t\tthis._onDidRemoveConnection.fire(connection);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Get a channel from a remote client. When passed a router,\n\t * one can specify which client it wants to call and listen to/from.\n\t * Otherwise, when calling without a router, a random client will\n\t * be selected and when listening without a router, every client\n\t * will be listened to.\n\t */\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T;\n\tgetChannel<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean): T;\n\tgetChannel<T extends IChannel>(channelName: string, routerOrClientFilter: IClientRouter<TContext> | ((client: Client<TContext>) => boolean)): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\tlet connectionPromise: Promise<Client<TContext>>;\n\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\t// when no router is provided, we go random client picking\n\t\t\t\t\tlet connection = getRandomElement(that.connections.filter(routerOrClientFilter));\n\n\t\t\t\t\tconnectionPromise = connection\n\t\t\t\t\t\t// if we found a client, let's call on it\n\t\t\t\t\t\t? Promise.resolve(connection)\n\t\t\t\t\t\t// else, let's wait for a client to come along\n\t\t\t\t\t\t: Event.toPromise(Event.filter(that.onDidAddConnection, routerOrClientFilter));\n\t\t\t\t} else {\n\t\t\t\t\tconnectionPromise = routerOrClientFilter.routeCall(that, command, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = connectionPromise\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.call(command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any): Event<T> {\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\treturn that.getMulticastEvent(channelName, routerOrClientFilter, event, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = routerOrClientFilter.routeEvent(that, event, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.listen(event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate getMulticastEvent<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean, eventName: string, arg: any): Event<T> {\n\t\tconst that = this;\n\t\tlet disposables = new DisposableStore();\n\n\t\t// Create an emitter which hooks up to all clients\n\t\t// as soon as first listener is added. It also\n\t\t// disconnects from all clients as soon as the last listener\n\t\t// is removed.\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tdisposables = new DisposableStore();\n\n\t\t\t\t// The event multiplexer is useful since the active\n\t\t\t\t// client list is dynamic. We need to hook up and disconnection\n\t\t\t\t// to/from clients as they come and go.\n\t\t\t\tconst eventMultiplexer = new EventMultiplexer<T>();\n\t\t\t\tconst map = new Map<Connection<TContext>, IDisposable>();\n\n\t\t\t\tconst onDidAddConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst channel = connection.channelClient.getChannel(channelName);\n\t\t\t\t\tconst event = channel.listen<T>(eventName, arg);\n\t\t\t\t\tconst disposable = eventMultiplexer.add(event);\n\n\t\t\t\t\tmap.set(connection, disposable);\n\t\t\t\t};\n\n\t\t\t\tconst onDidRemoveConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst disposable = map.get(connection);\n\n\t\t\t\t\tif (!disposable) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tmap.delete(connection);\n\t\t\t\t};\n\n\t\t\t\tthat.connections.filter(clientFilter).forEach(onDidAddConnection);\n\t\t\t\tEvent.filter(that.onDidAddConnection, clientFilter)(onDidAddConnection, undefined, disposables);\n\t\t\t\tthat.onDidRemoveConnection(onDidRemoveConnection, undefined, disposables);\n\t\t\t\teventMultiplexer.event(emitter.fire, emitter, disposables);\n\n\t\t\t\tdisposables.add(eventMultiplexer);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tdisposables.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\tthis._connections.forEach(connection => {\n\t\t\tconnection.channelServer.registerChannel(channelName, channel);\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.channels.clear();\n\t\tthis._connections.clear();\n\t\tthis._onDidAddConnection.dispose();\n\t\tthis._onDidRemoveConnection.dispose();\n\t}\n}\n\n/**\n * An `IPCClient` is both a channel client and a channel server.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCClient<TContext = string> implements IChannelClient, IChannelServer<TContext>, IDisposable {\n\n\tprivate channelClient: ChannelClient;\n\tprivate channelServer: ChannelServer<TContext>;\n\n\tconstructor(protocol: IMessagePassingProtocol, ctx: TContext, ipcLogger: IIPCLogger | null = null) {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, ctx);\n\t\tprotocol.send(writer.buffer);\n\n\t\tthis.channelClient = new ChannelClient(protocol, ipcLogger);\n\t\tthis.channelServer = new ChannelServer(protocol, ctx, ipcLogger);\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn this.channelClient.getChannel(channelName) as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channelServer.registerChannel(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channelClient.dispose();\n\t\tthis.channelServer.dispose();\n\t}\n}\n\nexport function getDelayedChannel<T extends IChannel>(promise: Promise<T>): T {\n\treturn {\n\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\treturn promise.then(c => c.call<T>(command, arg, cancellationToken));\n\t\t},\n\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tconst relay = new Relay<any>();\n\t\t\tpromise.then(c => relay.input = c.listen(event, arg));\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport function getNextTickChannel<T extends IChannel>(channel: T): T {\n\tlet didTick = false;\n\n\treturn {\n\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.call(command, arg, cancellationToken);\n\t\t\t}\n\n\t\t\treturn timeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => channel.call<T>(command, arg, cancellationToken));\n\t\t},\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.listen<T>(event, arg);\n\t\t\t}\n\n\t\t\tconst relay = new Relay<T>();\n\n\t\t\ttimeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => relay.input = channel.listen<T>(event, arg));\n\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport class StaticRouter<TContext = string> implements IClientRouter<TContext> {\n\n\tconstructor(private fn: (ctx: TContext) => boolean | Promise<boolean>) { }\n\n\trouteCall(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\trouteEvent(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\tprivate async route(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\tfor (const connection of hub.connections) {\n\t\t\tif (await Promise.resolve(this.fn(connection.ctx))) {\n\t\t\t\treturn Promise.resolve(connection);\n\t\t\t}\n\t\t}\n\n\t\tawait Event.toPromise(hub.onDidAddConnection);\n\t\treturn await this.route(hub);\n\t}\n}\n\n\n//#region createChannelReceiver / createChannelSender\n\n/**\n * Use both `createChannelReceiver` and `createChannelSender`\n * for automated process <=> process communication over methods\n * and events. You do not need to spell out each method on both\n * sides, a proxy will take care of this.\n *\n * Rules:\n * - if marshalling is enabled, only `URI` and `RegExp` is converted\n *   automatically for you\n * - events must follow the naming convention `onUppercase`\n * - `CancellationToken` is currently not supported\n * - if a context is provided, you can use `AddFirstParameterToFunctions`\n *   utility to signal this in the receiving side type\n */\n\nexport interface IBaseChannelOptions {\n\n\t/**\n\t * Disables automatic marshalling of `URI`.\n\t * If marshalling is disabled, `UriComponents`\n\t * must be used instead.\n\t */\n\tdisableMarshalling?: boolean;\n}\n\nexport interface IChannelReceiverOptions extends IBaseChannelOptions { }\n\nexport function createChannelReceiver(service: unknown, options?: IChannelReceiverOptions): IServerChannel {\n\tconst handler = service as { [key: string]: unknown };\n\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t// Buffer any event that should be supported by\n\t// iterating over all property keys and finding them\n\tconst mapEventNameToEvent = new Map<string, Event<unknown>>();\n\tfor (const key in handler) {\n\t\tif (propertyIsEvent(key)) {\n\t\t\tmapEventNameToEvent.set(key, Event.buffer(handler[key] as Event<unknown>, true));\n\t\t}\n\t}\n\n\treturn new class implements IServerChannel {\n\n\t\tlisten<T>(_: unknown, event: string): Event<T> {\n\t\t\tconst eventImpl = mapEventNameToEvent.get(event);\n\t\t\tif (eventImpl) {\n\t\t\t\treturn eventImpl as Event<T>;\n\t\t\t}\n\n\t\t\tthrow new Error(`Event not found: ${event}`);\n\t\t}\n\n\t\tcall(_: unknown, command: string, args?: any[]): Promise<any> {\n\t\t\tconst target = handler[command];\n\t\t\tif (typeof target === 'function') {\n\n\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\tif (!disableMarshalling && Array.isArray(args)) {\n\t\t\t\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t\t\t\targs[i] = revive(args[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn target.apply(handler, args);\n\t\t\t}\n\n\t\t\tthrow new Error(`Method not found: ${command}`);\n\t\t}\n\t};\n}\n\nexport interface IChannelSenderOptions extends IBaseChannelOptions {\n\n\t/**\n\t * If provided, will add the value of `context`\n\t * to each method call to the target.\n\t */\n\tcontext?: unknown;\n\n\t/**\n\t * If provided, will not proxy any of the properties\n\t * that are part of the Map but rather return that value.\n\t */\n\tproperties?: Map<string, unknown>;\n}\n\nexport function createChannelSender<T>(channel: IChannel, options?: IChannelSenderOptions): T {\n\tconst disableMarshalling = options && options.disableMarshalling;\n\n\treturn new Proxy({}, {\n\t\tget(_target: T, propKey: PropertyKey) {\n\t\t\tif (typeof propKey === 'string') {\n\n\t\t\t\t// Check for predefined values\n\t\t\t\tif (options?.properties?.has(propKey)) {\n\t\t\t\t\treturn options.properties.get(propKey);\n\t\t\t\t}\n\n\t\t\t\t// Event\n\t\t\t\tif (propertyIsEvent(propKey)) {\n\t\t\t\t\treturn channel.listen(propKey);\n\t\t\t\t}\n\n\t\t\t\t// Function\n\t\t\t\treturn async function (...args: any[]) {\n\n\t\t\t\t\t// Add context if any\n\t\t\t\t\tlet methodArgs: any[];\n\t\t\t\t\tif (options && !isUndefinedOrNull(options.context)) {\n\t\t\t\t\t\tmethodArgs = [options.context, ...args];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmethodArgs = args;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = await channel.call(propKey, methodArgs);\n\n\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\tif (!disableMarshalling) {\n\t\t\t\t\t\treturn revive(result);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthrow new Error(`Property not found: ${String(propKey)}`);\n\t\t}\n\t}) as T;\n}\n\nfunction propertyIsEvent(name: string): boolean {\n\t// Assume a property is an event if it has a form of \"onSomething\"\n\treturn name[0] === 'o' && name[1] === 'n' && strings.isUpperAsciiLetter(name.charCodeAt(2));\n}\n\n//#endregion\n\n\nconst colorTables = [\n\t['#2977B1', '#FC802D', '#34A13A', '#D3282F', '#9366BA'],\n\t['#8B564C', '#E177C0', '#7F7F7F', '#BBBE3D', '#2EBECD']\n];\n\nfunction prettyWithoutArrays(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data;\n\t}\n\tif (data && typeof data === 'object' && typeof data.toString === 'function') {\n\t\tlet result = data.toString();\n\t\tif (result !== '[object Object]') {\n\t\t\treturn result;\n\t\t}\n\t}\n\treturn data;\n}\n\nfunction pretty(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data.map(prettyWithoutArrays);\n\t}\n\treturn prettyWithoutArrays(data);\n}\n\nexport function logWithColors(direction: string, totalLength: number, msgLength: number, req: number, initiator: RequestInitiator, str: string, data: any): void {\n\tdata = pretty(data);\n\n\tconst colorTable = colorTables[initiator];\n\tconst color = colorTable[req % colorTable.length];\n\tlet args = [`%c[${direction}]%c[${strings.pad(totalLength, 7, ' ')}]%c[len: ${strings.pad(msgLength, 5, ' ')}]%c${strings.pad(req, 5, ' ')} - ${str}`, 'color: darkgreen', 'color: grey', 'color: grey', `color: ${color}`];\n\tif (/\\($/.test(str)) {\n\t\targs = args.concat(data);\n\t\targs.push(')');\n\t} else {\n\t\targs.push(data);\n\t}\n\tconsole.log.apply(console, args as [string, ...string[]]);\n}\n\nexport class IPCLogger implements IIPCLogger {\n\tprivate _totalIncoming = 0;\n\tprivate _totalOutgoing = 0;\n\n\tconstructor(\n\t\tprivate readonly _outgoingPrefix: string,\n\t\tprivate readonly _incomingPrefix: string,\n\t) { }\n\n\tpublic logOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalOutgoing += msgLength;\n\t\tlogWithColors(this._outgoingPrefix, this._totalOutgoing, msgLength, requestId, initiator, str, data);\n\t}\n\n\tpublic logIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalIncoming += msgLength;\n\t\tlogWithColors(this._incomingPrefix, this._totalIncoming, msgLength, requestId, initiator, str, data);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IMessagePassingProtocol, IPCClient, IIPCLogger } from 'vs/base/parts/ipc/common/ipc';\nimport { IDisposable, Disposable, dispose } from 'vs/base/common/lifecycle';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport * as platform from 'vs/base/common/platform';\nimport * as process from 'vs/base/common/process';\n\nexport interface ISocket extends IDisposable {\n\tonData(listener: (e: VSBuffer) => void): IDisposable;\n\tonClose(listener: () => void): IDisposable;\n\tonEnd(listener: () => void): IDisposable;\n\twrite(buffer: VSBuffer): void;\n\tend(): void;\n\tdrain(): Promise<void>;\n}\n\nlet emptyBuffer: VSBuffer | null = null;\nfunction getEmptyBuffer(): VSBuffer {\n\tif (!emptyBuffer) {\n\t\temptyBuffer = VSBuffer.alloc(0);\n\t}\n\treturn emptyBuffer;\n}\n\nexport class ChunkStream {\n\n\tprivate _chunks: VSBuffer[];\n\tprivate _totalLength: number;\n\n\tpublic get byteLength() {\n\t\treturn this._totalLength;\n\t}\n\n\tconstructor() {\n\t\tthis._chunks = [];\n\t\tthis._totalLength = 0;\n\t}\n\n\tpublic acceptChunk(buff: VSBuffer) {\n\t\tthis._chunks.push(buff);\n\t\tthis._totalLength += buff.byteLength;\n\t}\n\n\tpublic read(byteCount: number): VSBuffer {\n\t\treturn this._read(byteCount, true);\n\t}\n\n\tpublic peek(byteCount: number): VSBuffer {\n\t\treturn this._read(byteCount, false);\n\t}\n\n\tprivate _read(byteCount: number, advance: boolean): VSBuffer {\n\n\t\tif (byteCount === 0) {\n\t\t\treturn getEmptyBuffer();\n\t\t}\n\n\t\tif (byteCount > this._totalLength) {\n\t\t\tthrow new Error(`Cannot read so many bytes!`);\n\t\t}\n\n\t\tif (this._chunks[0].byteLength === byteCount) {\n\t\t\t// super fast path, precisely first chunk must be returned\n\t\t\tconst result = this._chunks[0];\n\t\t\tif (advance) {\n\t\t\t\tthis._chunks.shift();\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tif (this._chunks[0].byteLength > byteCount) {\n\t\t\t// fast path, the reading is entirely within the first chunk\n\t\t\tconst result = this._chunks[0].slice(0, byteCount);\n\t\t\tif (advance) {\n\t\t\t\tthis._chunks[0] = this._chunks[0].slice(byteCount);\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tlet result = VSBuffer.alloc(byteCount);\n\t\tlet resultOffset = 0;\n\t\tlet chunkIndex = 0;\n\t\twhile (byteCount > 0) {\n\t\t\tconst chunk = this._chunks[chunkIndex];\n\t\t\tif (chunk.byteLength > byteCount) {\n\t\t\t\t// this chunk will survive\n\t\t\t\tconst chunkPart = chunk.slice(0, byteCount);\n\t\t\t\tresult.set(chunkPart, resultOffset);\n\t\t\t\tresultOffset += byteCount;\n\n\t\t\t\tif (advance) {\n\t\t\t\t\tthis._chunks[chunkIndex] = chunk.slice(byteCount);\n\t\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t\t}\n\n\t\t\t\tbyteCount -= byteCount;\n\t\t\t} else {\n\t\t\t\t// this chunk will be entirely read\n\t\t\t\tresult.set(chunk, resultOffset);\n\t\t\t\tresultOffset += chunk.byteLength;\n\n\t\t\t\tif (advance) {\n\t\t\t\t\tthis._chunks.shift();\n\t\t\t\t\tthis._totalLength -= chunk.byteLength;\n\t\t\t\t} else {\n\t\t\t\t\tchunkIndex++;\n\t\t\t\t}\n\n\t\t\t\tbyteCount -= chunk.byteLength;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nconst enum ProtocolMessageType {\n\tNone = 0,\n\tRegular = 1,\n\tControl = 2,\n\tAck = 3,\n\tKeepAlive = 4,\n\tDisconnect = 5\n}\n\nexport const enum ProtocolConstants {\n\tHeaderLength = 13,\n\t/**\n\t * Send an Acknowledge message at most 2 seconds later...\n\t */\n\tAcknowledgeTime = 2000, // 2 seconds\n\t/**\n\t * If there is a message that has been unacknowledged for 10 seconds, consider the connection closed...\n\t */\n\tAcknowledgeTimeoutTime = 20000, // 20 seconds\n\t/**\n\t * Send at least a message every 5s for keep alive reasons.\n\t */\n\tKeepAliveTime = 5000, // 5 seconds\n\t/**\n\t * If there is no message received for 10 seconds, consider the connection closed...\n\t */\n\tKeepAliveTimeoutTime = 20000, // 20 seconds\n\t/**\n\t * If there is no reconnection within this time-frame, consider the connection permanently closed...\n\t */\n\tReconnectionGraceTime = 3 * 60 * 60 * 1000, // 3hrs\n\t/**\n\t * Maximal grace time between the first and the last reconnection...\n\t */\n\tReconnectionShortGraceTime = 5 * 60 * 1000, // 5min\n}\n\nclass ProtocolMessage {\n\n\tpublic writtenTime: number;\n\n\tconstructor(\n\t\tpublic readonly type: ProtocolMessageType,\n\t\tpublic readonly id: number,\n\t\tpublic readonly ack: number,\n\t\tpublic readonly data: VSBuffer\n\t) {\n\t\tthis.writtenTime = 0;\n\t}\n\n\tpublic get size(): number {\n\t\treturn this.data.byteLength;\n\t}\n}\n\nclass ProtocolReader extends Disposable {\n\n\tprivate readonly _socket: ISocket;\n\tprivate _isDisposed: boolean;\n\tprivate readonly _incomingData: ChunkStream;\n\tpublic lastReadTime: number;\n\n\tprivate readonly _onMessage = this._register(new Emitter<ProtocolMessage>());\n\tpublic readonly onMessage: Event<ProtocolMessage> = this._onMessage.event;\n\n\tprivate readonly _state = {\n\t\treadHead: true,\n\t\treadLen: ProtocolConstants.HeaderLength,\n\t\tmessageType: ProtocolMessageType.None,\n\t\tid: 0,\n\t\tack: 0\n\t};\n\n\tconstructor(socket: ISocket) {\n\t\tsuper();\n\t\tthis._socket = socket;\n\t\tthis._isDisposed = false;\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this._socket.onData(data => this.acceptChunk(data)));\n\t\tthis.lastReadTime = Date.now();\n\t}\n\n\tpublic acceptChunk(data: VSBuffer | null): void {\n\t\tif (!data || data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.lastReadTime = Date.now();\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tconst buff = this._incomingData.read(this._state.readLen);\n\n\t\t\tif (this._state.readHead) {\n\t\t\t\t// buff is the header\n\n\t\t\t\t// save new state => next time will read the body\n\t\t\t\tthis._state.readHead = false;\n\t\t\t\tthis._state.readLen = buff.readUInt32BE(9);\n\t\t\t\tthis._state.messageType = buff.readUInt8(0);\n\t\t\t\tthis._state.id = buff.readUInt32BE(1);\n\t\t\t\tthis._state.ack = buff.readUInt32BE(5);\n\t\t\t} else {\n\t\t\t\t// buff is the body\n\t\t\t\tconst messageType = this._state.messageType;\n\t\t\t\tconst id = this._state.id;\n\t\t\t\tconst ack = this._state.ack;\n\n\t\t\t\t// save new state => next time will read the header\n\t\t\t\tthis._state.readHead = true;\n\t\t\t\tthis._state.readLen = ProtocolConstants.HeaderLength;\n\t\t\t\tthis._state.messageType = ProtocolMessageType.None;\n\t\t\t\tthis._state.id = 0;\n\t\t\t\tthis._state.ack = 0;\n\n\t\t\t\tthis._onMessage.fire(new ProtocolMessage(messageType, id, ack, buff));\n\n\t\t\t\tif (this._isDisposed) {\n\t\t\t\t\t// check if an event listener lead to our disposal\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic readEntireBuffer(): VSBuffer {\n\t\treturn this._incomingData.read(this._incomingData.byteLength);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t}\n}\n\nclass ProtocolWriter {\n\n\tprivate _isDisposed: boolean;\n\tprivate readonly _socket: ISocket;\n\tprivate _data: VSBuffer[];\n\tprivate _totalLength: number;\n\tpublic lastWriteTime: number;\n\n\tconstructor(socket: ISocket) {\n\t\tthis._isDisposed = false;\n\t\tthis._socket = socket;\n\t\tthis._data = [];\n\t\tthis._totalLength = 0;\n\t\tthis.lastWriteTime = 0;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.flush();\n\t\tthis._isDisposed = true;\n\t}\n\n\tpublic drain(): Promise<void> {\n\t\tthis.flush();\n\t\treturn this._socket.drain();\n\t}\n\n\tpublic flush(): void {\n\t\t// flush\n\t\tthis._writeNow();\n\t}\n\n\tpublic write(msg: ProtocolMessage) {\n\t\tif (this._isDisposed) {\n\t\t\t// ignore: there could be left-over promises which complete and then\n\t\t\t// decide to write a response, etc...\n\t\t\treturn;\n\t\t}\n\t\tmsg.writtenTime = Date.now();\n\t\tthis.lastWriteTime = Date.now();\n\t\tconst header = VSBuffer.alloc(ProtocolConstants.HeaderLength);\n\t\theader.writeUInt8(msg.type, 0);\n\t\theader.writeUInt32BE(msg.id, 1);\n\t\theader.writeUInt32BE(msg.ack, 5);\n\t\theader.writeUInt32BE(msg.data.byteLength, 9);\n\t\tthis._writeSoon(header, msg.data);\n\t}\n\n\tprivate _bufferAdd(head: VSBuffer, body: VSBuffer): boolean {\n\t\tconst wasEmpty = this._totalLength === 0;\n\t\tthis._data.push(head, body);\n\t\tthis._totalLength += head.byteLength + body.byteLength;\n\t\treturn wasEmpty;\n\t}\n\n\tprivate _bufferTake(): VSBuffer {\n\t\tconst ret = VSBuffer.concat(this._data, this._totalLength);\n\t\tthis._data.length = 0;\n\t\tthis._totalLength = 0;\n\t\treturn ret;\n\t}\n\n\tprivate _writeSoon(header: VSBuffer, data: VSBuffer): void {\n\t\tif (this._bufferAdd(header, data)) {\n\t\t\tplatform.setImmediate(() => {\n\t\t\t\tthis._writeNow();\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _writeNow(): void {\n\t\tif (this._totalLength === 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis._socket.write(this._bufferTake());\n\t}\n}\n\n/**\n * A message has the following format:\n * ```\n *     /-------------------------------|------\\\n *     |             HEADER            |      |\n *     |-------------------------------| DATA |\n *     | TYPE | ID | ACK | DATA_LENGTH |      |\n *     \\-------------------------------|------/\n * ```\n * The header is 9 bytes and consists of:\n *  - TYPE is 1 byte (ProtocolMessageType) - the message type\n *  - ID is 4 bytes (u32be) - the message id (can be 0 to indicate to be ignored)\n *  - ACK is 4 bytes (u32be) - the acknowledged message id (can be 0 to indicate to be ignored)\n *  - DATA_LENGTH is 4 bytes (u32be) - the length in bytes of DATA\n *\n * Only Regular messages are counted, other messages are not counted, nor acknowledged.\n */\nexport class Protocol extends Disposable implements IMessagePassingProtocol {\n\n\tprivate _socket: ISocket;\n\tprivate _socketWriter: ProtocolWriter;\n\tprivate _socketReader: ProtocolReader;\n\n\tprivate readonly _onMessage = new Emitter<VSBuffer>();\n\treadonly onMessage: Event<VSBuffer> = this._onMessage.event;\n\n\tprivate readonly _onClose = new Emitter<void>();\n\treadonly onClose: Event<void> = this._onClose.event;\n\n\tconstructor(socket: ISocket) {\n\t\tsuper();\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = this._register(new ProtocolWriter(this._socket));\n\t\tthis._socketReader = this._register(new ProtocolReader(this._socket));\n\n\t\tthis._register(this._socketReader.onMessage((msg) => {\n\t\t\tif (msg.type === ProtocolMessageType.Regular) {\n\t\t\t\tthis._onMessage.fire(msg.data);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._socket.onClose(() => this._onClose.fire()));\n\t}\n\n\tdrain(): Promise<void> {\n\t\treturn this._socketWriter.drain();\n\t}\n\n\tgetSocket(): ISocket {\n\t\treturn this._socket;\n\t}\n\n\tsendDisconnect(): void {\n\t\t// Nothing to do...\n\t}\n\n\tsend(buffer: VSBuffer): void {\n\t\tthis._socketWriter.write(new ProtocolMessage(ProtocolMessageType.Regular, 0, 0, buffer));\n\t}\n}\n\nexport class Client<TContext = string> extends IPCClient<TContext> {\n\n\tstatic fromSocket<TContext = string>(socket: ISocket, id: TContext): Client<TContext> {\n\t\treturn new Client(new Protocol(socket), id);\n\t}\n\n\tget onClose(): Event<void> { return this.protocol.onClose; }\n\n\tconstructor(private protocol: Protocol | PersistentProtocol, id: TContext, ipcLogger: IIPCLogger | null = null) {\n\t\tsuper(protocol, id, ipcLogger);\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tconst socket = this.protocol.getSocket();\n\t\tthis.protocol.sendDisconnect();\n\t\tthis.protocol.dispose();\n\t\tsocket.end();\n\t}\n}\n\n/**\n * Will ensure no messages are lost if there are no event listeners.\n */\nexport class BufferedEmitter<T> {\n\tprivate _emitter: Emitter<T>;\n\tpublic readonly event: Event<T>;\n\n\tprivate _hasListeners = false;\n\tprivate _isDeliveringMessages = false;\n\tprivate _bufferedMessages: T[] = [];\n\n\tconstructor() {\n\t\tthis._emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tthis._hasListeners = true;\n\t\t\t\t// it is important to deliver these messages after this call, but before\n\t\t\t\t// other messages have a chance to be received (to guarantee in order delivery)\n\t\t\t\t// that's why we're using here nextTick and not other types of timeouts\n\t\t\t\tprocess.nextTick(() => this._deliverMessages());\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis._hasListeners = false;\n\t\t\t}\n\t\t});\n\n\t\tthis.event = this._emitter.event;\n\t}\n\n\tprivate _deliverMessages(): void {\n\t\tif (this._isDeliveringMessages) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isDeliveringMessages = true;\n\t\twhile (this._hasListeners && this._bufferedMessages.length > 0) {\n\t\t\tthis._emitter.fire(this._bufferedMessages.shift()!);\n\t\t}\n\t\tthis._isDeliveringMessages = false;\n\t}\n\n\tpublic fire(event: T): void {\n\t\tif (this._hasListeners) {\n\t\t\tif (this._bufferedMessages.length > 0) {\n\t\t\t\tthis._bufferedMessages.push(event);\n\t\t\t} else {\n\t\t\t\tthis._emitter.fire(event);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._bufferedMessages.push(event);\n\t\t}\n\t}\n\n\tpublic flushBuffer(): void {\n\t\tthis._bufferedMessages = [];\n\t}\n}\n\nclass QueueElement<T> {\n\tpublic readonly data: T;\n\tpublic next: QueueElement<T> | null;\n\n\tconstructor(data: T) {\n\t\tthis.data = data;\n\t\tthis.next = null;\n\t}\n}\n\nclass Queue<T> {\n\n\tprivate _first: QueueElement<T> | null;\n\tprivate _last: QueueElement<T> | null;\n\n\tconstructor() {\n\t\tthis._first = null;\n\t\tthis._last = null;\n\t}\n\n\tpublic peek(): T | null {\n\t\tif (!this._first) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._first.data;\n\t}\n\n\tpublic toArray(): T[] {\n\t\tlet result: T[] = [], resultLen = 0;\n\t\tlet it = this._first;\n\t\twhile (it) {\n\t\t\tresult[resultLen++] = it.data;\n\t\t\tit = it.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic pop(): void {\n\t\tif (!this._first) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._first === this._last) {\n\t\t\tthis._first = null;\n\t\t\tthis._last = null;\n\t\t\treturn;\n\t\t}\n\t\tthis._first = this._first.next;\n\t}\n\n\tpublic push(item: T): void {\n\t\tconst element = new QueueElement(item);\n\t\tif (!this._first) {\n\t\t\tthis._first = element;\n\t\t\tthis._last = element;\n\t\t\treturn;\n\t\t}\n\t\tthis._last!.next = element;\n\t\tthis._last = element;\n\t}\n}\n\n/**\n * Same as Protocol, but will actually track messages and acks.\n * Moreover, it will ensure no messages are lost if there are no event listeners.\n */\nexport class PersistentProtocol implements IMessagePassingProtocol {\n\n\tprivate _isReconnecting: boolean;\n\n\tprivate _outgoingUnackMsg: Queue<ProtocolMessage>;\n\tprivate _outgoingMsgId: number;\n\tprivate _outgoingAckId: number;\n\tprivate _outgoingAckTimeout: any | null;\n\n\tprivate _incomingMsgId: number;\n\tprivate _incomingAckId: number;\n\tprivate _incomingMsgLastTime: number;\n\tprivate _incomingAckTimeout: any | null;\n\n\tprivate _outgoingKeepAliveTimeout: any | null;\n\tprivate _incomingKeepAliveTimeout: any | null;\n\n\tprivate _socket: ISocket;\n\tprivate _socketWriter: ProtocolWriter;\n\tprivate _socketReader: ProtocolReader;\n\tprivate _socketDisposables: IDisposable[];\n\n\tprivate readonly _onControlMessage = new BufferedEmitter<VSBuffer>();\n\treadonly onControlMessage: Event<VSBuffer> = this._onControlMessage.event;\n\n\tprivate readonly _onMessage = new BufferedEmitter<VSBuffer>();\n\treadonly onMessage: Event<VSBuffer> = this._onMessage.event;\n\n\tprivate readonly _onClose = new BufferedEmitter<void>();\n\treadonly onClose: Event<void> = this._onClose.event;\n\n\tprivate readonly _onSocketClose = new BufferedEmitter<void>();\n\treadonly onSocketClose: Event<void> = this._onSocketClose.event;\n\n\tprivate readonly _onSocketTimeout = new BufferedEmitter<void>();\n\treadonly onSocketTimeout: Event<void> = this._onSocketTimeout.event;\n\n\tpublic get unacknowledgedCount(): number {\n\t\treturn this._outgoingMsgId - this._outgoingAckId;\n\t}\n\n\tconstructor(socket: ISocket, initialChunk: VSBuffer | null = null) {\n\t\tthis._isReconnecting = false;\n\t\tthis._outgoingUnackMsg = new Queue<ProtocolMessage>();\n\t\tthis._outgoingMsgId = 0;\n\t\tthis._outgoingAckId = 0;\n\t\tthis._outgoingAckTimeout = null;\n\n\t\tthis._incomingMsgId = 0;\n\t\tthis._incomingAckId = 0;\n\t\tthis._incomingMsgLastTime = 0;\n\t\tthis._incomingAckTimeout = null;\n\n\t\tthis._outgoingKeepAliveTimeout = null;\n\t\tthis._incomingKeepAliveTimeout = null;\n\n\t\tthis._socketDisposables = [];\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = new ProtocolWriter(this._socket);\n\t\tthis._socketDisposables.push(this._socketWriter);\n\t\tthis._socketReader = new ProtocolReader(this._socket);\n\t\tthis._socketDisposables.push(this._socketReader);\n\t\tthis._socketDisposables.push(this._socketReader.onMessage(msg => this._receiveMessage(msg)));\n\t\tthis._socketDisposables.push(this._socket.onClose(() => this._onSocketClose.fire()));\n\t\tif (initialChunk) {\n\t\t\tthis._socketReader.acceptChunk(initialChunk);\n\t\t}\n\n\t\tthis._sendKeepAliveCheck();\n\t\tthis._recvKeepAliveCheck();\n\t}\n\n\tdispose(): void {\n\t\tif (this._outgoingAckTimeout) {\n\t\t\tclearTimeout(this._outgoingAckTimeout);\n\t\t\tthis._outgoingAckTimeout = null;\n\t\t}\n\t\tif (this._incomingAckTimeout) {\n\t\t\tclearTimeout(this._incomingAckTimeout);\n\t\t\tthis._incomingAckTimeout = null;\n\t\t}\n\t\tif (this._outgoingKeepAliveTimeout) {\n\t\t\tclearTimeout(this._outgoingKeepAliveTimeout);\n\t\t\tthis._outgoingKeepAliveTimeout = null;\n\t\t}\n\t\tif (this._incomingKeepAliveTimeout) {\n\t\t\tclearTimeout(this._incomingKeepAliveTimeout);\n\t\t\tthis._incomingKeepAliveTimeout = null;\n\t\t}\n\t\tthis._socketDisposables = dispose(this._socketDisposables);\n\t}\n\n\tdrain(): Promise<void> {\n\t\treturn this._socketWriter.drain();\n\t}\n\n\tsendDisconnect(): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Disconnect, 0, 0, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t\tthis._socketWriter.flush();\n\t}\n\n\tprivate _sendKeepAliveCheck(): void {\n\t\tif (this._outgoingKeepAliveTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastOutgoingMsg = Date.now() - this._socketWriter.lastWriteTime;\n\t\tif (timeSinceLastOutgoingMsg >= ProtocolConstants.KeepAliveTime) {\n\t\t\t// sufficient time has passed since last message was written,\n\t\t\t// and no message from our side needed to be sent in the meantime,\n\t\t\t// so we will send a message containing only a keep alive.\n\t\t\tconst msg = new ProtocolMessage(ProtocolMessageType.KeepAlive, 0, 0, getEmptyBuffer());\n\t\t\tthis._socketWriter.write(msg);\n\t\t\tthis._sendKeepAliveCheck();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._outgoingKeepAliveTimeout = setTimeout(() => {\n\t\t\tthis._outgoingKeepAliveTimeout = null;\n\t\t\tthis._sendKeepAliveCheck();\n\t\t}, ProtocolConstants.KeepAliveTime - timeSinceLastOutgoingMsg + 5);\n\t}\n\n\tprivate _recvKeepAliveCheck(): void {\n\t\tif (this._incomingKeepAliveTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastIncomingMsg = Date.now() - this._socketReader.lastReadTime;\n\t\tif (timeSinceLastIncomingMsg >= ProtocolConstants.KeepAliveTimeoutTime) {\n\t\t\t// Trash the socket\n\t\t\tthis._onSocketTimeout.fire(undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingKeepAliveTimeout = setTimeout(() => {\n\t\t\tthis._incomingKeepAliveTimeout = null;\n\t\t\tthis._recvKeepAliveCheck();\n\t\t}, ProtocolConstants.KeepAliveTimeoutTime - timeSinceLastIncomingMsg + 5);\n\t}\n\n\tpublic getSocket(): ISocket {\n\t\treturn this._socket;\n\t}\n\n\tpublic beginAcceptReconnection(socket: ISocket, initialDataChunk: VSBuffer | null): void {\n\t\tthis._isReconnecting = true;\n\n\t\tthis._socketDisposables = dispose(this._socketDisposables);\n\t\tthis._onControlMessage.flushBuffer();\n\t\tthis._onSocketClose.flushBuffer();\n\t\tthis._onSocketTimeout.flushBuffer();\n\t\tthis._socket.dispose();\n\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = new ProtocolWriter(this._socket);\n\t\tthis._socketDisposables.push(this._socketWriter);\n\t\tthis._socketReader = new ProtocolReader(this._socket);\n\t\tthis._socketDisposables.push(this._socketReader);\n\t\tthis._socketDisposables.push(this._socketReader.onMessage(msg => this._receiveMessage(msg)));\n\t\tthis._socketDisposables.push(this._socket.onClose(() => this._onSocketClose.fire()));\n\t\tthis._socketReader.acceptChunk(initialDataChunk);\n\t}\n\n\tpublic endAcceptReconnection(): void {\n\t\tthis._isReconnecting = false;\n\n\t\t// Send again all unacknowledged messages\n\t\tconst toSend = this._outgoingUnackMsg.toArray();\n\t\tfor (let i = 0, len = toSend.length; i < len; i++) {\n\t\t\tthis._socketWriter.write(toSend[i]);\n\t\t}\n\t\tthis._recvAckCheck();\n\n\t\tthis._sendKeepAliveCheck();\n\t\tthis._recvKeepAliveCheck();\n\t}\n\n\tpublic acceptDisconnect(): void {\n\t\tthis._onClose.fire();\n\t}\n\n\tprivate _receiveMessage(msg: ProtocolMessage): void {\n\t\tif (msg.ack > this._outgoingAckId) {\n\t\t\tthis._outgoingAckId = msg.ack;\n\t\t\tdo {\n\t\t\t\tconst first = this._outgoingUnackMsg.peek();\n\t\t\t\tif (first && first.id <= msg.ack) {\n\t\t\t\t\t// this message has been confirmed, remove it\n\t\t\t\t\tthis._outgoingUnackMsg.pop();\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (true);\n\t\t}\n\n\t\tif (msg.type === ProtocolMessageType.Regular) {\n\t\t\tif (msg.id > this._incomingMsgId) {\n\t\t\t\tif (msg.id !== this._incomingMsgId + 1) {\n\t\t\t\t\tconsole.error(`PROTOCOL CORRUPTION, LAST SAW MSG ${this._incomingMsgId} AND HAVE NOW RECEIVED MSG ${msg.id}`);\n\t\t\t\t}\n\t\t\t\tthis._incomingMsgId = msg.id;\n\t\t\t\tthis._incomingMsgLastTime = Date.now();\n\t\t\t\tthis._sendAckCheck();\n\t\t\t\tthis._onMessage.fire(msg.data);\n\t\t\t}\n\t\t} else if (msg.type === ProtocolMessageType.Control) {\n\t\t\tthis._onControlMessage.fire(msg.data);\n\t\t} else if (msg.type === ProtocolMessageType.Disconnect) {\n\t\t\tthis._onClose.fire();\n\t\t}\n\t}\n\n\treadEntireBuffer(): VSBuffer {\n\t\treturn this._socketReader.readEntireBuffer();\n\t}\n\n\tflush(): void {\n\t\tthis._socketWriter.flush();\n\t}\n\n\tsend(buffer: VSBuffer): void {\n\t\tconst myId = ++this._outgoingMsgId;\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Regular, myId, this._incomingAckId, buffer);\n\t\tthis._outgoingUnackMsg.push(msg);\n\t\tif (!this._isReconnecting) {\n\t\t\tthis._socketWriter.write(msg);\n\t\t\tthis._recvAckCheck();\n\t\t}\n\t}\n\n\t/**\n\t * Send a message which will not be part of the regular acknowledge flow.\n\t * Use this for early control messages which are repeated in case of reconnection.\n\t */\n\tsendControl(buffer: VSBuffer): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Control, 0, 0, buffer);\n\t\tthis._socketWriter.write(msg);\n\t}\n\n\tprivate _sendAckCheck(): void {\n\t\tif (this._incomingMsgId <= this._incomingAckId) {\n\t\t\t// nothink to acknowledge\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._incomingAckTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastIncomingMsg = Date.now() - this._incomingMsgLastTime;\n\t\tif (timeSinceLastIncomingMsg >= ProtocolConstants.AcknowledgeTime) {\n\t\t\t// sufficient time has passed since this message has been received,\n\t\t\t// and no message from our side needed to be sent in the meantime,\n\t\t\t// so we will send a message containing only an ack.\n\t\t\tthis._sendAck();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingAckTimeout = setTimeout(() => {\n\t\t\tthis._incomingAckTimeout = null;\n\t\t\tthis._sendAckCheck();\n\t\t}, ProtocolConstants.AcknowledgeTime - timeSinceLastIncomingMsg + 5);\n\t}\n\n\tprivate _recvAckCheck(): void {\n\t\tif (this._outgoingMsgId <= this._outgoingAckId) {\n\t\t\t// everything has been acknowledged\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._outgoingAckTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldestUnacknowledgedMsg = this._outgoingUnackMsg.peek()!;\n\t\tconst timeSinceOldestUnacknowledgedMsg = Date.now() - oldestUnacknowledgedMsg.writtenTime;\n\t\tif (timeSinceOldestUnacknowledgedMsg >= ProtocolConstants.AcknowledgeTimeoutTime) {\n\t\t\t// Trash the socket\n\t\t\tthis._onSocketTimeout.fire(undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._outgoingAckTimeout = setTimeout(() => {\n\t\t\tthis._outgoingAckTimeout = null;\n\t\t\tthis._recvAckCheck();\n\t\t}, ProtocolConstants.AcknowledgeTimeoutTime - timeSinceOldestUnacknowledgedMsg + 5);\n\t}\n\n\tprivate _sendAck(): void {\n\t\tif (this._incomingMsgId <= this._incomingAckId) {\n\t\t\t// nothink to acknowledge\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Ack, 0, this._incomingAckId, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Socket, Server as NetServer, createConnection, createServer } from 'net';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { ClientConnectionEvent, IPCServer } from 'vs/base/parts/ipc/common/ipc';\nimport { join } from 'vs/base/common/path';\nimport { tmpdir } from 'os';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { ISocket, Protocol, Client, ChunkStream } from 'vs/base/parts/ipc/common/ipc.net';\nimport { onUnexpectedError } from 'vs/base/common/errors';\n\nexport class NodeSocket implements ISocket {\n\tpublic readonly socket: Socket;\n\n\tconstructor(socket: Socket) {\n\t\tthis.socket = socket;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.socket.destroy();\n\t}\n\n\tpublic onData(_listener: (e: VSBuffer) => void): IDisposable {\n\t\tconst listener = (buff: Buffer) => _listener(VSBuffer.wrap(buff));\n\t\tthis.socket.on('data', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('data', listener)\n\t\t};\n\t}\n\n\tpublic onClose(listener: () => void): IDisposable {\n\t\tthis.socket.on('close', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('close', listener)\n\t\t};\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\tthis.socket.on('end', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('end', listener)\n\t\t};\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\t// return early if socket has been destroyed in the meantime\n\t\tif (this.socket.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// we ignore the returned value from `write` because we would have to cached the data\n\t\t// anyways and nodejs is already doing that for us:\n\t\t// > https://nodejs.org/api/stream.html#stream_writable_write_chunk_encoding_callback\n\t\t// > However, the false return value is only advisory and the writable stream will unconditionally\n\t\t// > accept and buffer chunk even if it has not been allowed to drain.\n\t\ttry {\n\t\t\tthis.socket.write(<Buffer>buffer.buffer);\n\t\t} catch (err) {\n\t\t\tif (err.code === 'EPIPE') {\n\t\t\t\t// An EPIPE exception at the wrong time can lead to a renderer process crash\n\t\t\t\t// so ignore the error since the socket will fire the close event soon anyways:\n\t\t\t\t// > https://nodejs.org/api/errors.html#errors_common_system_errors\n\t\t\t\t// > EPIPE (Broken pipe): A write on a pipe, socket, or FIFO for which there is no\n\t\t\t\t// > process to read the data. Commonly encountered at the net and http layers,\n\t\t\t\t// > indicative that the remote side of the stream being written to has been closed.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tonUnexpectedError(err);\n\t\t}\n\t}\n\n\tpublic end(): void {\n\t\tthis.socket.end();\n\t}\n\n\tpublic drain(): Promise<void> {\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tif (this.socket.bufferSize === 0) {\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst finished = () => {\n\t\t\t\tthis.socket.off('close', finished);\n\t\t\t\tthis.socket.off('end', finished);\n\t\t\t\tthis.socket.off('error', finished);\n\t\t\t\tthis.socket.off('timeout', finished);\n\t\t\t\tthis.socket.off('drain', finished);\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\tthis.socket.on('close', finished);\n\t\t\tthis.socket.on('end', finished);\n\t\t\tthis.socket.on('error', finished);\n\t\t\tthis.socket.on('timeout', finished);\n\t\t\tthis.socket.on('drain', finished);\n\t\t});\n\t}\n}\n\nconst enum Constants {\n\tMinHeaderByteSize = 2\n}\n\nconst enum ReadState {\n\tPeekHeader = 1,\n\tReadHeader = 2,\n\tReadBody = 3,\n\tFin = 4\n}\n\n/**\n * See https://tools.ietf.org/html/rfc6455#section-5.2\n */\nexport class WebSocketNodeSocket extends Disposable implements ISocket {\n\n\tpublic readonly socket: NodeSocket;\n\tprivate readonly _incomingData: ChunkStream;\n\tprivate readonly _onData = this._register(new Emitter<VSBuffer>());\n\n\tprivate readonly _state = {\n\t\tstate: ReadState.PeekHeader,\n\t\treadLen: Constants.MinHeaderByteSize,\n\t\tmask: 0\n\t};\n\n\tconstructor(socket: NodeSocket) {\n\t\tsuper();\n\t\tthis.socket = socket;\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this.socket.onData(data => this._acceptChunk(data)));\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.socket.dispose();\n\t}\n\n\tpublic onData(listener: (e: VSBuffer) => void): IDisposable {\n\t\treturn this._onData.event(listener);\n\t}\n\n\tpublic onClose(listener: () => void): IDisposable {\n\t\treturn this.socket.onClose(listener);\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\treturn this.socket.onEnd(listener);\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\tlet headerLen = Constants.MinHeaderByteSize;\n\t\tif (buffer.byteLength < 126) {\n\t\t\theaderLen += 0;\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theaderLen += 2;\n\t\t} else {\n\t\t\theaderLen += 8;\n\t\t}\n\t\tconst header = VSBuffer.alloc(headerLen);\n\n\t\theader.writeUInt8(0b10000010, 0);\n\t\tif (buffer.byteLength < 126) {\n\t\t\theader.writeUInt8(buffer.byteLength, 1);\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theader.writeUInt8(126, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t} else {\n\t\t\theader.writeUInt8(127, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 24) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 16) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t}\n\n\t\tthis.socket.write(VSBuffer.concat([header, buffer]));\n\t}\n\n\tpublic end(): void {\n\t\tthis.socket.end();\n\t}\n\n\tprivate _acceptChunk(data: VSBuffer): void {\n\t\tif (data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tif (this._state.state === ReadState.PeekHeader) {\n\t\t\t\t// peek to see if we can read the entire header\n\t\t\t\tconst peekHeader = this._incomingData.peek(this._state.readLen);\n\t\t\t\t// const firstByte = peekHeader.readUInt8(0);\n\t\t\t\t// const finBit = (firstByte & 0b10000000) >>> 7;\n\t\t\t\tconst secondByte = peekHeader.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tconst len = (secondByte & 0b01111111);\n\n\t\t\t\tthis._state.state = ReadState.ReadHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize + (hasMask ? 4 : 0) + (len === 126 ? 2 : 0) + (len === 127 ? 8 : 0);\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t} else if (this._state.state === ReadState.ReadHeader) {\n\t\t\t\t// read entire header\n\t\t\t\tconst header = this._incomingData.read(this._state.readLen);\n\t\t\t\tconst secondByte = header.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tlet len = (secondByte & 0b01111111);\n\n\t\t\t\tlet offset = 1;\n\t\t\t\tif (len === 126) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t} else if (len === 127) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlet mask = 0;\n\t\t\t\tif (hasMask) {\n\t\t\t\t\tmask = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthis._state.state = ReadState.ReadBody;\n\t\t\t\tthis._state.readLen = len;\n\t\t\t\tthis._state.mask = mask;\n\n\t\t\t} else if (this._state.state === ReadState.ReadBody) {\n\t\t\t\t// read body\n\n\t\t\t\tconst body = this._incomingData.read(this._state.readLen);\n\t\t\t\tunmask(body, this._state.mask);\n\n\t\t\t\tthis._state.state = ReadState.PeekHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize;\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t\tthis._onData.fire(body);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic drain(): Promise<void> {\n\t\treturn this.socket.drain();\n\t}\n}\n\nfunction unmask(buffer: VSBuffer, mask: number): void {\n\tif (mask === 0) {\n\t\treturn;\n\t}\n\tlet cnt = buffer.byteLength >>> 2;\n\tfor (let i = 0; i < cnt; i++) {\n\t\tconst v = buffer.readUInt32BE(i * 4);\n\t\tbuffer.writeUInt32BE(v ^ mask, i * 4);\n\t}\n\tlet offset = cnt * 4;\n\tlet bytesLeft = buffer.byteLength - offset;\n\tconst m3 = (mask >>> 24) & 0b11111111;\n\tconst m2 = (mask >>> 16) & 0b11111111;\n\tconst m1 = (mask >>> 8) & 0b11111111;\n\tif (bytesLeft >= 1) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset) ^ m3, offset);\n\t}\n\tif (bytesLeft >= 2) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 1) ^ m2, offset + 1);\n\t}\n\tif (bytesLeft >= 3) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 2) ^ m1, offset + 2);\n\t}\n}\n\nexport function generateRandomPipeName(): string {\n\tconst randomSuffix = generateUuid();\n\tif (process.platform === 'win32') {\n\t\treturn `\\\\\\\\.\\\\pipe\\\\vscode-ipc-${randomSuffix}-sock`;\n\t} else {\n\t\t// Mac/Unix: use socket file\n\t\treturn join(tmpdir(), `vscode-ipc-${randomSuffix}.sock`);\n\t}\n}\n\nexport class Server extends IPCServer {\n\n\tprivate static toClientConnectionEvent(server: NetServer): Event<ClientConnectionEvent> {\n\t\tconst onConnection = Event.fromNodeEventEmitter<Socket>(server, 'connection');\n\n\t\treturn Event.map(onConnection, socket => ({\n\t\t\tprotocol: new Protocol(new NodeSocket(socket)),\n\t\t\tonDidClientDisconnect: Event.once(Event.fromNodeEventEmitter<void>(socket, 'close'))\n\t\t}));\n\t}\n\n\tprivate server: NetServer | null;\n\n\tconstructor(server: NetServer) {\n\t\tsuper(Server.toClientConnectionEvent(server));\n\t\tthis.server = server;\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tif (this.server) {\n\t\t\tthis.server.close();\n\t\t\tthis.server = null;\n\t\t}\n\t}\n}\n\nexport function serve(port: number): Promise<Server>;\nexport function serve(namedPipe: string): Promise<Server>;\nexport function serve(hook: any): Promise<Server> {\n\treturn new Promise<Server>((c, e) => {\n\t\tconst server = createServer();\n\n\t\tserver.on('error', e);\n\t\tserver.listen(hook, () => {\n\t\t\tserver.removeListener('error', e);\n\t\t\tc(new Server(server));\n\t\t});\n\t});\n}\n\nexport function connect(options: { host: string, port: number }, clientId: string): Promise<Client>;\nexport function connect(port: number, clientId: string): Promise<Client>;\nexport function connect(namedPipe: string, clientId: string): Promise<Client>;\nexport function connect(hook: any, clientId: string): Promise<Client> {\n\treturn new Promise<Client>((c, e) => {\n\t\tconst socket = createConnection(hook, () => {\n\t\t\tsocket.removeListener('error', e);\n\t\t\tc(Client.fromSocket(new NodeSocket(socket), clientId));\n\t\t});\n\n\t\tsocket.once('error', e);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { pad } from './strings';\nimport { localize } from 'vs/nls';\n\nconst minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst month = day * 30;\nconst year = day * 365;\n\nexport function fromNow(date: number | Date, appendAgoLabel?: boolean): string {\n\tif (typeof date !== 'number') {\n\t\tdate = date.getTime();\n\t}\n\n\tconst seconds = Math.round((new Date().getTime() - date) / 1000);\n\tif (seconds < -30) {\n\t\treturn localize('date.fromNow.in', 'in {0}', fromNow(new Date().getTime() + seconds * 1000, false));\n\t}\n\n\tif (seconds < 30) {\n\t\treturn localize('date.fromNow.now', 'now');\n\t}\n\n\tlet value: number;\n\tif (seconds < minute) {\n\t\tvalue = seconds;\n\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.seconds.singular.ago', '{0} sec ago', value)\n\t\t\t\t: localize('date.fromNow.seconds.plural.ago', '{0} secs ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.seconds.singular', '{0} sec', value)\n\t\t\t\t: localize('date.fromNow.seconds.plural', '{0} secs', value);\n\t\t}\n\t}\n\n\tif (seconds < hour) {\n\t\tvalue = Math.floor(seconds / minute);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.minutes.singular.ago', '{0} min ago', value)\n\t\t\t\t: localize('date.fromNow.minutes.plural.ago', '{0} mins ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.minutes.singular', '{0} min', value)\n\t\t\t\t: localize('date.fromNow.minutes.plural', '{0} mins', value);\n\t\t}\n\t}\n\n\tif (seconds < day) {\n\t\tvalue = Math.floor(seconds / hour);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.hours.singular.ago', '{0} hr ago', value)\n\t\t\t\t: localize('date.fromNow.hours.plural.ago', '{0} hrs ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.hours.singular', '{0} hr', value)\n\t\t\t\t: localize('date.fromNow.hours.plural', '{0} hrs', value);\n\t\t}\n\t}\n\n\tif (seconds < week) {\n\t\tvalue = Math.floor(seconds / day);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular.ago', '{0} day ago', value)\n\t\t\t\t: localize('date.fromNow.days.plural.ago', '{0} days ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular', '{0} day', value)\n\t\t\t\t: localize('date.fromNow.days.plural', '{0} days', value);\n\t\t}\n\t}\n\n\tif (seconds < month) {\n\t\tvalue = Math.floor(seconds / week);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.weeks.singular.ago', '{0} wk ago', value)\n\t\t\t\t: localize('date.fromNow.weeks.plural.ago', '{0} wks ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.weeks.singular', '{0} wk', value)\n\t\t\t\t: localize('date.fromNow.weeks.plural', '{0} wks', value);\n\t\t}\n\t}\n\n\tif (seconds < year) {\n\t\tvalue = Math.floor(seconds / month);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.months.singular.ago', '{0} mo ago', value)\n\t\t\t\t: localize('date.fromNow.months.plural.ago', '{0} mos ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.months.singular', '{0} mo', value)\n\t\t\t\t: localize('date.fromNow.months.plural', '{0} mos', value);\n\t\t}\n\t}\n\n\tvalue = Math.floor(seconds / year);\n\tif (appendAgoLabel) {\n\t\treturn value === 1\n\t\t\t? localize('date.fromNow.years.singular.ago', '{0} yr ago', value)\n\t\t\t: localize('date.fromNow.years.plural.ago', '{0} yrs ago', value);\n\t} else {\n\t\treturn value === 1\n\t\t\t? localize('date.fromNow.years.singular', '{0} yr', value)\n\t\t\t: localize('date.fromNow.years.plural', '{0} yrs', value);\n\t}\n}\n\nexport function toLocalISOString(date: Date): string {\n\treturn date.getFullYear() +\n\t\t'-' + pad(date.getMonth() + 1, 2) +\n\t\t'-' + pad(date.getDate(), 2) +\n\t\t'T' + pad(date.getHours(), 2) +\n\t\t':' + pad(date.getMinutes(), 2) +\n\t\t':' + pad(date.getSeconds(), 2) +\n\t\t'.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n\t\t'Z';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as types from 'vs/base/common/types';\nimport * as arrays from 'vs/base/common/arrays';\n\nfunction exceptionToErrorMessage(exception: any, verbose: boolean): string {\n\tif (verbose && (exception.stack || exception.stacktrace)) {\n\t\treturn nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), stackToString(exception.stack) || stackToString(exception.stacktrace));\n\t}\n\n\treturn detectSystemErrorMessage(exception);\n}\n\nfunction stackToString(stack: string[] | string | undefined): string | undefined {\n\tif (Array.isArray(stack)) {\n\t\treturn stack.join('\\n');\n\t}\n\n\treturn stack;\n}\n\nfunction detectSystemErrorMessage(exception: any): string {\n\n\t// See https://nodejs.org/api/errors.html#errors_class_system_error\n\tif (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n\t\treturn nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\n\t}\n\n\treturn exception.message || nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n *\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error: any = null, verbose: boolean = false): string {\n\tif (!error) {\n\t\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n\t}\n\n\tif (Array.isArray(error)) {\n\t\tconst errors: any[] = arrays.coalesce(error);\n\t\tconst msg = toErrorMessage(errors[0], verbose);\n\n\t\tif (errors.length > 1) {\n\t\t\treturn nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n\t\t}\n\n\t\treturn msg;\n\t}\n\n\tif (types.isString(error)) {\n\t\treturn error;\n\t}\n\n\tif (error.detail) {\n\t\tconst detail = error.detail;\n\n\t\tif (detail.error) {\n\t\t\treturn exceptionToErrorMessage(detail.error, verbose);\n\t\t}\n\n\t\tif (detail.exception) {\n\t\t\treturn exceptionToErrorMessage(detail.exception, verbose);\n\t\t}\n\t}\n\n\tif (error.stack) {\n\t\treturn exceptionToErrorMessage(error, verbose);\n\t}\n\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Extracted from json.ts to keep json nls free.\n */\nimport { localize } from 'vs/nls';\nimport { ParseErrorCode } from './json';\n\nexport function getParseErrorMessage(errorCode: ParseErrorCode): string {\n\tswitch (errorCode) {\n\t\tcase ParseErrorCode.InvalidSymbol: return localize('error.invalidSymbol', 'Invalid symbol');\n\t\tcase ParseErrorCode.InvalidNumberFormat: return localize('error.invalidNumberFormat', 'Invalid number format');\n\t\tcase ParseErrorCode.PropertyNameExpected: return localize('error.propertyNameExpected', 'Property name expected');\n\t\tcase ParseErrorCode.ValueExpected: return localize('error.valueExpected', 'Value expected');\n\t\tcase ParseErrorCode.ColonExpected: return localize('error.colonExpected', 'Colon expected');\n\t\tcase ParseErrorCode.CommaExpected: return localize('error.commaExpected', 'Comma expected');\n\t\tcase ParseErrorCode.CloseBraceExpected: return localize('error.closeBraceExpected', 'Closing brace expected');\n\t\tcase ParseErrorCode.CloseBracketExpected: return localize('error.closeBracketExpected', 'Closing bracket expected');\n\t\tcase ParseErrorCode.EndOfFileExpected: return localize('error.endOfFileExpected', 'End of file expected');\n\t\tdefault:\n\t\t\treturn '';\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport { promisify } from 'util';\nimport * as cp from 'child_process';\nimport * as nls from 'vs/nls';\nimport * as Types from 'vs/base/common/types';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport * as Objects from 'vs/base/common/objects';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as Platform from 'vs/base/common/platform';\nimport { LineDecoder } from 'vs/base/node/decoder';\nimport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode, Executable } from 'vs/base/common/processes';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nexport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode };\n\nexport type ValueCallback<T> = (value?: T | Promise<T>) => void;\nexport type ErrorCallback = (error?: any) => void;\nexport type ProgressCallback<T> = (progress: T) => void;\n\nexport interface LineData {\n\tline: string;\n\tsource: Source;\n}\n\nfunction getWindowsCode(status: number): TerminateResponseCode {\n\tswitch (status) {\n\t\tcase 0:\n\t\t\treturn TerminateResponseCode.Success;\n\t\tcase 1:\n\t\t\treturn TerminateResponseCode.AccessDenied;\n\t\tcase 128:\n\t\t\treturn TerminateResponseCode.ProcessNotFound;\n\t\tdefault:\n\t\t\treturn TerminateResponseCode.Unknown;\n\t}\n}\n\nfunction terminateProcess(process: cp.ChildProcess, cwd?: string): Promise<TerminateResponse> {\n\tif (Platform.isWindows) {\n\t\ttry {\n\t\t\tconst options: any = {\n\t\t\t\tstdio: ['pipe', 'pipe', 'ignore']\n\t\t\t};\n\t\t\tif (cwd) {\n\t\t\t\toptions.cwd = cwd;\n\t\t\t}\n\t\t\tconst killProcess = cp.execFile('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tkillProcess.once('error', (err) => {\n\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t});\n\t\t\t\tkillProcess.once('exit', (code, signal) => {\n\t\t\t\t\tif (code === 0) {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: false, code: code !== null ? code : TerminateResponseCode.Unknown });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err, code: err.status ? getWindowsCode(err.status) : TerminateResponseCode.Unknown });\n\t\t}\n\t} else if (Platform.isLinux || Platform.isMacintosh) {\n\t\ttry {\n\t\t\tconst cmd = getPathFromAmdModule(require, 'vs/base/node/terminateProcess.sh');\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tcp.execFile(cmd, [process.pid.toString()], { encoding: 'utf8', shell: true } as cp.ExecFileOptions, (err, stdout, stderr) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err });\n\t\t}\n\t} else {\n\t\tprocess.kill('SIGKILL');\n\t}\n\treturn Promise.resolve({ success: true });\n}\n\nexport function getWindowsShell(): string {\n\treturn process.env['comspec'] || 'cmd.exe';\n}\n\nexport abstract class AbstractProcess<TProgressData> {\n\tprivate cmd: string;\n\tprivate args: string[];\n\tprivate options: CommandOptions | ForkOptions;\n\tprotected shell: boolean;\n\n\tprivate childProcess: cp.ChildProcess | null;\n\tprotected childProcessPromise: Promise<cp.ChildProcess> | null;\n\tprivate pidResolve?: ValueCallback<number>;\n\tprotected terminateRequested: boolean;\n\n\tprivate static WellKnowCommands: IStringDictionary<boolean> = {\n\t\t'ant': true,\n\t\t'cmake': true,\n\t\t'eslint': true,\n\t\t'gradle': true,\n\t\t'grunt': true,\n\t\t'gulp': true,\n\t\t'jake': true,\n\t\t'jenkins': true,\n\t\t'jshint': true,\n\t\t'make': true,\n\t\t'maven': true,\n\t\t'msbuild': true,\n\t\t'msc': true,\n\t\t'nmake': true,\n\t\t'npm': true,\n\t\t'rake': true,\n\t\t'tsc': true,\n\t\t'xbuild': true\n\t};\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[] | undefined, shell: boolean, options: CommandOptions | undefined);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean, arg4?: CommandOptions) {\n\t\tif (arg2 !== undefined && arg3 !== undefined && arg4 !== undefined) {\n\t\t\tthis.cmd = <string>arg1;\n\t\t\tthis.args = arg2;\n\t\t\tthis.shell = arg3;\n\t\t\tthis.options = arg4;\n\t\t} else {\n\t\t\tconst executable = <Executable>arg1;\n\t\t\tthis.cmd = executable.command;\n\t\t\tthis.shell = executable.isShellCommand;\n\t\t\tthis.args = executable.args.slice(0);\n\t\t\tthis.options = executable.options || {};\n\t\t}\n\n\t\tthis.childProcess = null;\n\t\tthis.childProcessPromise = null;\n\t\tthis.terminateRequested = false;\n\n\t\tif (this.options.env) {\n\t\t\tconst newEnv: IStringDictionary<string> = Object.create(null);\n\t\t\tObject.keys(process.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = process.env[key]!;\n\t\t\t});\n\t\t\tObject.keys(this.options.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = this.options.env![key]!;\n\t\t\t});\n\t\t\tthis.options.env = newEnv;\n\t\t}\n\t}\n\n\tpublic getSanitizedCommand(): string {\n\t\tlet result = this.cmd.toLowerCase();\n\t\tconst index = result.lastIndexOf(path.sep);\n\t\tif (index !== -1) {\n\t\t\tresult = result.substring(index + 1);\n\t\t}\n\t\tif (AbstractProcess.WellKnowCommands[result]) {\n\t\t\treturn result;\n\t\t}\n\t\treturn 'other';\n\t}\n\n\tpublic start(pp: ProgressCallback<TProgressData>): Promise<SuccessData> {\n\t\tif (Platform.isWindows && ((this.options && this.options.cwd && extpath.isUNC(this.options.cwd)) || !this.options && extpath.isUNC(process.cwd()))) {\n\t\t\treturn Promise.reject(new Error(nls.localize('TaskRunner.UNC', 'Can\\'t execute a shell command on a UNC drive.')));\n\t\t}\n\t\treturn this.useExec().then((useExec) => {\n\t\t\tlet cc: ValueCallback<SuccessData>;\n\t\t\tlet ee: ErrorCallback;\n\t\t\tconst result = new Promise<any>((c, e) => {\n\t\t\t\tcc = c;\n\t\t\t\tee = e;\n\t\t\t});\n\n\t\t\tif (useExec) {\n\t\t\t\tlet cmd: string = this.cmd;\n\t\t\t\tif (this.args) {\n\t\t\t\t\tcmd = cmd + ' ' + this.args.join(' ');\n\t\t\t\t}\n\t\t\t\tthis.childProcess = cp.exec(cmd, this.options, (error, stdout, stderr) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tconst err: any = error;\n\t\t\t\t\t// This is tricky since executing a command shell reports error back in case the executed command return an\n\t\t\t\t\t// error or the command didn't exist at all. So we can't blindly treat an error as a failed command. So we\n\t\t\t\t\t// always parse the output and report success unless the job got killed.\n\t\t\t\t\tif (err && err.killed) {\n\t\t\t\t\t\tee({ killed: this.terminateRequested, stdout: stdout.toString(), stderr: stderr.toString() });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.handleExec(cc, pp, error, stdout as any, stderr as any);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet childProcess: cp.ChildProcess | null = null;\n\t\t\t\tconst closeHandler = (data: any) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tthis.childProcessPromise = null;\n\t\t\t\t\tthis.handleClose(data, cc, pp, ee);\n\t\t\t\t\tconst result: SuccessData = {\n\t\t\t\t\t\tterminated: this.terminateRequested\n\t\t\t\t\t};\n\t\t\t\t\tif (Types.isNumber(data)) {\n\t\t\t\t\t\tresult.cmdCode = <number>data;\n\t\t\t\t\t}\n\t\t\t\t\tcc(result);\n\t\t\t\t};\n\t\t\t\tif (this.shell && Platform.isWindows) {\n\t\t\t\t\tconst options: any = Objects.deepClone(this.options);\n\t\t\t\t\toptions.windowsVerbatimArguments = true;\n\t\t\t\t\toptions.detached = false;\n\t\t\t\t\tlet quotedCommand: boolean = false;\n\t\t\t\t\tlet quotedArg: boolean = false;\n\t\t\t\t\tconst commandLine: string[] = [];\n\t\t\t\t\tlet quoted = this.ensureQuotes(this.cmd);\n\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\tquotedCommand = quoted.quoted;\n\t\t\t\t\tif (this.args) {\n\t\t\t\t\t\tthis.args.forEach((elem) => {\n\t\t\t\t\t\t\tquoted = this.ensureQuotes(elem);\n\t\t\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\t\t\tquotedArg = quotedArg && quoted.quoted;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst args: string[] = [\n\t\t\t\t\t\t'/s',\n\t\t\t\t\t\t'/c',\n\t\t\t\t\t];\n\t\t\t\t\tif (quotedCommand) {\n\t\t\t\t\t\tif (quotedArg) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine.join(' ') + '\"');\n\t\t\t\t\t\t} else if (commandLine.length > 1) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"' + ' ' + commandLine.slice(1).join(' '));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\targs.push(commandLine.join(' '));\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess = cp.spawn(getWindowsShell(), args, options);\n\t\t\t\t} else {\n\t\t\t\t\tif (this.cmd) {\n\t\t\t\t\t\tchildProcess = cp.spawn(this.cmd, this.args, this.options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (childProcess) {\n\t\t\t\t\tthis.childProcess = childProcess;\n\t\t\t\t\tthis.childProcessPromise = Promise.resolve(childProcess);\n\t\t\t\t\tif (this.pidResolve) {\n\t\t\t\t\t\tthis.pidResolve(Types.isNumber(childProcess.pid) ? childProcess.pid : -1);\n\t\t\t\t\t\tthis.pidResolve = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess.on('error', (error: Error) => {\n\t\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\t\tee({ terminated: this.terminateRequested, error: error });\n\t\t\t\t\t});\n\t\t\t\t\tif (childProcess.pid) {\n\t\t\t\t\t\tthis.childProcess.on('close', closeHandler);\n\t\t\t\t\t\tthis.handleSpawn(childProcess, cc!, pp, ee!, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprotected abstract handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, error: Error | null, stdout: Buffer, stderr: Buffer): void;\n\tprotected abstract handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback, sync: boolean): void;\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback): void {\n\t\t// Default is to do nothing.\n\t}\n\n\tprivate static readonly regexp = /^[^\"].* .*[^\"]/;\n\tprivate ensureQuotes(value: string) {\n\t\tif (AbstractProcess.regexp.test(value)) {\n\t\t\treturn {\n\t\t\t\tvalue: '\"' + value + '\"', //`\"${value}\"`,\n\t\t\t\tquoted: true\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tvalue: value,\n\t\t\t\tquoted: value.length > 0 && value[0] === '\"' && value[value.length - 1] === '\"'\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic get pid(): Promise<number> {\n\t\tif (this.childProcessPromise) {\n\t\t\treturn this.childProcessPromise.then(childProcess => childProcess.pid, err => -1);\n\t\t} else {\n\t\t\treturn new Promise<number>((resolve) => {\n\t\t\t\tthis.pidResolve = resolve;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic terminate(): Promise<TerminateResponse> {\n\t\tif (!this.childProcessPromise) {\n\t\t\treturn Promise.resolve<TerminateResponse>({ success: true });\n\t\t}\n\t\treturn this.childProcessPromise.then((childProcess) => {\n\t\t\tthis.terminateRequested = true;\n\t\t\treturn terminateProcess(childProcess, this.options.cwd).then(response => {\n\t\t\t\tif (response.success) {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn { success: true };\n\t\t});\n\t}\n\n\tprivate useExec(): Promise<boolean> {\n\t\treturn new Promise<boolean>((c, e) => {\n\t\t\tif (!this.shell || !Platform.isWindows) {\n\t\t\t\treturn c(false);\n\t\t\t}\n\t\t\tconst cmdShell = cp.spawn(getWindowsShell(), ['/s', '/c']);\n\t\t\tcmdShell.on('error', (error: Error) => {\n\t\t\t\treturn c(true);\n\t\t\t});\n\t\t\tcmdShell.on('exit', (data: any) => {\n\t\t\t\treturn c(false);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class LineProcess extends AbstractProcess<LineData> {\n\n\tprivate stdoutLineDecoder: LineDecoder | null;\n\tprivate stderrLineDecoder: LineDecoder | null;\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[], shell: boolean, options: CommandOptions);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean | ForkOptions, arg4?: CommandOptions) {\n\t\tsuper(<any>arg1, arg2, <any>arg3, arg4);\n\n\t\tthis.stdoutLineDecoder = null;\n\t\tthis.stderrLineDecoder = null;\n\t}\n\n\tprotected handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, error: Error, stdout: Buffer, stderr: Buffer) {\n\t\t[stdout, stderr].forEach((buffer: Buffer, index: number) => {\n\t\t\tconst lineDecoder = new LineDecoder();\n\t\t\tconst lines = lineDecoder.write(buffer);\n\t\t\tlines.forEach((line) => {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t});\n\t\t\tconst line = lineDecoder.end();\n\t\t\tif (line) {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t}\n\t\t});\n\t\tcc({ terminated: this.terminateRequested, error: error });\n\t}\n\n\tprotected handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback, sync: boolean): void {\n\t\tconst stdoutLineDecoder = new LineDecoder();\n\t\tconst stderrLineDecoder = new LineDecoder();\n\t\tchildProcess.stdout!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stdoutLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stdout }));\n\t\t});\n\t\tchildProcess.stderr!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stderrLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stderr }));\n\t\t});\n\n\t\tthis.stdoutLineDecoder = stdoutLineDecoder;\n\t\tthis.stderrLineDecoder = stderrLineDecoder;\n\t}\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback): void {\n\t\tconst stdoutLine = this.stdoutLineDecoder ? this.stdoutLineDecoder.end() : null;\n\t\tif (stdoutLine) {\n\t\t\tpp({ line: stdoutLine, source: Source.stdout });\n\t\t}\n\t\tconst stderrLine = this.stderrLineDecoder ? this.stderrLineDecoder.end() : null;\n\t\tif (stderrLine) {\n\t\t\tpp({ line: stderrLine, source: Source.stderr });\n\t\t}\n\t}\n}\n\nexport interface IQueuedSender {\n\tsend: (msg: any) => void;\n}\n\n// Wrapper around process.send() that will queue any messages if the internal node.js\n// queue is filled with messages and only continue sending messages when the internal\n// queue is free again to consume messages.\n// On Windows we always wait for the send() method to return before sending the next message\n// to workaround https://github.com/nodejs/node/issues/7657 (IPC can freeze process)\nexport function createQueuedSender(childProcess: cp.ChildProcess): IQueuedSender {\n\tlet msgQueue: string[] = [];\n\tlet useQueue = false;\n\n\tconst send = function (msg: any): void {\n\t\tif (useQueue) {\n\t\t\tmsgQueue.push(msg); // add to the queue if the process cannot handle more messages\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = childProcess.send(msg, (error: Error | null) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error); // unlikely to happen, best we can do is log this error\n\t\t\t}\n\n\t\t\tuseQueue = false; // we are good again to send directly without queue\n\n\t\t\t// now send all the messages that we have in our queue and did not send yet\n\t\t\tif (msgQueue.length > 0) {\n\t\t\t\tconst msgQueueCopy = msgQueue.slice(0);\n\t\t\t\tmsgQueue = [];\n\t\t\t\tmsgQueueCopy.forEach(entry => send(entry));\n\t\t\t}\n\t\t});\n\n\t\tif (!result || Platform.isWindows /* workaround https://github.com/nodejs/node/issues/7657 */) {\n\t\t\tuseQueue = true;\n\t\t}\n\t};\n\n\treturn { send };\n}\n\nexport namespace win32 {\n\texport async function findExecutable(command: string, cwd?: string, paths?: string[]): Promise<string> {\n\t\t// If we have an absolute path then we take it.\n\t\tif (path.isAbsolute(command)) {\n\t\t\treturn command;\n\t\t}\n\t\tif (cwd === undefined) {\n\t\t\tcwd = process.cwd();\n\t\t}\n\t\tconst dir = path.dirname(command);\n\t\tif (dir !== '.') {\n\t\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t\t// to the current working directory.\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\t\tif (paths === undefined && Types.isString(process.env.PATH)) {\n\t\t\tpaths = process.env.PATH.split(path.delimiter);\n\t\t}\n\t\t// No PATH environment. Make path absolute to the cwd.\n\t\tif (paths === undefined || paths.length === 0) {\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\n\t\tasync function fileExists(path: string): Promise<boolean> {\n\t\t\tif (await promisify(fs.exists)(path)) {\n\t\t\t\treturn !((await promisify(fs.stat)(path)).isDirectory());\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have a simple file name. We get the path variable from the env\n\t\t// and try to find the executable on the path.\n\t\tfor (let pathEntry of paths) {\n\t\t\t// The path entry is absolute.\n\t\t\tlet fullPath: string;\n\t\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\t\tfullPath = path.join(pathEntry, command);\n\t\t\t} else {\n\t\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t\t}\n\t\t\tif (await fileExists(fullPath)) {\n\t\t\t\treturn fullPath;\n\t\t\t}\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t\treturn path.join(cwd, command);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcess, fork, ForkOptions } from 'child_process';\nimport { IDisposable, toDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { Delayer, createCancelablePromise } from 'vs/base/common/async';\nimport { deepClone, assign } from 'vs/base/common/objects';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { createQueuedSender } from 'vs/base/node/processes';\nimport { IChannel, ChannelServer as IPCServer, ChannelClient as IPCClient, IChannelClient } from 'vs/base/parts/ipc/common/ipc';\nimport { isRemoteConsoleLog, log } from 'vs/base/common/console';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\n/**\n * This implementation doesn't perform well since it uses base64 encoding for buffers.\n * We should move all implementations to use named ipc.net, so we stop depending on cp.fork.\n */\n\nexport class Server<TContext extends string> extends IPCServer<TContext> {\n\tconstructor(ctx: TContext) {\n\t\tsuper({\n\t\t\tsend: r => {\n\t\t\t\ttry {\n\t\t\t\t\tif (process.send) {\n\t\t\t\t\t\tprocess.send((<Buffer>r.buffer).toString('base64'));\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /* not much to do */ }\n\t\t\t},\n\t\t\tonMessage: Event.fromNodeEventEmitter(process, 'message', msg => VSBuffer.wrap(Buffer.from(msg, 'base64')))\n\t\t}, ctx);\n\n\t\tprocess.once('disconnect', () => this.dispose());\n\t}\n}\n\nexport interface IIPCOptions {\n\n\t/**\n\t * A descriptive name for the server this connection is to. Used in logging.\n\t */\n\tserverName: string;\n\n\t/**\n\t * Time in millies before killing the ipc process. The next request after killing will start it again.\n\t */\n\ttimeout?: number;\n\n\t/**\n\t * Arguments to the module to execute.\n\t */\n\targs?: string[];\n\n\t/**\n\t * Environment key-value pairs to be passed to the process that gets spawned for the ipc.\n\t */\n\tenv?: any;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application executed.\n\t */\n\tdebug?: number;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application and breaking it on the first line.\n\t */\n\tdebugBrk?: number;\n\n\t/**\n\t * See https://github.com/Microsoft/vscode/issues/27665\n\t * Allows to pass in fresh execArgv to the forked process such that it doesn't inherit them from `process.execArgv`.\n\t * e.g. Launching the extension host process with `--inspect-brk=xxx` and then forking a process from the extension host\n\t * results in the forked process inheriting `--inspect-brk=xxx`.\n\t */\n\tfreshExecArgv?: boolean;\n\n\t/**\n\t * Enables our createQueuedSender helper for this Client. Uses a queue when the internal Node.js queue is\n\t * full of messages - see notes on that method.\n\t */\n\tuseQueue?: boolean;\n}\n\nexport class Client implements IChannelClient, IDisposable {\n\n\tprivate disposeDelayer: Delayer<void> | undefined;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate child: ChildProcess | null;\n\tprivate _client: IPCClient | null;\n\tprivate channels = new Map<string, IChannel>();\n\n\tprivate readonly _onDidProcessExit = new Emitter<{ code: number, signal: string }>();\n\treadonly onDidProcessExit = this._onDidProcessExit.event;\n\n\tconstructor(private modulePath: string, private options: IIPCOptions) {\n\t\tconst timeout = options && options.timeout ? options.timeout : 60000;\n\t\tthis.disposeDelayer = new Delayer<void>(timeout);\n\t\tthis.child = null;\n\t\tthis._client = null;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn that.requestPromise<T>(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg?: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprotected requestPromise<T>(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Promise.reject(new Error('disposed'));\n\t\t}\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tconst channel = this.getCachedChannel(channelName);\n\t\tconst result = createCancelablePromise(token => channel.call<T>(name, arg, token));\n\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(() => result.cancel());\n\n\t\tconst disposable = toDisposable(() => result.cancel());\n\t\tthis.activeRequests.add(disposable);\n\n\t\tresult.finally(() => {\n\t\t\tcancellationTokenListener.dispose();\n\t\t\tthis.activeRequests.delete(disposable);\n\n\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprotected requestEvent<T>(channelName: string, name: string, arg?: any): Event<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Event.None;\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst channel = this.getCachedChannel(channelName);\n\t\t\t\tconst event: Event<T> = channel.listen(name, arg);\n\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t\tthis.activeRequests.add(listener);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.activeRequests.delete(listener);\n\t\t\t\tlistener.dispose();\n\n\t\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate get client(): IPCClient {\n\t\tif (!this._client) {\n\t\t\tconst args = this.options && this.options.args ? this.options.args : [];\n\t\t\tconst forkOpts: ForkOptions = Object.create(null);\n\n\t\t\tforkOpts.env = assign(deepClone(process.env), { 'VSCODE_PARENT_PID': String(process.pid) });\n\n\t\t\tif (this.options && this.options.env) {\n\t\t\t\tforkOpts.env = assign(forkOpts.env, this.options.env);\n\t\t\t}\n\n\t\t\tif (this.options && this.options.freshExecArgv) {\n\t\t\t\tforkOpts.execArgv = [];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debug === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect=' + this.options.debug];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debugBrk === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect-brk=' + this.options.debugBrk];\n\t\t\t}\n\n\t\t\tthis.child = fork(this.modulePath, args, forkOpts);\n\n\t\t\tconst onMessageEmitter = new Emitter<VSBuffer>();\n\t\t\tconst onRawMessage = Event.fromNodeEventEmitter(this.child, 'message', msg => msg);\n\n\t\t\tonRawMessage(msg => {\n\n\t\t\t\t// Handle remote console logs specially\n\t\t\t\tif (isRemoteConsoleLog(msg)) {\n\t\t\t\t\tlog(msg, `IPC Library: ${this.options.serverName}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Anything else goes to the outside\n\t\t\t\tonMessageEmitter.fire(VSBuffer.wrap(Buffer.from(msg, 'base64')));\n\t\t\t});\n\n\t\t\tconst sender = this.options.useQueue ? createQueuedSender(this.child) : this.child;\n\t\t\tconst send = (r: VSBuffer) => this.child && this.child.connected && sender.send((<Buffer>r.buffer).toString('base64'));\n\t\t\tconst onMessage = onMessageEmitter.event;\n\t\t\tconst protocol = { send, onMessage };\n\n\t\t\tthis._client = new IPCClient(protocol);\n\n\t\t\tconst onExit = () => this.disposeClient();\n\t\t\tprocess.once('exit', onExit);\n\n\t\t\tthis.child.on('error', err => console.warn('IPC \"' + this.options.serverName + '\" errored with ' + err));\n\n\t\t\tthis.child.on('exit', (code: any, signal: any) => {\n\t\t\t\tprocess.removeListener('exit' as 'loaded', onExit); // https://github.com/electron/electron/issues/21475\n\n\t\t\t\tthis.activeRequests.forEach(r => dispose(r));\n\t\t\t\tthis.activeRequests.clear();\n\n\t\t\t\tif (code !== 0 && signal !== 'SIGTERM') {\n\t\t\t\t\tconsole.warn('IPC \"' + this.options.serverName + '\" crashed with exit code ' + code + ' and signal ' + signal);\n\t\t\t\t}\n\n\t\t\t\tif (this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.cancel();\n\t\t\t\t}\n\t\t\t\tthis.disposeClient();\n\t\t\t\tthis._onDidProcessExit.fire({ code, signal });\n\t\t\t});\n\t\t}\n\n\t\treturn this._client;\n\t}\n\n\tprivate getCachedChannel(name: string): IChannel {\n\t\tlet channel = this.channels.get(name);\n\n\t\tif (!channel) {\n\t\t\tchannel = this.client.getChannel(name);\n\t\t\tthis.channels.set(name, channel);\n\t\t}\n\n\t\treturn channel;\n\t}\n\n\tprivate disposeClient() {\n\t\tif (this._client) {\n\t\t\tif (this.child) {\n\t\t\t\tthis.child.kill();\n\t\t\t\tthis.child = null;\n\t\t\t}\n\t\t\tthis._client = null;\n\t\t\tthis.channels.clear();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._onDidProcessExit.dispose();\n\t\tif (this.disposeDelayer) {\n\t\t\tthis.disposeDelayer.cancel();\n\t\t\tthis.disposeDelayer = undefined;\n\t\t}\n\t\tthis.disposeClient();\n\t\tthis.activeRequests.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServerChannel, IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IReloadSessionEvent, ICloseSessionEvent, IAttachSessionEvent, ILogToSessionEvent, ITerminateSessionEvent, IExtensionHostDebugService, IOpenExtensionWindowResult } from 'vs/platform/debug/common/extensionHostDebug';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IRemoteConsoleLog } from 'vs/base/common/console';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\n\nexport class ExtensionHostDebugBroadcastChannel<TContext> implements IServerChannel<TContext> {\n\n\tstatic readonly ChannelName = 'extensionhostdebugservice';\n\n\tprivate readonly _onCloseEmitter = new Emitter<ICloseSessionEvent>();\n\tprivate readonly _onReloadEmitter = new Emitter<IReloadSessionEvent>();\n\tprivate readonly _onTerminateEmitter = new Emitter<ITerminateSessionEvent>();\n\tprivate readonly _onLogToEmitter = new Emitter<ILogToSessionEvent>();\n\tprivate readonly _onAttachEmitter = new Emitter<IAttachSessionEvent>();\n\n\tcall(ctx: TContext, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'close':\n\t\t\t\treturn Promise.resolve(this._onCloseEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'reload':\n\t\t\t\treturn Promise.resolve(this._onReloadEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'terminate':\n\t\t\t\treturn Promise.resolve(this._onTerminateEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'log':\n\t\t\t\treturn Promise.resolve(this._onLogToEmitter.fire({ sessionId: arg[0], log: arg[1] }));\n\t\t\tcase 'attach':\n\t\t\t\treturn Promise.resolve(this._onAttachEmitter.fire({ sessionId: arg[0], port: arg[1], subId: arg[2] }));\n\t\t}\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tlisten(ctx: TContext, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'close':\n\t\t\t\treturn this._onCloseEmitter.event;\n\t\t\tcase 'reload':\n\t\t\t\treturn this._onReloadEmitter.event;\n\t\t\tcase 'terminate':\n\t\t\t\treturn this._onTerminateEmitter.event;\n\t\t\tcase 'log':\n\t\t\t\treturn this._onLogToEmitter.event;\n\t\t\tcase 'attach':\n\t\t\t\treturn this._onAttachEmitter.event;\n\t\t}\n\t\tthrow new Error('Method not implemented.');\n\t}\n}\n\nexport class ExtensionHostDebugChannelClient extends Disposable implements IExtensionHostDebugService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private channel: IChannel) {\n\t\tsuper();\n\t}\n\n\treload(sessionId: string): void {\n\t\tthis.channel.call('reload', [sessionId]);\n\t}\n\n\tget onReload(): Event<IReloadSessionEvent> {\n\t\treturn this.channel.listen('reload');\n\t}\n\n\tclose(sessionId: string): void {\n\t\tthis.channel.call('close', [sessionId]);\n\t}\n\n\tget onClose(): Event<ICloseSessionEvent> {\n\t\treturn this.channel.listen('close');\n\t}\n\n\tattachSession(sessionId: string, port: number, subId?: string): void {\n\t\tthis.channel.call('attach', [sessionId, port, subId]);\n\t}\n\n\tget onAttachSession(): Event<IAttachSessionEvent> {\n\t\treturn this.channel.listen('attach');\n\t}\n\n\tlogToSession(sessionId: string, log: IRemoteConsoleLog): void {\n\t\tthis.channel.call('log', [sessionId, log]);\n\t}\n\n\tget onLogToSession(): Event<ILogToSessionEvent> {\n\t\treturn this.channel.listen('log');\n\t}\n\n\tterminateSession(sessionId: string, subId?: string): void {\n\t\tthis.channel.call('terminate', [sessionId, subId]);\n\t}\n\n\tget onTerminateSession(): Event<ITerminateSessionEvent> {\n\t\treturn this.channel.listen('terminate');\n\t}\n\n\topenExtensionDevelopmentHostWindow(args: string[], env: IProcessEnvironment, debugRenderer: boolean): Promise<IOpenExtensionWindowResult> {\n\t\treturn this.channel.call('openExtensionDevelopmentHostWindow', [args, env, debugRenderer]);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IExtensionManagementService, ILocalExtension, InstallExtensionEvent, DidInstallExtensionEvent, IGalleryExtension, DidUninstallExtensionEvent, IExtensionIdentifier, IGalleryMetadata, IReportedExtension, IExtensionTipsService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { Event } from 'vs/base/common/event';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IURITransformer, DefaultURITransformer, transformAndReviveIncomingURIs } from 'vs/base/common/uriIpc';\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { ExtensionType, IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nfunction transformIncomingURI(uri: UriComponents, transformer: IURITransformer | null): URI {\n\treturn URI.revive(transformer ? transformer.transformIncoming(uri) : uri);\n}\n\nfunction transformOutgoingURI(uri: URI, transformer: IURITransformer | null): URI {\n\treturn transformer ? transformer.transformOutgoingURI(uri) : uri;\n}\n\nfunction transformIncomingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\ttransformer = transformer ? transformer : DefaultURITransformer;\n\tconst manifest = extension.manifest;\n\tconst transformed = transformAndReviveIncomingURIs({ ...extension, ...{ manifest: undefined } }, transformer);\n\treturn { ...transformed, ...{ manifest } };\n}\n\nfunction transformOutgoingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\treturn transformer ? cloneAndChange(extension, value => value instanceof URI ? transformer.transformOutgoingURI(value) : undefined) : extension;\n}\n\nexport class ExtensionManagementChannel implements IServerChannel {\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtension: Event<DidInstallExtensionEvent>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tconstructor(private service: IExtensionManagementService, private getUriTransformer: (requestContext: any) => IURITransformer | null) {\n\t\tthis.onInstallExtension = Event.buffer(service.onInstallExtension, true);\n\t\tthis.onDidInstallExtension = Event.buffer(service.onDidInstallExtension, true);\n\t\tthis.onUninstallExtension = Event.buffer(service.onUninstallExtension, true);\n\t\tthis.onDidUninstallExtension = Event.buffer(service.onDidUninstallExtension, true);\n\t}\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tconst uriTransformer = this.getUriTransformer(context);\n\t\tswitch (event) {\n\t\t\tcase 'onInstallExtension': return this.onInstallExtension;\n\t\t\tcase 'onDidInstallExtension': return Event.map(this.onDidInstallExtension, i => ({ ...i, local: i.local ? transformOutgoingExtension(i.local, uriTransformer) : i.local }));\n\t\t\tcase 'onUninstallExtension': return this.onUninstallExtension;\n\t\t\tcase 'onDidUninstallExtension': return this.onDidUninstallExtension;\n\t\t}\n\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tconst uriTransformer: IURITransformer | null = this.getUriTransformer(context);\n\t\tswitch (command) {\n\t\t\tcase 'zip': return this.service.zip(transformIncomingExtension(args[0], uriTransformer)).then(uri => transformOutgoingURI(uri, uriTransformer));\n\t\t\tcase 'unzip': return this.service.unzip(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'install': return this.service.install(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'getManifest': return this.service.getManifest(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'installFromGallery': return this.service.installFromGallery(args[0]);\n\t\t\tcase 'uninstall': return this.service.uninstall(transformIncomingExtension(args[0], uriTransformer), args[1]);\n\t\t\tcase 'reinstallFromGallery': return this.service.reinstallFromGallery(transformIncomingExtension(args[0], uriTransformer));\n\t\t\tcase 'getInstalled': return this.service.getInstalled(args[0]).then(extensions => extensions.map(e => transformOutgoingExtension(e, uriTransformer)));\n\t\t\tcase 'updateMetadata': return this.service.updateMetadata(transformIncomingExtension(args[0], uriTransformer), args[1]).then(e => transformOutgoingExtension(e, uriTransformer));\n\t\t\tcase 'getExtensionsReport': return this.service.getExtensionsReport();\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class ExtensionManagementChannelClient implements IExtensionManagementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\tprivate readonly channel: IChannel,\n\t) { }\n\n\tget onInstallExtension(): Event<InstallExtensionEvent> { return this.channel.listen('onInstallExtension'); }\n\tget onDidInstallExtension(): Event<DidInstallExtensionEvent> { return Event.map(this.channel.listen<DidInstallExtensionEvent>('onDidInstallExtension'), i => ({ ...i, local: i.local ? transformIncomingExtension(i.local, null) : i.local })); }\n\tget onUninstallExtension(): Event<IExtensionIdentifier> { return this.channel.listen('onUninstallExtension'); }\n\tget onDidUninstallExtension(): Event<DidUninstallExtensionEvent> { return this.channel.listen('onDidUninstallExtension'); }\n\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\treturn Promise.resolve(this.channel.call('zip', [extension]).then(result => URI.revive(<UriComponents>result)));\n\t}\n\n\tunzip(zipLocation: URI): Promise<IExtensionIdentifier> {\n\t\treturn Promise.resolve(this.channel.call('unzip', [zipLocation]));\n\t}\n\n\tinstall(vsix: URI): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('install', [vsix])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tgetManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\treturn Promise.resolve(this.channel.call<IExtensionManifest>('getManifest', [vsix]));\n\t}\n\n\tinstallFromGallery(extension: IGalleryExtension): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('installFromGallery', [extension])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tuninstall(extension: ILocalExtension, force = false): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call('uninstall', [extension!, force]));\n\t}\n\n\treinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call('reinstallFromGallery', [extension]));\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null): Promise<ILocalExtension[]> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension[]>('getInstalled', [type]))\n\t\t\t.then(extensions => extensions.map(extension => transformIncomingExtension(extension, null)));\n\t}\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('updateMetadata', [local, metadata]))\n\t\t\t.then(extension => transformIncomingExtension(extension, null));\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\treturn Promise.resolve(this.channel.call('getExtensionsReport'));\n\t}\n}\n\nexport class ExtensionTipsChannel implements IServerChannel {\n\n\tconstructor(private service: IExtensionTipsService) {\n\t}\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getConfigBasedTips': return this.service.getConfigBasedTips(URI.revive(args[0]));\n\t\t\tcase 'getImportantExecutableBasedTips': return this.service.getImportantExecutableBasedTips();\n\t\t\tcase 'getOtherExecutableBasedTips': return this.service.getOtherExecutableBasedTips();\n\t\t\tcase 'getAllWorkspacesTips': return this.service.getAllWorkspacesTips();\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nconst nlsRegex = /^%([\\w\\d.-]+)%$/i;\n\nexport interface ITranslations {\n\t[key: string]: string;\n}\n\nexport function localizeManifest(manifest: IExtensionManifest, translations: ITranslations): IExtensionManifest {\n\tconst patcher = (value: string) => {\n\t\tif (typeof value !== 'string') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst match = nlsRegex.exec(value);\n\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn translations[match[1]] || value;\n\t};\n\n\treturn cloneAndChange(manifest, patcher);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\n\nexport interface IParsedVersion {\n\thasCaret: boolean;\n\thasGreaterEquals: boolean;\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tpreRelease: string | null;\n}\n\nexport interface INormalizedVersion {\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tisMinimum: boolean;\n}\n\nconst VERSION_REGEXP = /^(\\^|>=)?((\\d+)|x)\\.((\\d+)|x)\\.((\\d+)|x)(\\-.*)?$/;\n\nexport function isValidVersionStr(version: string): boolean {\n\tversion = version.trim();\n\treturn (version === '*' || VERSION_REGEXP.test(version));\n}\n\nexport function parseVersion(version: string): IParsedVersion | null {\n\tif (!isValidVersionStr(version)) {\n\t\treturn null;\n\t}\n\n\tversion = version.trim();\n\n\tif (version === '*') {\n\t\treturn {\n\t\t\thasCaret: false,\n\t\t\thasGreaterEquals: false,\n\t\t\tmajorBase: 0,\n\t\t\tmajorMustEqual: false,\n\t\t\tminorBase: 0,\n\t\t\tminorMustEqual: false,\n\t\t\tpatchBase: 0,\n\t\t\tpatchMustEqual: false,\n\t\t\tpreRelease: null\n\t\t};\n\t}\n\n\tlet m = version.match(VERSION_REGEXP);\n\tif (!m) {\n\t\treturn null;\n\t}\n\treturn {\n\t\thasCaret: m[1] === '^',\n\t\thasGreaterEquals: m[1] === '>=',\n\t\tmajorBase: m[2] === 'x' ? 0 : parseInt(m[2], 10),\n\t\tmajorMustEqual: (m[2] === 'x' ? false : true),\n\t\tminorBase: m[4] === 'x' ? 0 : parseInt(m[4], 10),\n\t\tminorMustEqual: (m[4] === 'x' ? false : true),\n\t\tpatchBase: m[6] === 'x' ? 0 : parseInt(m[6], 10),\n\t\tpatchMustEqual: (m[6] === 'x' ? false : true),\n\t\tpreRelease: m[8] || null\n\t};\n}\n\nexport function normalizeVersion(version: IParsedVersion | null): INormalizedVersion | null {\n\tif (!version) {\n\t\treturn null;\n\t}\n\n\tlet majorBase = version.majorBase,\n\t\tmajorMustEqual = version.majorMustEqual,\n\t\tminorBase = version.minorBase,\n\t\tminorMustEqual = version.minorMustEqual,\n\t\tpatchBase = version.patchBase,\n\t\tpatchMustEqual = version.patchMustEqual;\n\n\tif (version.hasCaret) {\n\t\tif (majorBase === 0) {\n\t\t\tpatchMustEqual = false;\n\t\t} else {\n\t\t\tminorMustEqual = false;\n\t\t\tpatchMustEqual = false;\n\t\t}\n\t}\n\n\treturn {\n\t\tmajorBase: majorBase,\n\t\tmajorMustEqual: majorMustEqual,\n\t\tminorBase: minorBase,\n\t\tminorMustEqual: minorMustEqual,\n\t\tpatchBase: patchBase,\n\t\tpatchMustEqual: patchMustEqual,\n\t\tisMinimum: version.hasGreaterEquals\n\t};\n}\n\nexport function isValidVersion(_version: string | INormalizedVersion, _desiredVersion: string | INormalizedVersion): boolean {\n\tlet version: INormalizedVersion | null;\n\tif (typeof _version === 'string') {\n\t\tversion = normalizeVersion(parseVersion(_version));\n\t} else {\n\t\tversion = _version;\n\t}\n\n\tlet desiredVersion: INormalizedVersion | null;\n\tif (typeof _desiredVersion === 'string') {\n\t\tdesiredVersion = normalizeVersion(parseVersion(_desiredVersion));\n\t} else {\n\t\tdesiredVersion = _desiredVersion;\n\t}\n\n\tif (!version || !desiredVersion) {\n\t\treturn false;\n\t}\n\n\tlet majorBase = version.majorBase;\n\tlet minorBase = version.minorBase;\n\tlet patchBase = version.patchBase;\n\n\tlet desiredMajorBase = desiredVersion.majorBase;\n\tlet desiredMinorBase = desiredVersion.minorBase;\n\tlet desiredPatchBase = desiredVersion.patchBase;\n\n\tlet majorMustEqual = desiredVersion.majorMustEqual;\n\tlet minorMustEqual = desiredVersion.minorMustEqual;\n\tlet patchMustEqual = desiredVersion.patchMustEqual;\n\n\tif (desiredVersion.isMinimum) {\n\t\tif (majorBase > desiredMajorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (majorBase < desiredMajorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (minorBase > desiredMinorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (minorBase < desiredMinorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn patchBase >= desiredPatchBase;\n\t}\n\n\t// Anything < 1.0.0 is compatible with >= 1.0.0, except exact matches\n\tif (majorBase === 1 && desiredMajorBase === 0 && (!majorMustEqual || !minorMustEqual || !patchMustEqual)) {\n\t\tdesiredMajorBase = 1;\n\t\tdesiredMinorBase = 0;\n\t\tdesiredPatchBase = 0;\n\t\tmajorMustEqual = true;\n\t\tminorMustEqual = false;\n\t\tpatchMustEqual = false;\n\t}\n\n\tif (majorBase < desiredMajorBase) {\n\t\t// smaller major version\n\t\treturn false;\n\t}\n\n\tif (majorBase > desiredMajorBase) {\n\t\t// higher major version\n\t\treturn (!majorMustEqual);\n\t}\n\n\t// at this point, majorBase are equal\n\n\tif (minorBase < desiredMinorBase) {\n\t\t// smaller minor version\n\t\treturn false;\n\t}\n\n\tif (minorBase > desiredMinorBase) {\n\t\t// higher minor version\n\t\treturn (!minorMustEqual);\n\t}\n\n\t// at this point, minorBase are equal\n\n\tif (patchBase < desiredPatchBase) {\n\t\t// smaller patch version\n\t\treturn false;\n\t}\n\n\tif (patchBase > desiredPatchBase) {\n\t\t// higher patch version\n\t\treturn (!patchMustEqual);\n\t}\n\n\t// at this point, patchBase are equal\n\treturn true;\n}\n\nexport interface IReducedExtensionDescription {\n\tisBuiltin: boolean;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n}\n\nexport function isValidExtensionVersion(version: string, extensionDesc: IReducedExtensionDescription, notices: string[]): boolean {\n\n\tif (extensionDesc.isBuiltin || typeof extensionDesc.main === 'undefined') {\n\t\t// No version check for builtin or declarative extensions\n\t\treturn true;\n\t}\n\n\treturn isVersionValid(version, extensionDesc.engines.vscode, notices);\n}\n\nexport function isEngineValid(engine: string, version: string): boolean {\n\t// TODO@joao: discuss with alex '*' doesn't seem to be a valid engine version\n\treturn engine === '*' || isVersionValid(version, engine);\n}\n\nexport function isVersionValid(currentVersion: string, requestedVersion: string, notices: string[] = []): boolean {\n\n\tlet desiredVersion = normalizeVersion(parseVersion(requestedVersion));\n\tif (!desiredVersion) {\n\t\tnotices.push(nls.localize('versionSyntax', \"Could not parse `engines.vscode` value {0}. Please use, for example: ^1.22.0, ^1.22.x, etc.\", requestedVersion));\n\t\treturn false;\n\t}\n\n\t// enforce that a breaking API version is specified.\n\t// for 0.X.Y, that means up to 0.X must be specified\n\t// otherwise for Z.X.Y, that means Z must be specified\n\tif (desiredVersion.majorBase === 0) {\n\t\t// force that major and minor must be specific\n\t\tif (!desiredVersion.majorMustEqual || !desiredVersion.minorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity1', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t// force that major must be specific\n\t\tif (!desiredVersion.majorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity2', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (!isValidVersion(currentVersion, desiredVersion)) {\n\t\tnotices.push(nls.localize('versionMismatch', \"Extension is not compatible with Code {0}. Extension requires: {1}.\", currentVersion, requestedVersion));\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IWatcherRequest, IWatcherService, IWatcherOptions } from './watcher';\nimport { Event } from 'vs/base/common/event';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\n\nexport class WatcherChannel implements IServerChannel {\n\n\tconstructor(private service: IWatcherService) { }\n\n\tlisten(_: unknown, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'watch': return this.service.watch(arg);\n\t\t\tcase 'onLogMessage': return this.service.onLogMessage;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setRoots': return this.service.setRoots(arg);\n\t\t\tcase 'setVerboseLogging': return this.service.setVerboseLogging(arg);\n\t\t\tcase 'stop': return this.service.stop();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class WatcherChannelClient implements IWatcherService {\n\n\tconstructor(private channel: IChannel) { }\n\n\twatch(options: IWatcherOptions): Event<IDiskFileChange[]> {\n\t\treturn this.channel.listen('watch', options);\n\t}\n\n\tsetVerboseLogging(enable: boolean): Promise<void> {\n\t\treturn this.channel.call('setVerboseLogging', enable);\n\t}\n\n\tsetRoots(roots: IWatcherRequest[]): Promise<void> {\n\t\treturn this.channel.call('setRoots', roots);\n\t}\n\n\tget onLogMessage(): Event<ILogMessage> {\n\t\treturn this.channel.listen('onLogMessage');\n\t}\n\n\tstop(): Promise<void> {\n\t\treturn this.channel.call('stop');\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getNextTickChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { WatcherChannelClient } from 'vs/platform/files/node/watcher/nsfw/watcherIpc';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IWatcherRequest } from 'vs/platform/files/node/watcher/nsfw/watcher';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\nexport class FileWatcher extends Disposable {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate service: WatcherChannelClient | undefined;\n\tprivate isDisposed: boolean;\n\tprivate restartCounter: number;\n\n\tconstructor(\n\t\tprivate folders: IWatcherRequest[],\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean,\n\t) {\n\t\tsuper();\n\n\t\tthis.isDisposed = false;\n\t\tthis.restartCounter = 0;\n\n\t\tthis.startWatching();\n\t}\n\n\tprivate startWatching(): void {\n\t\tconst client = this._register(new Client(\n\t\t\tgetPathFromAmdModule(require, 'bootstrap-fork'),\n\t\t\t{\n\t\t\t\tserverName: 'File Watcher (nsfw)',\n\t\t\t\targs: ['--type=watcherService'],\n\t\t\t\tenv: {\n\t\t\t\t\tAMD_ENTRYPOINT: 'vs/platform/files/node/watcher/nsfw/watcherApp',\n\t\t\t\t\tPIPE_LOGGING: 'true',\n\t\t\t\t\tVERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tthis._register(client.onDidProcessExit(() => {\n\t\t\t// our watcher app should never be completed because it keeps on watching. being in here indicates\n\t\t\t// that the watcher process died and we want to restart it here. we only do it a max number of times\n\t\t\tif (!this.isDisposed) {\n\t\t\t\tif (this.restartCounter <= FileWatcher.MAX_RESTARTS) {\n\t\t\t\t\tthis.error('terminated unexpectedly and is restarted again...');\n\t\t\t\t\tthis.restartCounter++;\n\t\t\t\t\tthis.startWatching();\n\t\t\t\t} else {\n\t\t\t\t\tthis.error('failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Initialize watcher\n\t\tconst channel = getNextTickChannel(client.getChannel('watcher'));\n\t\tthis.service = new WatcherChannelClient(channel);\n\n\t\tthis.service.setVerboseLogging(this.verboseLogging);\n\n\t\tconst options = {};\n\t\tthis._register(this.service.watch(options)(e => !this.isDisposed && this.onDidFilesChange(e)));\n\n\t\tthis._register(this.service.onLogMessage(m => this.onLogMessage(m)));\n\n\t\t// Start watching\n\t\tthis.setFolders(this.folders);\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t\tif (!this.isDisposed && this.service) {\n\t\t\tthis.service.setVerboseLogging(verboseLogging);\n\t\t}\n\t}\n\n\terror(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (nsfw)] ${message}` });\n\t}\n\n\tsetFolders(folders: IWatcherRequest[]): void {\n\t\tthis.folders = folders;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setRoots(folders);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IWatcherRequest, IWatcherService, IWatcherOptions } from './watcher';\nimport { Event } from 'vs/base/common/event';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\n\nexport class WatcherChannel implements IServerChannel {\n\n\tconstructor(private service: IWatcherService) { }\n\n\tlisten(_: unknown, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'watch': return this.service.watch(arg);\n\t\t\tcase 'onLogMessage': return this.service.onLogMessage;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setRoots': return this.service.setRoots(arg);\n\t\t\tcase 'setVerboseLogging': return this.service.setVerboseLogging(arg);\n\t\t\tcase 'stop': return this.service.stop();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class WatcherChannelClient implements IWatcherService {\n\n\tconstructor(private channel: IChannel) { }\n\n\twatch(options: IWatcherOptions): Event<IDiskFileChange[]> {\n\t\treturn this.channel.listen('watch', options);\n\t}\n\n\tsetVerboseLogging(enable: boolean): Promise<void> {\n\t\treturn this.channel.call('setVerboseLogging', enable);\n\t}\n\n\tget onLogMessage(): Event<ILogMessage> {\n\t\treturn this.channel.listen('onLogMessage');\n\t}\n\n\tsetRoots(roots: IWatcherRequest[]): Promise<void> {\n\t\treturn this.channel.call('setRoots', roots);\n\t}\n\n\tstop(): Promise<void> {\n\t\treturn this.channel.call('stop');\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getNextTickChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { WatcherChannelClient } from 'vs/platform/files/node/watcher/unix/watcherIpc';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IWatcherRequest, IWatcherOptions } from 'vs/platform/files/node/watcher/unix/watcher';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\nexport class FileWatcher extends Disposable {\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate isDisposed: boolean;\n\tprivate restartCounter: number;\n\tprivate service: WatcherChannelClient | undefined;\n\n\tconstructor(\n\t\tprivate folders: IWatcherRequest[],\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean,\n\t\tprivate watcherOptions: IWatcherOptions = {}\n\t) {\n\t\tsuper();\n\n\t\tthis.isDisposed = false;\n\t\tthis.restartCounter = 0;\n\n\t\tthis.startWatching();\n\t}\n\n\tprivate startWatching(): void {\n\t\tconst client = this._register(new Client(\n\t\t\tgetPathFromAmdModule(require, 'bootstrap-fork'),\n\t\t\t{\n\t\t\t\tserverName: 'File Watcher (chokidar)',\n\t\t\t\targs: ['--type=watcherService'],\n\t\t\t\tenv: {\n\t\t\t\t\tAMD_ENTRYPOINT: 'vs/platform/files/node/watcher/unix/watcherApp',\n\t\t\t\t\tPIPE_LOGGING: 'true',\n\t\t\t\t\tVERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tthis._register(client.onDidProcessExit(() => {\n\t\t\t// our watcher app should never be completed because it keeps on watching. being in here indicates\n\t\t\t// that the watcher process died and we want to restart it here. we only do it a max number of times\n\t\t\tif (!this.isDisposed) {\n\t\t\t\tif (this.restartCounter <= FileWatcher.MAX_RESTARTS) {\n\t\t\t\t\tthis.error('terminated unexpectedly and is restarted again...');\n\t\t\t\t\tthis.restartCounter++;\n\t\t\t\t\tthis.startWatching();\n\t\t\t\t} else {\n\t\t\t\t\tthis.error('failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Initialize watcher\n\t\tconst channel = getNextTickChannel(client.getChannel('watcher'));\n\t\tthis.service = new WatcherChannelClient(channel);\n\n\t\tthis.service.setVerboseLogging(this.verboseLogging);\n\n\t\tthis._register(this.service.watch(this.watcherOptions)(e => !this.isDisposed && this.onDidFilesChange(e)));\n\n\t\tthis._register(this.service.onLogMessage(m => this.onLogMessage(m)));\n\n\t\t// Start watching\n\t\tthis.service.setRoots(this.folders);\n\t}\n\n\terror(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (chokidar)] ${message}` });\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setVerboseLogging(verboseLogging);\n\t\t}\n\t}\n\n\tsetFolders(folders: IWatcherRequest[]): void {\n\t\tthis.folders = folders;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setRoots(folders);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cp from 'child_process';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport * as decoder from 'vs/base/node/decoder';\nimport * as glob from 'vs/base/common/glob';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\n\nexport class OutOfProcessWin32FolderWatcher {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate static changeTypeMap: FileChangeType[] = [FileChangeType.UPDATED, FileChangeType.ADDED, FileChangeType.DELETED];\n\n\tprivate ignored: glob.ParsedPattern[];\n\n\tprivate handle: cp.ChildProcess | undefined;\n\tprivate restartCounter: number;\n\n\tconstructor(\n\t\tprivate watchedFolder: string,\n\t\tignored: string[],\n\t\tprivate eventCallback: (events: IDiskFileChange[]) => void,\n\t\tprivate logCallback: (message: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tthis.restartCounter = 0;\n\n\t\tif (Array.isArray(ignored)) {\n\t\t\tthis.ignored = ignored.map(i => glob.parse(i));\n\t\t} else {\n\t\t\tthis.ignored = [];\n\t\t}\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tthis.log(`Start watching: ${watchedFolder}`);\n\t\t}\n\n\t\tthis.startWatcher();\n\t}\n\n\tprivate startWatcher(): void {\n\t\tconst args = [this.watchedFolder];\n\t\tif (this.verboseLogging) {\n\t\t\targs.push('-verbose');\n\t\t}\n\n\t\tthis.handle = cp.spawn(getPathFromAmdModule(require, 'vs/platform/files/node/watcher/win32/CodeHelper.exe'), args);\n\n\t\tconst stdoutLineDecoder = new decoder.LineDecoder();\n\n\t\t// Events over stdout\n\t\tthis.handle.stdout!.on('data', (data: Buffer) => {\n\n\t\t\t// Collect raw events from output\n\t\t\tconst rawEvents: IDiskFileChange[] = [];\n\t\t\tstdoutLineDecoder.write(data).forEach((line) => {\n\t\t\t\tconst eventParts = line.split('|');\n\t\t\t\tif (eventParts.length === 2) {\n\t\t\t\t\tconst changeType = Number(eventParts[0]);\n\t\t\t\t\tconst absolutePath = eventParts[1];\n\n\t\t\t\t\t// File Change Event (0 Changed, 1 Created, 2 Deleted)\n\t\t\t\t\tif (changeType >= 0 && changeType < 3) {\n\n\t\t\t\t\t\t// Support ignores\n\t\t\t\t\t\tif (this.ignored && this.ignored.some(ignore => ignore(absolutePath))) {\n\t\t\t\t\t\t\tif (this.verboseLogging) {\n\t\t\t\t\t\t\t\tthis.log(absolutePath);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Otherwise record as event\n\t\t\t\t\t\trawEvents.push({\n\t\t\t\t\t\t\ttype: OutOfProcessWin32FolderWatcher.changeTypeMap[changeType],\n\t\t\t\t\t\t\tpath: absolutePath\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// 3 Logging\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.log(eventParts[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Trigger processing of events through the delayer to batch them up properly\n\t\t\tif (rawEvents.length > 0) {\n\t\t\t\tthis.eventCallback(rawEvents);\n\t\t\t}\n\t\t});\n\n\t\t// Errors\n\t\tthis.handle.on('error', (error: Error) => this.onError(error));\n\t\tthis.handle.stderr!.on('data', (data: Buffer) => this.onError(data));\n\n\t\t// Exit\n\t\tthis.handle.on('exit', (code: number, signal: string) => this.onExit(code, signal));\n\t}\n\n\tprivate onError(error: Error | Buffer): void {\n\t\tthis.error('process error: ' + error.toString());\n\t}\n\n\tprivate onExit(code: number, signal: string): void {\n\t\tif (this.handle) { // exit while not yet being disposed is unexpected!\n\t\t\tthis.error(`terminated unexpectedly (code: ${code}, signal: ${signal})`);\n\n\t\t\tif (this.restartCounter <= OutOfProcessWin32FolderWatcher.MAX_RESTARTS) {\n\t\t\t\tthis.error('is restarted again...');\n\t\t\t\tthis.restartCounter++;\n\t\t\t\tthis.startWatcher(); // restart\n\t\t\t} else {\n\t\t\t\tthis.error('Watcher failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate error(message: string) {\n\t\tthis.logCallback({ type: 'error', message: `[File Watcher (C#)] ${message}` });\n\t}\n\n\tprivate log(message: string) {\n\t\tthis.logCallback({ type: 'trace', message: `[File Watcher (C#)] ${message}` });\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.handle) {\n\t\t\tthis.handle.kill();\n\t\t\tthis.handle = undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { OutOfProcessWin32FolderWatcher } from 'vs/platform/files/node/watcher/win32/csharpWatcherService';\nimport { posix } from 'vs/base/common/path';\nimport { rtrim } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport class FileWatcher implements IDisposable {\n\n\tprivate folder: { path: string, excludes: string[] };\n\tprivate service: OutOfProcessWin32FolderWatcher | undefined = undefined;\n\n\tconstructor(\n\t\tfolders: { path: string, excludes: string[] }[],\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tthis.folder = folders[0];\n\n\t\tif (this.folder.path.indexOf('\\\\\\\\') === 0 && this.folder.path.endsWith(posix.sep)) {\n\t\t\t// for some weird reason, node adds a trailing slash to UNC paths\n\t\t\t// we never ever want trailing slashes as our base path unless\n\t\t\t// someone opens root (\"/\").\n\t\t\t// See also https://github.com/nodejs/io.js/issues/1765\n\t\t\tthis.folder.path = rtrim(this.folder.path, posix.sep);\n\t\t}\n\n\t\tthis.service = this.startWatching();\n\t}\n\n\tprivate get isDisposed(): boolean {\n\t\treturn !this.service;\n\t}\n\n\tprivate startWatching(): OutOfProcessWin32FolderWatcher {\n\t\treturn new OutOfProcessWin32FolderWatcher(\n\t\t\tthis.folder.path,\n\t\t\tthis.folder.excludes,\n\t\t\tevents => this.onFileEvents(events),\n\t\t\tmessage => this.onLogMessage(message),\n\t\t\tthis.verboseLogging\n\t\t);\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t\tif (this.service) {\n\t\t\tthis.service.dispose();\n\t\t\tthis.service = this.startWatching();\n\t\t}\n\t}\n\n\tprivate onFileEvents(events: IDiskFileChange[]): void {\n\t\tif (this.isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Emit through event emitter\n\t\tif (events.length > 0) {\n\t\t\tthis.onDidFilesChange(events);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this.service) {\n\t\t\tthis.service.dispose();\n\t\t\tthis.service = undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as instantiation from './instantiation';\n\nexport class SyncDescriptor<T> {\n\n\treadonly ctor: any;\n\treadonly staticArguments: any[];\n\treadonly supportsDelayedInstantiation: boolean;\n\n\tconstructor(ctor: new (...args: any[]) => T, staticArguments: any[] = [], supportsDelayedInstantiation: boolean = false) {\n\t\tthis.ctor = ctor;\n\t\tthis.staticArguments = staticArguments;\n\t\tthis.supportsDelayedInstantiation = supportsDelayedInstantiation;\n\t}\n}\n\nexport interface CreateSyncFunc {\n\n\t<T>(ctor: instantiation.IConstructorSignature0<T>): SyncDescriptor0<T>;\n\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>): SyncDescriptor1<A1, T>;\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>, a1: A1): SyncDescriptor0<T>;\n\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>): SyncDescriptor2<A1, A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1): SyncDescriptor1<A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1, a2: A2): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>): SyncDescriptor3<A1, A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1): SyncDescriptor2<A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>): SyncDescriptor4<A1, A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>): SyncDescriptor5<A1, A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>): SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>): SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>): SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\nexport const createSyncDescriptor: CreateSyncFunc = <T>(ctor: any, ...staticArguments: any[]): any => {\n\treturn new SyncDescriptor<T>(ctor, staticArguments);\n};\n\nexport interface SyncDescriptor0<T> {\n\tctor: any;\n\tbind(): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor1<A1, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor2<A1, A2, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor1<A2, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor3<A1, A2, A3, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor2<A2, A3, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor4<A1, A2, A3, A4, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor5<A1, A2, A3, A4, A5, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor6<A1, A2, A3, A4, A5, A6, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class Node<T> {\n\n\treadonly data: T;\n\treadonly incoming = new Map<string, Node<T>>();\n\treadonly outgoing = new Map<string, Node<T>>();\n\n\tconstructor(data: T) {\n\t\tthis.data = data;\n\t}\n}\n\nexport class Graph<T> {\n\n\tprivate readonly _nodes = new Map<string, Node<T>>();\n\n\tconstructor(private readonly _hashFn: (element: T) => string) {\n\t\t// empty\n\t}\n\n\troots(): Node<T>[] {\n\t\tconst ret: Node<T>[] = [];\n\t\tfor (let node of this._nodes.values()) {\n\t\t\tif (node.outgoing.size === 0) {\n\t\t\t\tret.push(node);\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tinsertEdge(from: T, to: T): void {\n\t\tconst fromNode = this.lookupOrInsertNode(from);\n\t\tconst toNode = this.lookupOrInsertNode(to);\n\n\t\tfromNode.outgoing.set(this._hashFn(to), toNode);\n\t\ttoNode.incoming.set(this._hashFn(from), fromNode);\n\t}\n\n\tremoveNode(data: T): void {\n\t\tconst key = this._hashFn(data);\n\t\tthis._nodes.delete(key);\n\t\tfor (let node of this._nodes.values()) {\n\t\t\tnode.outgoing.delete(key);\n\t\t\tnode.incoming.delete(key);\n\t\t}\n\t}\n\n\tlookupOrInsertNode(data: T): Node<T> {\n\t\tconst key = this._hashFn(data);\n\t\tlet node = this._nodes.get(key);\n\n\t\tif (!node) {\n\t\t\tnode = new Node(data);\n\t\t\tthis._nodes.set(key, node);\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tlookup(data: T): Node<T> | undefined {\n\t\treturn this._nodes.get(this._hashFn(data));\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._nodes.size === 0;\n\t}\n\n\ttoString(): string {\n\t\tlet data: string[] = [];\n\t\tfor (let [key, value] of this._nodes) {\n\t\t\tdata.push(`${key}, (incoming)[${[...value.incoming.keys()].join(', ')}], (outgoing)[${[...value.outgoing.keys()].join(',')}]`);\n\n\t\t}\n\t\treturn data.join('\\n');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceCollection } from './serviceCollection';\nimport * as descriptors from './descriptors';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>, index: number, optional: boolean }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature0<T> {\n\tnew(...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n\tnew <Services extends BrandedService[]>(first: A1, ...services: Services): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n\tnew(first: A1, second: A2, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n\tnew(first: A1, second: A2, third: A3, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: BrandedService[]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n\tget<T>(id: ServiceIdentifier<T>, isOptional: typeof optional): T | undefined;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\ntype GetLeadingNonServiceArgs<Args> =\n\tArgs extends [...BrandedService[]] ? []\n\t: Args extends [infer A1, ...BrandedService[]] ? [A1]\n\t: Args extends [infer A1, infer A2, ...BrandedService[]] ? [A1, A2]\n\t: Args extends [infer A1, infer A2, infer A3, ...BrandedService[]] ? [A1, A2, A3]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, ...BrandedService[]] ? [A1, A2, A3, A4]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...BrandedService[]] ? [A1, A2, A3, A4, A5]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n\t: never;\n\nexport interface IInstantiationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\n\t/**\n\t *\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherts all current services\n\t * and adds/overwrites the given services\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type T\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number, optional: boolean): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index, optional });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index, optional }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index, false);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\n/**\n * Mark a service dependency as optional.\n */\nexport function optional<T>(serviceIdentifier: ServiceIdentifier<T>) {\n\n\treturn function (target: Function, key: string, index: number) {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@optional-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(serviceIdentifier, target, index, true);\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IDownloadService = createDecorator<IDownloadService>('downloadService');\n\nexport interface IDownloadService {\n\n\treadonly _serviceBrand: undefined;\n\n\tdownload(uri: URI, to: URI, cancellationToken?: CancellationToken): Promise<void>;\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\n\nexport const IEnvironmentService = createDecorator<IEnvironmentService>('environmentService');\n\nexport interface IDebugParams {\n\tport: number | null;\n\tbreak: boolean;\n}\n\nexport interface IExtensionHostDebugParams extends IDebugParams {\n\tdebugId?: string;\n}\n\nexport const BACKUPS = 'Backups';\n\nexport interface IEnvironmentService {\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t// NOTE: DO NOT ADD ANY OTHER PROPERTY INTO THE COLLECTION HERE\n\t// UNLESS THIS PROPERTY IS SUPPORTED BOTH IN WEB AND DESKTOP!!!!\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\treadonly _serviceBrand: undefined;\n\n\t// --- user roaming data\n\tuserRoamingDataHome: URI;\n\tsettingsResource: URI;\n\tkeybindingsResource: URI;\n\tkeyboardLayoutResource: URI;\n\targvResource: URI;\n\tsnippetsHome: URI;\n\n\t// --- data paths\n\tbackupHome: URI;\n\tuntitledWorkspacesHome: URI;\n\n\tglobalStorageHome: URI;\n\tworkspaceStorageHome: URI;\n\n\t// --- settings sync\n\tuserDataSyncLogResource: URI;\n\tuserDataSyncHome: URI;\n\tsync: 'on' | 'off' | undefined;\n\tenableSyncByDefault: boolean;\n\n\t// --- extension development\n\tdebugExtensionHost: IExtensionHostDebugParams;\n\tisExtensionDevelopment: boolean;\n\tdisableExtensions: boolean | string[];\n\textensionDevelopmentLocationURI?: URI[];\n\textensionTestsLocationURI?: URI;\n\textensionEnabledProposedApi?: string[];\n\tlogExtensionHostCommunication?: boolean;\n\n\t// --- logging\n\tlogsPath: string;\n\tlogLevel?: string;\n\tverbose: boolean;\n\tisBuilt: boolean;\n\n\t// --- misc\n\tdisableTelemetry: boolean;\n\tserviceMachineIdResource: URI;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t// NOTE: DO NOT ADD ANY OTHER PROPERTY INTO THE COLLECTION HERE\n\t// UNLESS THIS PROPERTY IS SUPPORTED BOTH IN WEB AND DESKTOP!!!!\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { join, dirname, basename } from 'vs/base/common/path';\nimport { readdir, rimraf } from 'vs/base/node/pfs';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\n\nexport class LogsDataCleaner extends Disposable {\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService\n\t) {\n\t\tsuper();\n\n\t\tthis.cleanUpOldLogsSoon();\n\t}\n\n\tprivate cleanUpOldLogsSoon(): void {\n\t\tlet handle: NodeJS.Timeout | undefined = setTimeout(() => {\n\t\t\thandle = undefined;\n\n\t\t\tconst currentLog = basename(this.environmentService.logsPath);\n\t\t\tconst logsRoot = dirname(this.environmentService.logsPath);\n\n\t\t\treaddir(logsRoot).then(children => {\n\t\t\t\tconst allSessions = children.filter(name => /^\\d{8}T\\d{6}$/.test(name));\n\t\t\t\tconst oldSessions = allSessions.sort().filter((d, i) => d !== currentLog);\n\t\t\t\tconst toDelete = oldSessions.slice(0, Math.max(0, oldSessions.length - 9));\n\n\t\t\t\treturn Promise.all(toDelete.map(name => rimraf(join(logsRoot, name))));\n\t\t\t}).then(null, onUnexpectedError);\n\t\t}, 10 * 1000);\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tif (handle) {\n\t\t\t\tclearTimeout(handle);\n\t\t\t\thandle = undefined;\n\t\t\t}\n\t\t}));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Event } from 'vs/base/common/event';\nimport { IPager } from 'vs/base/common/paging';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IExtensionManifest, IExtension, ExtensionType } from 'vs/platform/extensions/common/extensions';\n\nexport const EXTENSION_IDENTIFIER_PATTERN = '^([a-z0-9A-Z][a-z0-9-A-Z]*)\\\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$';\nexport const EXTENSION_IDENTIFIER_REGEX = new RegExp(EXTENSION_IDENTIFIER_PATTERN);\n\nexport interface IGalleryExtensionProperties {\n\tdependencies?: string[];\n\textensionPack?: string[];\n\tengine?: string;\n\tlocalizedLanguages?: string[];\n}\n\nexport interface IGalleryExtensionAsset {\n\turi: string;\n\tfallbackUri: string;\n}\n\nexport interface IGalleryExtensionAssets {\n\tmanifest: IGalleryExtensionAsset | null;\n\treadme: IGalleryExtensionAsset | null;\n\tchangelog: IGalleryExtensionAsset | null;\n\tlicense: IGalleryExtensionAsset | null;\n\trepository: IGalleryExtensionAsset | null;\n\tdownload: IGalleryExtensionAsset;\n\ticon: IGalleryExtensionAsset;\n\tcoreTranslations: [string, IGalleryExtensionAsset][];\n}\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\n/* __GDPR__FRAGMENT__\n\t\"ExtensionIdentifier\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"uuid\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n */\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport interface IGalleryExtensionIdentifier extends IExtensionIdentifier {\n\tuuid: string;\n}\n\nexport interface IGalleryExtensionVersion {\n\tversion: string;\n\tdate: string;\n}\n\nexport interface IGalleryExtension {\n\tname: string;\n\tidentifier: IGalleryExtensionIdentifier;\n\tversion: string;\n\tdate: string;\n\tdisplayName: string;\n\tpublisherId: string;\n\tpublisher: string;\n\tpublisherDisplayName: string;\n\tdescription: string;\n\tinstallCount: number;\n\trating: number;\n\tratingCount: number;\n\tassetUri: URI;\n\tassetTypes: string[];\n\tassets: IGalleryExtensionAssets;\n\tproperties: IGalleryExtensionProperties;\n\ttelemetryData: any;\n\tpreview: boolean;\n}\n\nexport interface IGalleryMetadata {\n\tid: string;\n\tpublisherId: string;\n\tpublisherDisplayName: string;\n}\n\nexport interface ILocalExtension extends IExtension {\n\tisMachineScoped: boolean;\n\tpublisherId: string | null;\n\tpublisherDisplayName: string | null;\n}\n\nexport const enum SortBy {\n\tNoneOrRelevance = 0,\n\tLastUpdatedDate = 1,\n\tTitle = 2,\n\tPublisherName = 3,\n\tInstallCount = 4,\n\tPublishedDate = 5,\n\tAverageRating = 6,\n\tWeightedRating = 12\n}\n\nexport const enum SortOrder {\n\tDefault = 0,\n\tAscending = 1,\n\tDescending = 2\n}\n\nexport interface IQueryOptions {\n\ttext?: string;\n\tids?: string[];\n\tnames?: string[];\n\tpageSize?: number;\n\tsortBy?: SortBy;\n\tsortOrder?: SortOrder;\n\tsource?: string;\n}\n\nexport const enum StatisticType {\n\tUninstall = 'uninstall'\n}\n\nexport interface IReportedExtension {\n\tid: IExtensionIdentifier;\n\tmalicious: boolean;\n}\n\nexport const enum InstallOperation {\n\tNone = 0,\n\tInstall,\n\tUpdate\n}\n\nexport interface ITranslation {\n\tcontents: { [key: string]: {} };\n}\n\nexport const IExtensionGalleryService = createDecorator<IExtensionGalleryService>('extensionGalleryService');\nexport interface IExtensionGalleryService {\n\treadonly _serviceBrand: undefined;\n\tisEnabled(): boolean;\n\tquery(token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tquery(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tdownload(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<void>;\n\treportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void>;\n\tgetReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null>;\n\tgetChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null>;\n\tgetAllVersions(extension: IGalleryExtension, compatible: boolean): Promise<IGalleryExtensionVersion[]>;\n\tgetExtensionsReport(): Promise<IReportedExtension[]>;\n\tgetCompatibleExtension(extension: IGalleryExtension): Promise<IGalleryExtension | null>;\n\tgetCompatibleExtension(id: IExtensionIdentifier, version?: string): Promise<IGalleryExtension | null>;\n}\n\nexport interface InstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\tzipPath?: string;\n\tgallery?: IGalleryExtension;\n}\n\nexport interface DidInstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\toperation: InstallOperation;\n\tzipPath?: string;\n\tgallery?: IGalleryExtension;\n\tlocal?: ILocalExtension;\n\terror?: string;\n}\n\nexport interface DidUninstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\terror?: string;\n}\n\nexport const INSTALL_ERROR_NOT_SUPPORTED = 'notsupported';\nexport const INSTALL_ERROR_MALICIOUS = 'malicious';\nexport const INSTALL_ERROR_INCOMPATIBLE = 'incompatible';\n\nexport class ExtensionManagementError extends Error {\n\tconstructor(message: string, readonly code: string) {\n\t\tsuper(message);\n\t}\n}\n\nexport const IExtensionManagementService = createDecorator<IExtensionManagementService>('extensionManagementService');\nexport interface IExtensionManagementService {\n\treadonly _serviceBrand: undefined;\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtension: Event<DidInstallExtensionEvent>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tzip(extension: ILocalExtension): Promise<URI>;\n\tunzip(zipLocation: URI): Promise<IExtensionIdentifier>;\n\tgetManifest(vsix: URI): Promise<IExtensionManifest>;\n\tinstall(vsix: URI, isMachineScoped?: boolean): Promise<ILocalExtension>;\n\tinstallFromGallery(extension: IGalleryExtension, isMachineScoped?: boolean): Promise<ILocalExtension>;\n\tuninstall(extension: ILocalExtension, force?: boolean): Promise<void>;\n\treinstallFromGallery(extension: ILocalExtension): Promise<void>;\n\tgetInstalled(type?: ExtensionType): Promise<ILocalExtension[]>;\n\tgetExtensionsReport(): Promise<IReportedExtension[]>;\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension>;\n}\n\nexport const DISABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/disabled';\nexport const ENABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/enabled';\nexport const IGlobalExtensionEnablementService = createDecorator<IGlobalExtensionEnablementService>('IGlobalExtensionEnablementService');\n\nexport interface IGlobalExtensionEnablementService {\n\treadonly _serviceBrand: undefined;\n\treadonly onDidChangeEnablement: Event<{ readonly extensions: IExtensionIdentifier[], readonly source?: string }>;\n\n\tgetDisabledExtensions(): IExtensionIdentifier[];\n\tenableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\tdisableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\n}\n\nexport type IConfigBasedExtensionTip = {\n\treadonly extensionId: string,\n\treadonly extensionName: string,\n\treadonly isExtensionPack: boolean,\n\treadonly configName: string,\n\treadonly important: boolean,\n};\n\nexport type IExecutableBasedExtensionTip = {\n\treadonly extensionId: string,\n\treadonly extensionName: string,\n\treadonly isExtensionPack: boolean,\n\treadonly exeFriendlyName: string,\n\treadonly windowsPath?: string,\n};\n\nexport type IWorkspaceTips = { readonly remoteSet: string[]; readonly recommendations: string[]; };\n\nexport const IExtensionTipsService = createDecorator<IExtensionTipsService>('IExtensionTipsService');\nexport interface IExtensionTipsService {\n\treadonly _serviceBrand: undefined;\n\n\tgetConfigBasedTips(folder: URI): Promise<IConfigBasedExtensionTip[]>;\n\tgetImportantExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]>;\n\tgetOtherExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]>;\n\tgetAllWorkspacesTips(): Promise<IWorkspaceTips[]>;\n}\n\n\nexport const DefaultIconPath = require.toUrl('./media/defaultIcon.png');\nexport const ExtensionsLabel = localize('extensions', \"Extensions\");\nexport const ExtensionsChannelId = 'extensions';\nexport const PreferencesLabel = localize('preferences', \"Preferences\");\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport { ILocalization } from 'vs/platform/localizations/common/localizations';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const MANIFEST_CACHE_FOLDER = 'CachedExtensions';\nexport const USER_MANIFEST_CACHE_FILE = 'user';\nexport const BUILTIN_MANIFEST_CACHE_FILE = 'builtin';\n\nexport interface ICommand {\n\tcommand: string;\n\ttitle: string;\n\tcategory?: string;\n}\n\nexport interface IConfigurationProperty {\n\tdescription: string;\n\ttype: string | string[];\n\tdefault?: any;\n}\n\nexport interface IConfiguration {\n\tproperties: { [key: string]: IConfigurationProperty; };\n}\n\nexport interface IDebugger {\n\tlabel?: string;\n\ttype: string;\n\truntime?: string;\n}\n\nexport interface IGrammar {\n\tlanguage: string;\n}\n\nexport interface IJSONValidation {\n\tfileMatch: string | string[];\n\turl: string;\n}\n\nexport interface IKeyBinding {\n\tcommand: string;\n\tkey: string;\n\twhen?: string;\n\tmac?: string;\n\tlinux?: string;\n\twin?: string;\n}\n\nexport interface ILanguage {\n\tid: string;\n\textensions: string[];\n\taliases: string[];\n}\n\nexport interface IMenu {\n\tcommand: string;\n\talt?: string;\n\twhen?: string;\n\tgroup?: string;\n}\n\nexport interface ISnippet {\n\tlanguage: string;\n}\n\nexport interface ITheme {\n\tlabel: string;\n}\n\nexport interface IViewContainer {\n\tid: string;\n\ttitle: string;\n}\n\nexport interface IView {\n\tid: string;\n\tname: string;\n}\n\nexport interface IColor {\n\tid: string;\n\tdescription: string;\n\tdefaults: { light: string, dark: string, highContrast: string };\n}\n\nexport interface IWebviewEditor {\n\treadonly viewType: string;\n\treadonly priority: string;\n\treadonly selector: readonly {\n\t\treadonly filenamePattern?: string;\n\t}[];\n}\n\nexport interface ICodeActionContributionAction {\n\treadonly kind: string;\n\treadonly title: string;\n\treadonly description?: string;\n}\n\nexport interface ICodeActionContribution {\n\treadonly languages: readonly string[];\n\treadonly actions: readonly ICodeActionContributionAction[];\n}\n\nexport interface IExtensionContributions {\n\tcommands?: ICommand[];\n\tconfiguration?: IConfiguration | IConfiguration[];\n\tdebuggers?: IDebugger[];\n\tgrammars?: IGrammar[];\n\tjsonValidation?: IJSONValidation[];\n\tkeybindings?: IKeyBinding[];\n\tlanguages?: ILanguage[];\n\tmenus?: { [context: string]: IMenu[] };\n\tsnippets?: ISnippet[];\n\tthemes?: ITheme[];\n\ticonThemes?: ITheme[];\n\tviewsContainers?: { [location: string]: IViewContainer[] };\n\tviews?: { [location: string]: IView[] };\n\tcolors?: IColor[];\n\tlocalizations?: ILocalization[];\n\treadonly customEditors?: readonly IWebviewEditor[];\n\treadonly codeActions?: readonly ICodeActionContribution[];\n}\n\nexport type ExtensionKind = 'ui' | 'workspace' | 'web';\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport const EXTENSION_CATEGORIES = [\n\t'Azure',\n\t'Data Science',\n\t'Debuggers',\n\t'Extension Packs',\n\t'Formatters',\n\t'Keymaps',\n\t'Language Packs',\n\t'Linters',\n\t'Machine Learning',\n\t'Notebooks',\n\t'Programming Languages',\n\t'SCM Providers',\n\t'Snippets',\n\t'Themes',\n\t'Testing',\n\t'Visualization',\n\t'Other',\n];\n\nexport interface IExtensionManifest {\n\treadonly name: string;\n\treadonly displayName?: string;\n\treadonly publisher: string;\n\treadonly version: string;\n\treadonly engines: { vscode: string };\n\treadonly description?: string;\n\treadonly main?: string;\n\treadonly browser?: string;\n\treadonly icon?: string;\n\treadonly categories?: string[];\n\treadonly keywords?: string[];\n\treadonly activationEvents?: string[];\n\treadonly extensionDependencies?: string[];\n\treadonly extensionPack?: string[];\n\treadonly extensionKind?: ExtensionKind | ExtensionKind[];\n\treadonly contributes?: IExtensionContributions;\n\treadonly repository?: { url: string; };\n\treadonly bugs?: { url: string; };\n\treadonly enableProposedApi?: boolean;\n\treadonly api?: string;\n\treadonly scripts?: { [key: string]: string; };\n}\n\nexport const enum ExtensionType {\n\tSystem,\n\tUser\n}\n\nexport interface IExtension {\n\treadonly type: ExtensionType;\n\treadonly identifier: IExtensionIdentifier;\n\treadonly manifest: IExtensionManifest;\n\treadonly location: URI;\n\treadonly readmeUrl?: URI;\n\treadonly changelogUrl?: URI;\n}\n\n/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport class ExtensionIdentifier {\n\tpublic readonly value: string;\n\tprivate readonly _lower: string;\n\n\tconstructor(value: string) {\n\t\tthis.value = value;\n\t\tthis._lower = value.toLowerCase();\n\t}\n\n\tpublic static equals(a: ExtensionIdentifier | string | null | undefined, b: ExtensionIdentifier | string | null | undefined) {\n\t\tif (typeof a === 'undefined' || a === null) {\n\t\t\treturn (typeof b === 'undefined' || b === null);\n\t\t}\n\t\tif (typeof b === 'undefined' || b === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof a === 'string' || typeof b === 'string') {\n\t\t\t// At least one of the arguments is an extension id in string form,\n\t\t\t// so we have to use the string comparison which ignores case.\n\t\t\tlet aValue = (typeof a === 'string' ? a : a.value);\n\t\t\tlet bValue = (typeof b === 'string' ? b : b.value);\n\t\t\treturn strings.equalsIgnoreCase(aValue, bValue);\n\t\t}\n\n\t\t// Now we know both arguments are ExtensionIdentifier\n\t\treturn (a._lower === b._lower);\n\t}\n\n\t/**\n\t * Gives the value by which to index (for equality).\n\t */\n\tpublic static toKey(id: ExtensionIdentifier | string): string {\n\t\tif (typeof id === 'string') {\n\t\t\treturn id.toLowerCase();\n\t\t}\n\t\treturn id._lower;\n\t}\n}\n\nexport interface IExtensionDescription extends IExtensionManifest {\n\treadonly identifier: ExtensionIdentifier;\n\treadonly uuid?: string;\n\treadonly isBuiltin: boolean;\n\treadonly isUnderDevelopment: boolean;\n\treadonly extensionLocation: URI;\n\tenableProposedApi?: boolean;\n}\n\nexport function isLanguagePackExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.localizations ? manifest.contributes.localizations.length > 0 : false;\n}\n\nexport interface IScannedExtension {\n\treadonly identifier: IExtensionIdentifier;\n\treadonly location: URI;\n\treadonly type: ExtensionType;\n\treadonly packageJSON: IExtensionManifest;\n\treadonly packageNLS?: any;\n\treadonly packageNLSUrl?: URI;\n\treadonly readmeUrl?: URI;\n\treadonly changelogUrl?: URI;\n}\n\nexport interface ITranslatedScannedExtension {\n\treadonly identifier: IExtensionIdentifier;\n\treadonly location: URI;\n\treadonly type: ExtensionType;\n\treadonly packageJSON: IExtensionManifest;\n\treadonly readmeUrl?: URI;\n\treadonly changelogUrl?: URI;\n}\n\nexport const IBuiltinExtensionsScannerService = createDecorator<IBuiltinExtensionsScannerService>('IBuiltinExtensionsScannerService');\nexport interface IBuiltinExtensionsScannerService {\n\treadonly _serviceBrand: undefined;\n\tscanBuiltinExtensions(): Promise<IScannedExtension[]>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILocalExtension, IGalleryExtension, IExtensionIdentifier, IReportedExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { compareIgnoreCase } from 'vs/base/common/strings';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nexport function areSameExtensions(a: IExtensionIdentifier, b: IExtensionIdentifier): boolean {\n\tif (a.uuid && b.uuid) {\n\t\treturn a.uuid === b.uuid;\n\t}\n\tif (a.id === b.id) {\n\t\treturn true;\n\t}\n\treturn compareIgnoreCase(a.id, b.id) === 0;\n}\n\nexport class ExtensionIdentifierWithVersion {\n\tconstructor(\n\t\treadonly identifier: IExtensionIdentifier,\n\t\treadonly version: string\n\t) { }\n\n\tkey(): string {\n\t\treturn `${this.identifier.id}-${this.version}`;\n\t}\n\n\tequals(o: any): boolean {\n\t\tif (!(o instanceof ExtensionIdentifierWithVersion)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn areSameExtensions(this.identifier, o.identifier) && this.version === o.version;\n\t}\n}\n\nexport function adoptToGalleryExtensionId(id: string): string {\n\treturn id.toLocaleLowerCase();\n}\n\nexport function getGalleryExtensionId(publisher: string, name: string): string {\n\treturn `${publisher.toLocaleLowerCase()}.${name.toLocaleLowerCase()}`;\n}\n\nexport function groupByExtension<T>(extensions: T[], getExtensionIdentifier: (t: T) => IExtensionIdentifier): T[][] {\n\tconst byExtension: T[][] = [];\n\tconst findGroup = (extension: T) => {\n\t\tfor (const group of byExtension) {\n\t\t\tif (group.some(e => areSameExtensions(getExtensionIdentifier(e), getExtensionIdentifier(extension)))) {\n\t\t\t\treturn group;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tfor (const extension of extensions) {\n\t\tconst group = findGroup(extension);\n\t\tif (group) {\n\t\t\tgroup.push(extension);\n\t\t} else {\n\t\t\tbyExtension.push([extension]);\n\t\t}\n\t}\n\treturn byExtension;\n}\n\nexport function getLocalExtensionTelemetryData(extension: ILocalExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.manifest.name,\n\t\tgalleryId: null,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.manifest.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tdependencies: extension.manifest.extensionDependencies && extension.manifest.extensionDependencies.length > 0\n\t};\n}\n\n\n/* __GDPR__FRAGMENT__\n\t\"GalleryExtensionTelemetryData\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"name\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"galleryId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherDisplayName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"dependencies\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"${include}\": [\n\t\t\t\"${GalleryExtensionTelemetryData2}\"\n\t\t]\n\t}\n*/\nexport function getGalleryExtensionTelemetryData(extension: IGalleryExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.name,\n\t\tgalleryId: extension.identifier.uuid,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tdependencies: !!(extension.properties.dependencies && extension.properties.dependencies.length > 0),\n\t\t...extension.telemetryData\n\t};\n}\n\nexport const BetterMergeId = new ExtensionIdentifier('pprice.better-merge');\n\nexport function getMaliciousExtensionsSet(report: IReportedExtension[]): Set<string> {\n\tconst result = new Set<string>();\n\n\tfor (const extension of report) {\n\t\tif (extension.malicious) {\n\t\t\tresult.add(extension.id.id);\n\t\t}\n\t}\n\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { join } from 'vs/base/common/path';\nimport { INativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { IExtensionManagementService, DidInstallExtensionEvent, DidUninstallExtensionEvent } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE } from 'vs/platform/extensions/common/extensions';\nimport * as pfs from 'vs/base/node/pfs';\n\nexport class ExtensionsManifestCache extends Disposable {\n\n\tprivate extensionsManifestCache = join(this.environmentService.userDataPath, MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE);\n\n\tconstructor(\n\t\tprivate readonly environmentService: INativeEnvironmentService,\n\t\textensionsManagementService: IExtensionManagementService\n\t) {\n\t\tsuper();\n\t\tthis._register(extensionsManagementService.onDidInstallExtension(e => this.onDidInstallExtension(e)));\n\t\tthis._register(extensionsManagementService.onDidUninstallExtension(e => this.onDidUnInstallExtension(e)));\n\t}\n\n\tprivate onDidInstallExtension(e: DidInstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tprivate onDidUnInstallExtension(e: DidUninstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tinvalidate(): void {\n\t\tpfs.rimraf(this.extensionsManifestCache, pfs.RimRafMode.MOVE).then(() => { }, () => { });\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { sep } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport * as glob from 'vs/base/common/glob';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IExtUri } from 'vs/base/common/resources';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { ReadableStreamEvents } from 'vs/base/common/stream';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IFileService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * An event that is fired when a file system provider is added or removed\n\t */\n\treadonly onDidChangeFileSystemProviderRegistrations: Event<IFileSystemProviderRegistrationEvent>;\n\n\t/**\n\t * An event that is fired when a registered file system provider changes it's capabilities.\n\t */\n\treadonly onDidChangeFileSystemProviderCapabilities: Event<IFileSystemProviderCapabilitiesChangeEvent>;\n\n\t/**\n\t * An event that is fired when a file system provider is about to be activated. Listeners\n\t * can join this event with a long running promise to help in the activation process.\n\t */\n\treadonly onWillActivateFileSystemProvider: Event<IFileSystemProviderActivationEvent>;\n\n\t/**\n\t * Registers a file system provider for a certain scheme.\n\t */\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable;\n\n\t/**\n\t * Tries to activate a provider with the given scheme.\n\t */\n\tactivateProvider(scheme: string): Promise<void>;\n\n\t/**\n\t * Checks if this file service can handle the given resource.\n\t */\n\tcanHandleResource(resource: URI): boolean;\n\n\t/**\n\t * Checks if the provider for the provided resource has the provided file system capability.\n\t */\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean;\n\n\t/**\n\t * Allows to listen for file changes. The event will fire for every file within the opened workspace\n\t * (if any) as well as all files that have been watched explicitly using the #watch() API.\n\t */\n\treadonly onDidFilesChange: Event<FileChangesEvent>;\n\n\t/**\n\t * An event that is fired upon successful completion of a certain file operation.\n\t */\n\treadonly onDidRunOperation: Event<FileOperationEvent>;\n\n\t/**\n\t * Resolve the properties of a file/folder identified by the resource.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t *\n\t * If the optional parameter \"resolveMetadata\" is specified in options,\n\t * the stat will contain metadata information such as size, mtime and etag.\n\t */\n\tresolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Same as resolve() but supports resolving multiple resources in parallel.\n\t * If one of the resolve targets fails to resolve returns a fake IFileStat instead of making the whole call fail.\n\t */\n\tresolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResult[]>;\n\tresolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\n\t/**\n\t * Finds out if a file/folder identified by the resource exists.\n\t */\n\texists(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Read the contents of the provided resource unbuffered.\n\t */\n\treadFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent>;\n\n\t/**\n\t * Read the contents of the provided resource buffered as stream.\n\t */\n\treadFileStream(resource: URI, options?: IReadFileOptions): Promise<IFileStreamContent>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t */\n\twriteFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Moves the file/folder to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tmove(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a move operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanMove(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Copies the file/folder to a path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tcopy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a copy operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCopy(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Find out if a file create operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCreateFile(resource: URI, options?: ICreateFileOptions): Promise<Error | true>;\n\n\t/**\n\t * Creates a new file with the given path and optional contents. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t */\n\tcreateFile(resource: URI, bufferOrReadableOrStream?: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: ICreateFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t */\n\tcreateFolder(resource: URI): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Deletes the provided file. The optional useTrash parameter allows to\n\t * move the file to trash. The optional recursive parameter allows to delete\n\t * non-empty folders recursively.\n\t */\n\tdel(resource: URI, options?: { useTrash?: boolean, recursive?: boolean }): Promise<void>;\n\n\t/**\n\t * Find out if a delete operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanDelete(resource: URI, options?: { useTrash?: boolean, recursive?: boolean }): Promise<Error | true>;\n\n\t/**\n\t * Allows to start a watcher that reports file/folder change events on the provided resource.\n\t *\n\t * Note: watching a folder does not report events recursively for child folders yet.\n\t */\n\twatch(resource: URI): IDisposable;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\nexport interface FileOverwriteOptions {\n\toverwrite: boolean;\n}\n\nexport interface FileReadStreamOptions {\n\n\t/**\n\t * Is an integer specifying where to begin reading from in the file. If position is undefined,\n\t * data will be read from the current file position.\n\t */\n\treadonly position?: number;\n\n\t/**\n\t * Is an integer specifying how many bytes to read from the file. By default, all bytes\n\t * will be read.\n\t */\n\treadonly length?: number;\n\n\t/**\n\t * If provided, the size of the file will be checked against the limits.\n\t */\n\tlimits?: {\n\t\treadonly size?: number;\n\t\treadonly memory?: number;\n\t};\n}\n\nexport interface FileWriteOptions {\n\toverwrite: boolean;\n\tcreate: boolean;\n}\n\nexport interface FileOpenOptions {\n\tcreate: boolean;\n}\n\nexport interface FileDeleteOptions {\n\trecursive: boolean;\n\tuseTrash: boolean;\n}\n\nexport enum FileType {\n\tUnknown = 0,\n\tFile = 1,\n\tDirectory = 2,\n\tSymbolicLink = 64\n}\n\nexport interface IStat {\n\ttype: FileType;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t */\n\tmtime: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t */\n\tctime: number;\n\n\tsize: number;\n}\n\nexport interface IWatchOptions {\n\trecursive: boolean;\n\texcludes: string[];\n}\n\nexport const enum FileSystemProviderCapabilities {\n\tFileReadWrite = 1 << 1,\n\tFileOpenReadWriteClose = 1 << 2,\n\tFileReadStream = 1 << 4,\n\n\tFileFolderCopy = 1 << 3,\n\n\tPathCaseSensitive = 1 << 10,\n\tReadonly = 1 << 11,\n\n\tTrash = 1 << 12\n}\n\nexport interface IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\treadonly onDidChangeCapabilities: Event<void>;\n\n\treadonly onDidErrorOccur?: Event<string>; // TODO@ben remove once file watchers are solid\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]>;\n\twatch(resource: URI, opts: IWatchOptions): IDisposable;\n\n\tstat(resource: URI): Promise<IStat>;\n\tmkdir(resource: URI): Promise<void>;\n\treaddir(resource: URI): Promise<[string, FileType][]>;\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void>;\n\n\trename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\tcopy?(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\n\treadFile?(resource: URI): Promise<Uint8Array>;\n\twriteFile?(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n\n\treadFileStream?(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n\n\topen?(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose?(fd: number): Promise<void>;\n\tread?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport interface IFileSystemProviderWithFileReadWriteCapability extends IFileSystemProvider {\n\treadFile(resource: URI): Promise<Uint8Array>;\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n}\n\nexport function hasReadWriteCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadWriteCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n}\n\nexport interface IFileSystemProviderWithFileFolderCopyCapability extends IFileSystemProvider {\n\tcopy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n}\n\nexport function hasFileFolderCopyCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileFolderCopyCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n}\n\nexport interface IFileSystemProviderWithOpenReadWriteCloseCapability extends IFileSystemProvider {\n\topen(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose(fd: number): Promise<void>;\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport function hasOpenReadWriteCloseCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithOpenReadWriteCloseCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n}\n\nexport interface IFileSystemProviderWithFileReadStreamCapability extends IFileSystemProvider {\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n}\n\nexport function hasFileReadStreamCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadStreamCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadStream);\n}\n\nexport enum FileSystemProviderErrorCode {\n\tFileExists = 'EntryExists',\n\tFileNotFound = 'EntryNotFound',\n\tFileNotADirectory = 'EntryNotADirectory',\n\tFileIsADirectory = 'EntryIsADirectory',\n\tFileExceedsMemoryLimit = 'EntryExceedsMemoryLimit',\n\tFileTooLarge = 'EntryTooLarge',\n\tNoPermissions = 'NoPermissions',\n\tUnavailable = 'Unavailable',\n\tUnknown = 'Unknown'\n}\n\nexport class FileSystemProviderError extends Error {\n\n\tconstructor(message: string, public readonly code: FileSystemProviderErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport function createFileSystemProviderError(error: Error | string, code: FileSystemProviderErrorCode): FileSystemProviderError {\n\tconst providerError = new FileSystemProviderError(error.toString(), code);\n\tmarkAsFileSystemProviderError(providerError, code);\n\n\treturn providerError;\n}\n\nexport function ensureFileSystemProviderError(error?: Error): Error {\n\tif (!error) {\n\t\treturn createFileSystemProviderError(localize('unknownError', \"Unknown Error\"), FileSystemProviderErrorCode.Unknown); // https://github.com/Microsoft/vscode/issues/72798\n\t}\n\n\treturn error;\n}\n\nexport function markAsFileSystemProviderError(error: Error, code: FileSystemProviderErrorCode): Error {\n\terror.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n\n\treturn error;\n}\n\nexport function toFileSystemProviderErrorCode(error: Error | undefined | null): FileSystemProviderErrorCode {\n\n\t// Guard against abuse\n\tif (!error) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\t// FileSystemProviderError comes with the code\n\tif (error instanceof FileSystemProviderError) {\n\t\treturn error.code;\n\t}\n\n\t// Any other error, check for name match by assuming that the error\n\t// went through the markAsFileSystemProviderError() method\n\tconst match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n\tif (!match) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\tswitch (match[1]) {\n\t\tcase FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit: return FileSystemProviderErrorCode.FileExceedsMemoryLimit;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge: return FileSystemProviderErrorCode.FileTooLarge;\n\t\tcase FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n\t\tcase FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n\t}\n\n\treturn FileSystemProviderErrorCode.Unknown;\n}\n\nexport function toFileOperationResult(error: Error): FileOperationResult {\n\n\t// FileSystemProviderError comes with the result already\n\tif (error instanceof FileOperationError) {\n\t\treturn error.fileOperationResult;\n\t}\n\n\t// Otherwise try to find from code\n\tswitch (toFileSystemProviderErrorCode(error)) {\n\t\tcase FileSystemProviderErrorCode.FileNotFound:\n\t\t\treturn FileOperationResult.FILE_NOT_FOUND;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory:\n\t\t\treturn FileOperationResult.FILE_IS_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory:\n\t\t\treturn FileOperationResult.FILE_NOT_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.NoPermissions:\n\t\t\treturn FileOperationResult.FILE_PERMISSION_DENIED;\n\t\tcase FileSystemProviderErrorCode.FileExists:\n\t\t\treturn FileOperationResult.FILE_MOVE_CONFLICT;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit:\n\t\t\treturn FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge:\n\t\t\treturn FileOperationResult.FILE_TOO_LARGE;\n\t\tdefault:\n\t\t\treturn FileOperationResult.FILE_OTHER_ERROR;\n\t}\n}\n\nexport interface IFileSystemProviderRegistrationEvent {\n\tadded: boolean;\n\tscheme: string;\n\tprovider?: IFileSystemProvider;\n}\n\nexport interface IFileSystemProviderCapabilitiesChangeEvent {\n\tprovider: IFileSystemProvider;\n\tscheme: string;\n}\n\nexport interface IFileSystemProviderActivationEvent {\n\tscheme: string;\n\tjoin(promise: Promise<void>): void;\n}\n\nexport const enum FileOperation {\n\tCREATE,\n\tDELETE,\n\tMOVE,\n\tCOPY\n}\n\nexport class FileOperationEvent {\n\n\tconstructor(resource: URI, operation: FileOperation.DELETE);\n\tconstructor(resource: URI, operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY, target: IFileStatWithMetadata);\n\tconstructor(public readonly resource: URI, public readonly operation: FileOperation, public readonly target?: IFileStatWithMetadata) { }\n\n\tisOperation(operation: FileOperation.DELETE): boolean;\n\tisOperation(operation: FileOperation.MOVE | FileOperation.COPY | FileOperation.CREATE): this is { readonly target: IFileStatWithMetadata };\n\tisOperation(operation: FileOperation): boolean {\n\t\treturn this.operation === operation;\n\t}\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n\tUPDATED = 0,\n\tADDED = 1,\n\tDELETED = 2\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occurred to the file.\n\t */\n\treadonly type: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\treadonly resource: URI;\n}\n\nexport class FileChangesEvent {\n\n\tconstructor(public readonly changes: readonly IFileChange[], private readonly extUri: IExtUri) { }\n\n\t/**\n\t * Returns true if this change event contains the provided file with the given change type (if provided). In case of\n\t * type DELETED, this method will also return true if a folder got deleted that is the parent of the\n\t * provided file path.\n\t */\n\tcontains(resource: URI, type?: FileChangeType): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst checkForChangeType = !isUndefinedOrNull(type);\n\n\t\treturn this.changes.some(change => {\n\t\t\tif (checkForChangeType && change.type !== type) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// For deleted also return true when deleted folder is parent of target path\n\t\t\tif (change.type === FileChangeType.DELETED) {\n\t\t\t\treturn this.extUri.isEqualOrParent(resource, change.resource);\n\t\t\t}\n\n\t\t\treturn this.extUri.isEqual(resource, change.resource);\n\t\t});\n\t}\n\n\t/**\n\t * Returns the changes that describe added files.\n\t */\n\tgetAdded(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tgotAdded(): boolean {\n\t\treturn this.hasType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns the changes that describe deleted files.\n\t */\n\tgetDeleted(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tgotDeleted(): boolean {\n\t\treturn this.hasType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns the changes that describe updated files.\n\t */\n\tgetUpdated(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.UPDATED);\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tgotUpdated(): boolean {\n\t\treturn this.hasType(FileChangeType.UPDATED);\n\t}\n\n\tprivate getOfType(type: FileChangeType): IFileChange[] {\n\t\treturn this.changes.filter(change => change.type === type);\n\t}\n\n\tprivate hasType(type: FileChangeType): boolean {\n\t\treturn this.changes.some(change => {\n\t\t\treturn change.type === type;\n\t\t});\n\t}\n\n\tfilter(filterFn: (change: IFileChange) => boolean): FileChangesEvent {\n\t\treturn new FileChangesEvent(this.changes.filter(change => filterFn(change)), this.extUri);\n\t}\n}\n\nexport function isParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n\tif (!path || !candidate || path === candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== sep) {\n\t\tcandidate += sep;\n\t}\n\n\tif (ignoreCase) {\n\t\treturn startsWithIgnoreCase(path, candidate);\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\ninterface IBaseStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\tresource: URI;\n\n\t/**\n\t * The name which is the last segment\n\t * of the {{path}}.\n\t */\n\tname: string;\n\n\t/**\n\t * The size of the file.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tsize?: number;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tmtime?: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tctime?: number;\n\n\t/**\n\t * A unique identifier thet represents the\n\t * current state of the file or directory.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tetag?: string;\n}\n\nexport interface IBaseStatWithMetadata extends IBaseStat {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n}\n\n/**\n * A file resource with meta information.\n */\nexport interface IFileStat extends IBaseStat {\n\n\t/**\n\t * The resource is a file.\n\t */\n\tisFile: boolean;\n\n\t/**\n\t * The resource is a directory.\n\t */\n\tisDirectory: boolean;\n\n\t/**\n\t * The resource is a symbolic link.\n\t */\n\tisSymbolicLink: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren?: IFileStat[];\n}\n\nexport interface IFileStatWithMetadata extends IFileStat, IBaseStatWithMetadata {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n\tchildren?: IFileStatWithMetadata[];\n}\n\nexport interface IResolveFileResult {\n\tstat?: IFileStat;\n\tsuccess: boolean;\n}\n\nexport interface IResolveFileResultWithMetadata extends IResolveFileResult {\n\tstat?: IFileStatWithMetadata;\n}\n\nexport interface IFileContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as buffer.\n\t */\n\tvalue: VSBuffer;\n}\n\nexport interface IFileStreamContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as stream.\n\t */\n\tvalue: VSBufferReadableStream;\n}\n\nexport interface IReadFileOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The optional etag parameter allows to return early from resolving the resource if\n\t * the contents on disk match the etag. This prevents accumulated reading of resources\n\t * that have been read already with the same etag.\n\t * It is the task of the caller to makes sure to handle this error case from the promise.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IWriteFileOptions {\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IResolveFileOptions {\n\n\t/**\n\t * Automatically continue resolving children of a directory until the provided resources\n\t * are found.\n\t */\n\treadonly resolveTo?: readonly URI[];\n\n\t/**\n\t * Automatically continue resolving children of a directory if the number of children is 1.\n\t */\n\treadonly resolveSingleChildDescendants?: boolean;\n\n\t/**\n\t * Will resolve mtime, ctime, size and etag of files if enabled. This can have a negative impact\n\t * on performance and thus should only be used when these values are required.\n\t */\n\treadonly resolveMetadata?: boolean;\n}\n\nexport interface IResolveMetadataFileOptions extends IResolveFileOptions {\n\treadonly resolveMetadata: true;\n}\n\nexport interface ICreateFileOptions {\n\n\t/**\n\t * Overwrite the file to create if it already exists on disk. Otherwise\n\t * an error will be thrown (FILE_MODIFIED_SINCE).\n\t */\n\treadonly overwrite?: boolean;\n}\n\nexport class FileOperationError extends Error {\n\tconstructor(message: string, public fileOperationResult: FileOperationResult, public options?: IReadFileOptions & IWriteFileOptions & ICreateFileOptions) {\n\t\tsuper(message);\n\t}\n\n\tstatic isFileOperationError(obj: unknown): obj is FileOperationError {\n\t\treturn obj instanceof Error && !isUndefinedOrNull((obj as FileOperationError).fileOperationResult);\n\t}\n}\n\nexport const enum FileOperationResult {\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_READ_ONLY,\n\tFILE_PERMISSION_DENIED,\n\tFILE_TOO_LARGE,\n\tFILE_INVALID_PATH,\n\tFILE_EXCEEDS_MEMORY_LIMIT,\n\tFILE_NOT_DIRECTORY,\n\tFILE_OTHER_ERROR\n}\n\nexport const AutoSaveConfiguration = {\n\tOFF: 'off',\n\tAFTER_DELAY: 'afterDelay',\n\tON_FOCUS_CHANGE: 'onFocusChange',\n\tON_WINDOW_CHANGE: 'onWindowChange'\n};\n\nexport const HotExitConfiguration = {\n\tOFF: 'off',\n\tON_EXIT: 'onExit',\n\tON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\n\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\n\nexport interface IFilesConfiguration {\n\tfiles: {\n\t\tassociations: { [filepattern: string]: string };\n\t\texclude: glob.IExpression;\n\t\twatcherExclude: { [filepattern: string]: boolean };\n\t\tencoding: string;\n\t\tautoGuessEncoding: boolean;\n\t\tdefaultLanguage: string;\n\t\ttrimTrailingWhitespace: boolean;\n\t\tautoSave: string;\n\t\tautoSaveDelay: number;\n\t\teol: string;\n\t\tenableTrash: boolean;\n\t\thotExit: string;\n\t\tsaveConflictResolution: 'askUser' | 'overwriteFileOnDisk';\n\t};\n}\n\nexport enum FileKind {\n\tFILE,\n\tFOLDER,\n\tROOT_FOLDER\n}\n\n/**\n * A hint to disable etag checking for reading/writing.\n */\nexport const ETAG_DISABLED = '';\n\nexport function etag(stat: { mtime: number, size: number }): string;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined {\n\tif (typeof stat.size !== 'number' || typeof stat.mtime !== 'number') {\n\t\treturn undefined;\n\t}\n\n\treturn stat.mtime.toString(29) + stat.size.toString(31);\n}\n\nexport function whenProviderRegistered(file: URI, fileService: IFileService): Promise<void> {\n\tif (fileService.canHandleResource(URI.from({ scheme: file.scheme }))) {\n\t\treturn Promise.resolve();\n\t}\n\treturn new Promise((c, e) => {\n\t\tconst disposable = fileService.onDidChangeFileSystemProviderRegistrations(e => {\n\t\t\tif (e.scheme === file.scheme && e.added) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tc();\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Desktop only: limits for memory sizes\n */\nexport const MIN_MAX_MEMORY_SIZE_MB = 2048;\nexport const FALLBACK_MAX_MEMORY_SIZE_MB = 4096;\n\n/**\n * Helper to format a raw byte size into a human readable label.\n */\nexport class BinarySize {\n\tstatic readonly KB = 1024;\n\tstatic readonly MB = BinarySize.KB * BinarySize.KB;\n\tstatic readonly GB = BinarySize.MB * BinarySize.KB;\n\tstatic readonly TB = BinarySize.GB * BinarySize.KB;\n\n\tstatic formatSize(size: number): string {\n\t\tif (size < BinarySize.KB) {\n\t\t\treturn localize('sizeB', \"{0}B\", size);\n\t\t}\n\n\t\tif (size < BinarySize.MB) {\n\t\t\treturn localize('sizeKB', \"{0}KB\", (size / BinarySize.KB).toFixed(2));\n\t\t}\n\n\t\tif (size < BinarySize.GB) {\n\t\t\treturn localize('sizeMB', \"{0}MB\", (size / BinarySize.MB).toFixed(2));\n\t\t}\n\n\t\tif (size < BinarySize.TB) {\n\t\t\treturn localize('sizeGB', \"{0}GB\", (size / BinarySize.GB).toFixed(2));\n\t\t}\n\n\t\treturn localize('sizeTB', \"{0}TB\", (size / BinarySize.TB).toFixed(2));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { URI } from 'vs/base/common/uri';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IFileSystemProviderWithOpenReadWriteCloseCapability, FileReadStreamOptions, createFileSystemProviderError, FileSystemProviderErrorCode, ensureFileSystemProviderError } from 'vs/platform/files/common/files';\nimport { canceled } from 'vs/base/common/errors';\nimport { IErrorTransformer, IDataTransformer, WriteableStream } from 'vs/base/common/stream';\n\nexport interface ICreateReadStreamOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The size of the buffer to use before sending to the stream.\n\t */\n\tbufferSize: number;\n\n\t/**\n\t * Allows to massage any possibly error that happens during reading.\n\t */\n\terrorTransformer?: IErrorTransformer;\n}\n\n/**\n * A helper to read a file from a provider with open/read/close capability into a stream.\n */\nexport async function readFileIntoStream<T>(\n\tprovider: IFileSystemProviderWithOpenReadWriteCloseCapability,\n\tresource: URI,\n\ttarget: WriteableStream<T>,\n\ttransformer: IDataTransformer<VSBuffer, T>,\n\toptions: ICreateReadStreamOptions,\n\ttoken: CancellationToken\n): Promise<void> {\n\tlet error: Error | undefined = undefined;\n\n\ttry {\n\t\tawait doReadFileIntoStream(provider, resource, target, transformer, options, token);\n\t} catch (err) {\n\t\terror = err;\n\t} finally {\n\t\tif (error && options.errorTransformer) {\n\t\t\terror = options.errorTransformer(error);\n\t\t}\n\n\t\ttarget.end(error);\n\t}\n}\n\nasync function doReadFileIntoStream<T>(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, target: WriteableStream<T>, transformer: IDataTransformer<VSBuffer, T>, options: ICreateReadStreamOptions, token: CancellationToken): Promise<void> {\n\n\t// Check for cancellation\n\tthrowIfCancelled(token);\n\n\t// open handle through provider\n\tconst handle = await provider.open(resource, { create: false });\n\n\t// Check for cancellation\n\tthrowIfCancelled(token);\n\n\ttry {\n\t\tlet totalBytesRead = 0;\n\t\tlet bytesRead = 0;\n\t\tlet allowedRemainingBytes = (options && typeof options.length === 'number') ? options.length : undefined;\n\n\t\tlet buffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\tlet posInFile = options && typeof options.position === 'number' ? options.position : 0;\n\t\tlet posInBuffer = 0;\n\t\tdo {\n\t\t\t// read from source (handle) at current position (pos) into buffer (buffer) at\n\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\tbytesRead = await provider.read(handle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\tposInFile += bytesRead;\n\t\t\tposInBuffer += bytesRead;\n\t\t\ttotalBytesRead += bytesRead;\n\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tallowedRemainingBytes -= bytesRead;\n\t\t\t}\n\n\t\t\t// when buffer full, create a new one and emit it through stream\n\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\tawait target.write(transformer(buffer));\n\n\t\t\t\tbuffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\t\t\tposInBuffer = 0;\n\t\t\t}\n\t\t} while (bytesRead > 0 && (typeof allowedRemainingBytes !== 'number' || allowedRemainingBytes > 0) && throwIfCancelled(token) && throwIfTooLarge(totalBytesRead, options));\n\n\t\t// wrap up with last buffer (also respect maxBytes if provided)\n\t\tif (posInBuffer > 0) {\n\t\t\tlet lastChunkLength = posInBuffer;\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tlastChunkLength = Math.min(posInBuffer, allowedRemainingBytes);\n\t\t\t}\n\n\t\t\ttarget.write(transformer(buffer.slice(0, lastChunkLength)));\n\t\t}\n\t} catch (error) {\n\t\tthrow ensureFileSystemProviderError(error);\n\t} finally {\n\t\tawait provider.close(handle);\n\t}\n}\n\nfunction throwIfCancelled(token: CancellationToken): boolean {\n\tif (token.isCancellationRequested) {\n\t\tthrow canceled();\n\t}\n\n\treturn true;\n}\n\nfunction throwIfTooLarge(totalBytesRead: number, options: ICreateReadStreamOptions): boolean {\n\n\t// Return early if file is too large to load and we have configured limits\n\tif (options?.limits) {\n\t\tif (typeof options.limits.memory === 'number' && totalBytesRead > options.limits.memory) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeForHeapError', \"To open a file of this size, you need to restart and allow it to use more memory\"), FileSystemProviderErrorCode.FileExceedsMemoryLimit);\n\t\t}\n\n\t\tif (typeof options.limits.size === 'number' && totalBytesRead > options.limits.size) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeError', \"File is too large to open\"), FileSystemProviderErrorCode.FileTooLarge);\n\t\t}\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI as uri } from 'vs/base/common/uri';\nimport { FileChangeType, isParent, IFileChange } from 'vs/platform/files/common/files';\nimport { isLinux } from 'vs/base/common/platform';\n\nexport interface IDiskFileChange {\n\ttype: FileChangeType;\n\tpath: string;\n}\n\nexport interface ILogMessage {\n\ttype: 'trace' | 'warn' | 'error';\n\tmessage: string;\n}\n\nexport function toFileChanges(changes: IDiskFileChange[]): IFileChange[] {\n\treturn changes.map(change => ({\n\t\ttype: change.type,\n\t\tresource: uri.file(change.path)\n\t}));\n}\n\nexport function normalizeFileChanges(changes: IDiskFileChange[]): IDiskFileChange[] {\n\n\t// Build deltas\n\tconst normalizer = new EventNormalizer();\n\tfor (const event of changes) {\n\t\tnormalizer.processEvent(event);\n\t}\n\n\treturn normalizer.normalize();\n}\n\nclass EventNormalizer {\n\tprivate normalized: IDiskFileChange[] = [];\n\tprivate mapPathToChange: Map<string, IDiskFileChange> = new Map();\n\n\tprocessEvent(event: IDiskFileChange): void {\n\t\tconst existingEvent = this.mapPathToChange.get(event.path);\n\n\t\t// Event path already exists\n\t\tif (existingEvent) {\n\t\t\tconst currentChangeType = existingEvent.type;\n\t\t\tconst newChangeType = event.type;\n\n\t\t\t// ignore CREATE followed by DELETE in one go\n\t\t\tif (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.DELETED) {\n\t\t\t\tthis.mapPathToChange.delete(event.path);\n\t\t\t\tthis.normalized.splice(this.normalized.indexOf(existingEvent), 1);\n\t\t\t}\n\n\t\t\t// flatten DELETE followed by CREATE into CHANGE\n\t\t\telse if (currentChangeType === FileChangeType.DELETED && newChangeType === FileChangeType.ADDED) {\n\t\t\t\texistingEvent.type = FileChangeType.UPDATED;\n\t\t\t}\n\n\t\t\t// Do nothing. Keep the created event\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.UPDATED) { }\n\n\t\t\t// Otherwise apply change type\n\t\t\telse {\n\t\t\t\texistingEvent.type = newChangeType;\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise store new\n\t\telse {\n\t\t\tthis.normalized.push(event);\n\t\t\tthis.mapPathToChange.set(event.path, event);\n\t\t}\n\t}\n\n\tnormalize(): IDiskFileChange[] {\n\t\tconst addedChangeEvents: IDiskFileChange[] = [];\n\t\tconst deletedPaths: string[] = [];\n\n\t\t// This algorithm will remove all DELETE events up to the root folder\n\t\t// that got deleted if any. This ensures that we are not producing\n\t\t// DELETE events for each file inside a folder that gets deleted.\n\t\t//\n\t\t// 1.) split ADD/CHANGE and DELETED events\n\t\t// 2.) sort short deleted paths to the top\n\t\t// 3.) for each DELETE, check if there is a deleted parent and ignore the event in that case\n\t\treturn this.normalized.filter(e => {\n\t\t\tif (e.type !== FileChangeType.DELETED) {\n\t\t\t\taddedChangeEvents.push(e);\n\n\t\t\t\treturn false; // remove ADD / CHANGE\n\t\t\t}\n\n\t\t\treturn true; // keep DELETE\n\t\t}).sort((e1, e2) => {\n\t\t\treturn e1.path.length - e2.path.length; // shortest path first\n\t\t}).filter(e => {\n\t\t\tif (deletedPaths.some(d => isParent(e.path, d, !isLinux /* ignorecase */))) {\n\t\t\t\treturn false; // DELETE is ignored if parent is deleted already\n\t\t\t}\n\n\t\t\t// otherwise mark as deleted\n\t\t\tdeletedPaths.push(e.path);\n\n\t\t\treturn true;\n\t\t}).concat(addedChangeEvents);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiskFileChange, normalizeFileChanges, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { statLink } from 'vs/base/node/pfs';\nimport { realpath } from 'vs/base/node/extpath';\nimport { watchFolder, watchFile, CHANGE_BUFFER_DELAY } from 'vs/base/node/watcher';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { join, basename } from 'vs/base/common/path';\n\nexport class FileWatcher extends Disposable {\n\tprivate isDisposed: boolean | undefined;\n\n\tprivate fileChangesDelayer: ThrottledDelayer<void> = this._register(new ThrottledDelayer<void>(CHANGE_BUFFER_DELAY * 2 /* sync on delay from underlying library */));\n\tprivate fileChangesBuffer: IDiskFileChange[] = [];\n\n\tconstructor(\n\t\tprivate path: string,\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tsuper();\n\n\t\tthis.startWatching();\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t}\n\n\tprivate async startWatching(): Promise<void> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await statLink(this.path);\n\n\t\t\tif (this.isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet pathToWatch = this.path;\n\t\t\tif (symbolicLink) {\n\t\t\t\ttry {\n\t\t\t\t\tpathToWatch = await realpath(pathToWatch);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.onError(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Watch Folder\n\t\t\tif (stat.isDirectory()) {\n\t\t\t\tthis._register(watchFolder(pathToWatch, (eventType, path) => {\n\t\t\t\t\tthis.onFileChange({\n\t\t\t\t\t\ttype: eventType === 'changed' ? FileChangeType.UPDATED : eventType === 'added' ? FileChangeType.ADDED : FileChangeType.DELETED,\n\t\t\t\t\t\tpath: join(this.path, basename(path)) // ensure path is identical with what was passed in\n\t\t\t\t\t});\n\t\t\t\t}, error => this.onError(error)));\n\t\t\t}\n\n\t\t\t// Watch File\n\t\t\telse {\n\t\t\t\tthis._register(watchFile(pathToWatch, eventType => {\n\t\t\t\t\tthis.onFileChange({\n\t\t\t\t\t\ttype: eventType === 'changed' ? FileChangeType.UPDATED : FileChangeType.DELETED,\n\t\t\t\t\t\tpath: this.path // ensure path is identical with what was passed in\n\t\t\t\t\t});\n\t\t\t\t}, error => this.onError(error)));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.onError(error);\n\t\t}\n\t}\n\n\tprivate onFileChange(event: IDiskFileChange): void {\n\n\t\t// Add to buffer\n\t\tthis.fileChangesBuffer.push(event);\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tthis.onVerbose(`${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t}\n\n\t\t// Handle emit through delayer to accommodate for bulk changes and thus reduce spam\n\t\tthis.fileChangesDelayer.trigger(() => {\n\t\t\tconst fileChanges = this.fileChangesBuffer;\n\t\t\tthis.fileChangesBuffer = [];\n\n\t\t\t// Event normalization\n\t\t\tconst normalizedFileChanges = normalizeFileChanges(fileChanges);\n\n\t\t\t// Logging\n\t\t\tif (this.verboseLogging) {\n\t\t\t\tnormalizedFileChanges.forEach(event => {\n\t\t\t\t\tthis.onVerbose(`>> normalized ${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Fire\n\t\t\tif (normalizedFileChanges.length > 0) {\n\t\t\t\tthis.onDidFilesChange(normalizedFileChanges);\n\t\t\t}\n\n\t\t\treturn Promise.resolve();\n\t\t});\n\t}\n\n\tprivate onError(error: string): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (node.js)] ${error}` });\n\t\t}\n\t}\n\n\tprivate onVerbose(message: string): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.onLogMessage({ type: 'trace', message: `[File Watcher (node.js)] ${message}` });\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\nimport { SyncDescriptor } from './descriptors';\n\nexport class ServiceCollection {\n\n\tprivate _entries = new Map<ServiceIdentifier<any>, any>();\n\n\tconstructor(...entries: [ServiceIdentifier<any>, any][]) {\n\t\tfor (let [id, service] of entries) {\n\t\t\tthis.set(id, service);\n\t\t}\n\t}\n\n\tset<T>(id: ServiceIdentifier<T>, instanceOrDescriptor: T | SyncDescriptor<T>): T | SyncDescriptor<T> {\n\t\tconst result = this._entries.get(id);\n\t\tthis._entries.set(id, instanceOrDescriptor);\n\t\treturn result;\n\t}\n\n\thas(id: ServiceIdentifier<any>): boolean {\n\t\treturn this._entries.has(id);\n\t}\n\n\tget<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\treturn this._entries.get(id);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { illegalState } from 'vs/base/common/errors';\nimport { Graph } from 'vs/platform/instantiation/common/graph';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { ServiceIdentifier, IInstantiationService, ServicesAccessor, _util, optional } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { IdleValue } from 'vs/base/common/async';\n\n// TRACING\nconst _enableTracing = false;\n\nclass CyclicDependencyError extends Error {\n\tconstructor(graph: Graph<any>) {\n\t\tsuper('cyclic dependency between services');\n\t\tthis.message = graph.toString();\n\t}\n}\n\nexport class InstantiationService implements IInstantiationService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _services: ServiceCollection;\n\tprivate readonly _strict: boolean;\n\tprivate readonly _parent?: InstantiationService;\n\n\tconstructor(services: ServiceCollection = new ServiceCollection(), strict: boolean = false, parent?: InstantiationService) {\n\t\tthis._services = services;\n\t\tthis._strict = strict;\n\t\tthis._parent = parent;\n\n\t\tthis._services.set(IInstantiationService, this);\n\t}\n\n\tcreateChild(services: ServiceCollection): IInstantiationService {\n\t\treturn new InstantiationService(services, this._strict, this);\n\t}\n\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R {\n\t\tlet _trace = Trace.traceInvocation(fn);\n\t\tlet _done = false;\n\t\ttry {\n\t\t\tconst accessor: ServicesAccessor = {\n\t\t\t\tget: <T>(id: ServiceIdentifier<T>, isOptional?: typeof optional) => {\n\n\t\t\t\t\tif (_done) {\n\t\t\t\t\t\tthrow illegalState('service accessor is only valid during the invocation of its target method');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = this._getOrCreateServiceInstance(id, _trace);\n\t\t\t\t\tif (!result && isOptional !== optional) {\n\t\t\t\t\t\tthrow new Error(`[invokeFunction] unknown service '${id}'`);\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn fn(accessor, ...args);\n\t\t} finally {\n\t\t\t_done = true;\n\t\t\t_trace.stop();\n\t\t}\n\t}\n\n\tcreateInstance(ctorOrDescriptor: any | SyncDescriptor<any>, ...rest: any[]): any {\n\t\tlet _trace: Trace;\n\t\tlet result: any;\n\t\tif (ctorOrDescriptor instanceof SyncDescriptor) {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor.ctor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor.ctor, ctorOrDescriptor.staticArguments.concat(rest), _trace);\n\t\t} else {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor, rest, _trace);\n\t\t}\n\t\t_trace.stop();\n\t\treturn result;\n\t}\n\n\tprivate _createInstance<T>(ctor: any, args: any[] = [], _trace: Trace): T {\n\n\t\t// arguments defined by service decorators\n\t\tlet serviceDependencies = _util.getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\t\tlet serviceArgs: any[] = [];\n\t\tfor (const dependency of serviceDependencies) {\n\t\t\tlet service = this._getOrCreateServiceInstance(dependency.id, _trace);\n\t\t\tif (!service && this._strict && !dependency.optional) {\n\t\t\t\tthrow new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n\t\t\t}\n\t\t\tserviceArgs.push(service);\n\t\t}\n\n\t\tlet firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n\t\t// check for argument mismatches, adjust static args if needed\n\t\tif (args.length !== firstServiceArgPos) {\n\t\t\tconsole.warn(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n\n\t\t\tlet delta = firstServiceArgPos - args.length;\n\t\t\tif (delta > 0) {\n\t\t\t\targs = args.concat(new Array(delta));\n\t\t\t} else {\n\t\t\t\targs = args.slice(0, firstServiceArgPos);\n\t\t\t}\n\t\t}\n\n\t\t// now create the instance\n\t\treturn <T>new ctor(...[...args, ...serviceArgs]);\n\t}\n\n\tprivate _setServiceInstance<T>(id: ServiceIdentifier<T>, instance: T): void {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\tthis._services.set(id, instance);\n\t\t} else if (this._parent) {\n\t\t\tthis._parent._setServiceInstance(id, instance);\n\t\t} else {\n\t\t\tthrow new Error('illegalState - setting UNKNOWN service instance');\n\t\t}\n\t}\n\n\tprivate _getServiceInstanceOrDescriptor<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\tlet instanceOrDesc = this._services.get(id);\n\t\tif (!instanceOrDesc && this._parent) {\n\t\t\treturn this._parent._getServiceInstanceOrDescriptor(id);\n\t\t} else {\n\t\t\treturn instanceOrDesc;\n\t\t}\n\t}\n\n\tprivate _getOrCreateServiceInstance<T>(id: ServiceIdentifier<T>, _trace: Trace): T {\n\t\tlet thing = this._getServiceInstanceOrDescriptor(id);\n\t\tif (thing instanceof SyncDescriptor) {\n\t\t\treturn this._createAndCacheServiceInstance(id, thing, _trace.branch(id, true));\n\t\t} else {\n\t\t\t_trace.branch(id, false);\n\t\t\treturn thing;\n\t\t}\n\t}\n\n\tprivate _createAndCacheServiceInstance<T>(id: ServiceIdentifier<T>, desc: SyncDescriptor<T>, _trace: Trace): T {\n\t\ttype Triple = { id: ServiceIdentifier<any>, desc: SyncDescriptor<any>, _trace: Trace };\n\t\tconst graph = new Graph<Triple>(data => data.id.toString());\n\n\t\tlet cycleCount = 0;\n\t\tconst stack = [{ id, desc, _trace }];\n\t\twhile (stack.length) {\n\t\t\tconst item = stack.pop()!;\n\t\t\tgraph.lookupOrInsertNode(item);\n\n\t\t\t// a weak but working heuristic for cycle checks\n\t\t\tif (cycleCount++ > 1000) {\n\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t}\n\n\t\t\t// check all dependencies for existence and if they need to be created first\n\t\t\tfor (let dependency of _util.getServiceDependencies(item.desc.ctor)) {\n\n\t\t\t\tlet instanceOrDesc = this._getServiceInstanceOrDescriptor(dependency.id);\n\t\t\t\tif (!instanceOrDesc && !dependency.optional) {\n\t\t\t\t\tconsole.warn(`[createInstance] ${id} depends on ${dependency.id} which is NOT registered.`);\n\t\t\t\t}\n\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\tconst d = { id: dependency.id, desc: instanceOrDesc, _trace: item._trace.branch(dependency.id, true) };\n\t\t\t\t\tgraph.insertEdge(item, d);\n\t\t\t\t\tstack.push(d);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (true) {\n\t\t\tconst roots = graph.roots();\n\n\t\t\t// if there is no more roots but still\n\t\t\t// nodes in the graph we have a cycle\n\t\t\tif (roots.length === 0) {\n\t\t\t\tif (!graph.isEmpty()) {\n\t\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (const { data } of roots) {\n\t\t\t\t// create instance and overwrite the service collections\n\t\t\t\tconst instance = this._createServiceInstanceWithOwner(data.id, data.desc.ctor, data.desc.staticArguments, data.desc.supportsDelayedInstantiation, data._trace);\n\t\t\t\tthis._setServiceInstance(data.id, instance);\n\t\t\t\tgraph.removeNode(data);\n\t\t\t}\n\t\t}\n\n\t\treturn <T>this._getServiceInstanceOrDescriptor(id);\n\t}\n\n\tprivate _createServiceInstanceWithOwner<T>(id: ServiceIdentifier<T>, ctor: any, args: any[] = [], supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\treturn this._createServiceInstance(ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else if (this._parent) {\n\t\t\treturn this._parent._createServiceInstanceWithOwner(id, ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else {\n\t\t\tthrow new Error(`illegalState - creating UNKNOWN service instance ${ctor.name}`);\n\t\t}\n\t}\n\n\tprivate _createServiceInstance<T>(ctor: any, args: any[] = [], _supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (!_supportsDelayedInstantiation) {\n\t\t\t// eager instantiation\n\t\t\treturn this._createInstance(ctor, args, _trace);\n\n\t\t} else {\n\t\t\t// Return a proxy object that's backed by an idle value. That\n\t\t\t// strategy is to instantiate services in our idle time or when actually\n\t\t\t// needed but not when injected into a consumer\n\t\t\tconst idle = new IdleValue<any>(() => this._createInstance<T>(ctor, args, _trace));\n\t\t\treturn <T>new Proxy(Object.create(null), {\n\t\t\t\tget(target: any, key: PropertyKey): any {\n\t\t\t\t\tif (key in target) {\n\t\t\t\t\t\treturn target[key];\n\t\t\t\t\t}\n\t\t\t\t\tlet obj = idle.value;\n\t\t\t\t\tlet prop = obj[key];\n\t\t\t\t\tif (typeof prop !== 'function') {\n\t\t\t\t\t\treturn prop;\n\t\t\t\t\t}\n\t\t\t\t\tprop = prop.bind(obj);\n\t\t\t\t\ttarget[key] = prop;\n\t\t\t\t\treturn prop;\n\t\t\t\t},\n\t\t\t\tset(_target: T, p: PropertyKey, value: any): boolean {\n\t\t\t\t\tidle.value[p] = value;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n//#region -- tracing ---\n\nconst enum TraceType {\n\tCreation, Invocation, Branch\n}\n\nclass Trace {\n\n\tprivate static readonly _None = new class extends Trace {\n\t\tconstructor() { super(-1, null); }\n\t\tstop() { }\n\t\tbranch() { return this; }\n\t};\n\n\tstatic traceInvocation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Invocation, ctor.name || (ctor.toString() as string).substring(0, 42).replace(/\\n/g, ''));\n\t}\n\n\tstatic traceCreation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Creation, ctor.name);\n\t}\n\n\tprivate static _totals: number = 0;\n\tprivate readonly _start: number = Date.now();\n\tprivate readonly _dep: [ServiceIdentifier<any>, boolean, Trace?][] = [];\n\n\tprivate constructor(\n\t\treadonly type: TraceType,\n\t\treadonly name: string | null\n\t) { }\n\n\tbranch(id: ServiceIdentifier<any>, first: boolean): Trace {\n\t\tlet child = new Trace(TraceType.Branch, id.toString());\n\t\tthis._dep.push([id, first, child]);\n\t\treturn child;\n\t}\n\n\tstop() {\n\t\tlet dur = Date.now() - this._start;\n\t\tTrace._totals += dur;\n\n\t\tlet causedCreation = false;\n\n\t\tfunction printChild(n: number, trace: Trace) {\n\t\t\tlet res: string[] = [];\n\t\t\tlet prefix = new Array(n + 1).join('\\t');\n\t\t\tfor (const [id, first, child] of trace._dep) {\n\t\t\t\tif (first && child) {\n\t\t\t\t\tcausedCreation = true;\n\t\t\t\t\tres.push(`${prefix}CREATES -> ${id}`);\n\t\t\t\t\tlet nested = printChild(n + 1, child);\n\t\t\t\t\tif (nested) {\n\t\t\t\t\t\tres.push(nested);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tres.push(`${prefix}uses -> ${id}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res.join('\\n');\n\t\t}\n\n\t\tlet lines = [\n\t\t\t`${this.type === TraceType.Creation ? 'CREATE' : 'CALL'} ${this.name}`,\n\t\t\t`${printChild(1, this)}`,\n\t\t\t`DONE, took ${dur.toFixed(2)}ms (grand total ${Trace._totals.toFixed(2)}ms)`\n\t\t];\n\n\t\tif (dur > 2 || causedCreation) {\n\t\t\tconsole.log(lines.join('\\n'));\n\t\t}\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\n\nexport interface ILocalization {\n\tlanguageId: string;\n\tlanguageName?: string;\n\tlocalizedLanguageName?: string;\n\ttranslations: ITranslation[];\n\tminimalTranslations?: { [key: string]: string };\n}\n\nexport interface ITranslation {\n\tid: string;\n\tpath: string;\n}\n\nexport const ILocalizationsService = createDecorator<ILocalizationsService>('localizationsService');\nexport interface ILocalizationsService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidLanguagesChange: Event<void>;\n\tgetLanguageIds(): Promise<string[]>;\n}\n\nexport function isValidLocalization(localization: ILocalization): boolean {\n\tif (typeof localization.languageId !== 'string') {\n\t\treturn false;\n\t}\n\tif (!Array.isArray(localization.translations) || localization.translations.length === 0) {\n\t\treturn false;\n\t}\n\tfor (const translation of localization.translations) {\n\t\tif (typeof translation.id !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof translation.path !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (localization.languageName && typeof localization.languageName !== 'string') {\n\t\treturn false;\n\t}\n\tif (localization.localizedLanguageName && typeof localization.localizedLanguageName !== 'string') {\n\t\treturn false;\n\t}\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator as createServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { LoggerChannelClient } from 'vs/platform/log/common/logIpc';\nimport { URI } from 'vs/base/common/uri';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\n\nexport const ILogService = createServiceDecorator<ILogService>('logService');\nexport const ILoggerService = createServiceDecorator<ILoggerService>('loggerService');\n\nfunction now(): string {\n\treturn new Date().toISOString();\n}\n\nexport enum LogLevel {\n\tTrace,\n\tDebug,\n\tInfo,\n\tWarning,\n\tError,\n\tCritical,\n\tOff\n}\n\nexport const DEFAULT_LOG_LEVEL: LogLevel = LogLevel.Info;\n\nexport interface ILogger extends IDisposable {\n\tonDidChangeLogLevel: Event<LogLevel>;\n\tgetLevel(): LogLevel;\n\tsetLevel(level: LogLevel): void;\n\n\ttrace(message: string, ...args: any[]): void;\n\tdebug(message: string, ...args: any[]): void;\n\tinfo(message: string, ...args: any[]): void;\n\twarn(message: string, ...args: any[]): void;\n\terror(message: string | Error, ...args: any[]): void;\n\tcritical(message: string | Error, ...args: any[]): void;\n\n\t/**\n\t * An operation to flush the contents. Can be synchronous.\n\t */\n\tflush(): void;\n}\n\nexport interface ILogService extends ILogger {\n\treadonly _serviceBrand: undefined;\n}\n\nexport interface ILoggerService {\n\treadonly _serviceBrand: undefined;\n\n\tgetLogger(file: URI): ILogger;\n}\n\nexport abstract class AbstractLogService extends Disposable {\n\n\tprivate level: LogLevel = DEFAULT_LOG_LEVEL;\n\tprivate readonly _onDidChangeLogLevel: Emitter<LogLevel> = this._register(new Emitter<LogLevel>());\n\treadonly onDidChangeLogLevel: Event<LogLevel> = this._onDidChangeLogLevel.event;\n\n\tsetLevel(level: LogLevel): void {\n\t\tif (this.level !== level) {\n\t\t\tthis.level = level;\n\t\t\tthis._onDidChangeLogLevel.fire(this.level);\n\t\t}\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.level;\n\t}\n\n}\n\nexport class ConsoleLogMainService extends AbstractLogService implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\tprivate useColors: boolean;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis.useColors = !isWindows;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.warn(`\\x1b[93m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[91m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n\n}\n\nexport class ConsoleLogService extends AbstractLogService implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tconsole.log('%cTRACE', 'color: #888', message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tconsole.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tconsole.log('%c INFO', 'color: #33f', message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tconsole.log('%c WARN', 'color: #993', message, ...args);\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconsole.log('%c  ERR', 'color: #f33', message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tconsole.log('%cCRITI', 'background: #f33; color: white', message, ...args);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class LogServiceAdapter extends AbstractLogService implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly adapter: { consoleLog: (type: string, args: any[]) => void }, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis.adapter.consoleLog('trace', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis.adapter.consoleLog('debug', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis.adapter.consoleLog('info', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis.adapter.consoleLog('warn', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tthis.adapter.consoleLog('error', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis.adapter.consoleLog('critical', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tprivate extractMessage(msg: string | Error): string {\n\t\tif (typeof msg === 'string') {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn toErrorMessage(msg, this.getLevel() <= LogLevel.Trace);\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class ConsoleLogInMainService extends LogServiceAdapter implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(client: LoggerChannelClient, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper({ consoleLog: (type, args) => client.consoleLog(type, args) }, logLevel);\n\t}\n}\n\nexport class MultiplexLogService extends AbstractLogService implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly logServices: ReadonlyArray<ILogService>) {\n\t\tsuper();\n\t\tif (logServices.length) {\n\t\t\tthis.setLevel(logServices[0].getLevel());\n\t\t}\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.setLevel(level);\n\t\t}\n\t\tsuper.setLevel(level);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.trace(message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.debug(message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.info(message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.warn(message, ...args);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.error(message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.critical(message, ...args);\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.flush();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.dispose();\n\t\t}\n\t}\n}\n\nexport class DelegatedLogService extends Disposable implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private logService: ILogService) {\n\t\tsuper();\n\t\tthis._register(logService);\n\t}\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.logService.onDidChangeLogLevel;\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.logService.setLevel(level);\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.logService.getLevel();\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis.logService.trace(message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis.logService.debug(message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis.logService.info(message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis.logService.warn(message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.error(message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.critical(message, ...args);\n\t}\n\n\tflush(): void {\n\t\tthis.logService.flush();\n\t}\n}\n\nexport class NullLogService implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\treadonly onDidChangeLogLevel: Event<LogLevel> = new Emitter<LogLevel>().event;\n\tsetLevel(level: LogLevel): void { }\n\tgetLevel(): LogLevel { return LogLevel.Info; }\n\ttrace(message: string, ...args: any[]): void { }\n\tdebug(message: string, ...args: any[]): void { }\n\tinfo(message: string, ...args: any[]): void { }\n\twarn(message: string, ...args: any[]): void { }\n\terror(message: string | Error, ...args: any[]): void { }\n\tcritical(message: string | Error, ...args: any[]): void { }\n\tdispose(): void { }\n\tflush(): void { }\n}\n\nexport function getLogLevel(environmentService: IEnvironmentService): LogLevel {\n\tif (environmentService.verbose) {\n\t\treturn LogLevel.Trace;\n\t}\n\tif (typeof environmentService.logLevel === 'string') {\n\t\tconst logLevel = environmentService.logLevel.toLowerCase();\n\t\tswitch (logLevel) {\n\t\t\tcase 'trace':\n\t\t\t\treturn LogLevel.Trace;\n\t\t\tcase 'debug':\n\t\t\t\treturn LogLevel.Debug;\n\t\t\tcase 'info':\n\t\t\t\treturn LogLevel.Info;\n\t\t\tcase 'warn':\n\t\t\t\treturn LogLevel.Warning;\n\t\t\tcase 'error':\n\t\t\t\treturn LogLevel.Error;\n\t\t\tcase 'critical':\n\t\t\t\treturn LogLevel.Critical;\n\t\t\tcase 'off':\n\t\t\t\treturn LogLevel.Off;\n\t\t}\n\t}\n\treturn DEFAULT_LOG_LEVEL;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IFileService, IFileStatWithMetadata } from 'vs/platform/files/common/files';\nimport { IExtensionGalleryService, IGalleryExtension, InstallOperation } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { URI } from 'vs/base/common/uri';\nimport { INativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { joinPath } from 'vs/base/common/resources';\nimport { ExtensionIdentifierWithVersion, groupByExtension } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport * as semver from 'semver-umd';\n\nconst ExtensionIdVersionRegex = /^([^.]+\\..+)-(\\d+\\.\\d+\\.\\d+)$/;\n\nexport class ExtensionsDownloader extends Disposable {\n\n\tprivate readonly extensionsDownloadDir: URI;\n\tprivate readonly cache: number;\n\tprivate readonly cleanUpPromise: Promise<void>;\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t\tthis.extensionsDownloadDir = URI.file(environmentService.extensionsDownloadPath);\n\t\tthis.cache = 20; // Cache 20 downloads\n\t\tthis.cleanUpPromise = this.cleanUp();\n\t}\n\n\tasync downloadExtension(extension: IGalleryExtension, operation: InstallOperation): Promise<URI> {\n\t\tawait this.cleanUpPromise;\n\t\tconst location = joinPath(this.extensionsDownloadDir, this.getName(extension));\n\t\tawait this.download(extension, location, operation);\n\t\treturn location;\n\t}\n\n\tasync delete(location: URI): Promise<void> {\n\t\t// noop as caching is enabled always\n\t}\n\n\tprivate async download(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<void> {\n\t\tif (!await this.fileService.exists(location)) {\n\t\t\tawait this.extensionGalleryService.download(extension, location, operation);\n\t\t}\n\t}\n\n\tprivate async cleanUp(): Promise<void> {\n\t\ttry {\n\t\t\tif (!(await this.fileService.exists(this.extensionsDownloadDir))) {\n\t\t\t\tthis.logService.trace('Extension VSIX downlads cache dir does not exist');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst folderStat = await this.fileService.resolve(this.extensionsDownloadDir, { resolveMetadata: true });\n\t\t\tif (folderStat.children) {\n\t\t\t\tconst toDelete: URI[] = [];\n\t\t\t\tconst all: [ExtensionIdentifierWithVersion, IFileStatWithMetadata][] = [];\n\t\t\t\tfor (const stat of folderStat.children) {\n\t\t\t\t\tconst extension = this.parse(stat.name);\n\t\t\t\t\tif (extension) {\n\t\t\t\t\t\tall.push([extension, stat]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst byExtension = groupByExtension(all, ([extension]) => extension.identifier);\n\t\t\t\tconst distinct: IFileStatWithMetadata[] = [];\n\t\t\t\tfor (const p of byExtension) {\n\t\t\t\t\tp.sort((a, b) => semver.rcompare(a[0].version, b[0].version));\n\t\t\t\t\ttoDelete.push(...p.slice(1).map(e => e[1].resource)); // Delete outdated extensions\n\t\t\t\t\tdistinct.push(p[0][1]);\n\t\t\t\t}\n\t\t\t\tdistinct.sort((a, b) => a.mtime - b.mtime); // sort by modified time\n\t\t\t\ttoDelete.push(...distinct.slice(0, Math.max(0, distinct.length - this.cache)).map(s => s.resource)); // Retain minimum cacheSize and delete the rest\n\t\t\t\tawait Promise.all(toDelete.map(resource => {\n\t\t\t\t\tthis.logService.trace('Deleting vsix from cache', resource.path);\n\t\t\t\t\treturn this.fileService.del(resource);\n\t\t\t\t}));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t}\n\n\tprivate getName(extension: IGalleryExtension): string {\n\t\treturn this.cache ? new ExtensionIdentifierWithVersion(extension.identifier, extension.version).key().toLowerCase() : generateUuid();\n\t}\n\n\tprivate parse(name: string): ExtensionIdentifierWithVersion | null {\n\t\tconst matches = ExtensionIdVersionRegex.exec(name);\n\t\treturn matches && matches[1] && matches[2] ? new ExtensionIdentifierWithVersion({ id: matches[1] }, matches[2]) : null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { fork, ChildProcess } from 'child_process';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { join } from 'vs/base/common/path';\nimport { Limiter } from 'vs/base/common/async';\nimport { Event } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { INativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { rimraf } from 'vs/base/node/pfs';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\n\nexport class ExtensionsLifecycle extends Disposable {\n\n\tprivate processesLimiter: Limiter<void> = new Limiter(5); // Run max 5 processes in parallel\n\n\tconstructor(\n\t\t@IEnvironmentService private environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync postUninstall(extension: ILocalExtension): Promise<void> {\n\t\tconst script = this.parseScript(extension, 'uninstall');\n\t\tif (script) {\n\t\t\tthis.logService.info(extension.identifier.id, extension.manifest.version, `Running post uninstall script`);\n\t\t\tawait this.processesLimiter.queue(() =>\n\t\t\t\tthis.runLifecycleHook(script.script, 'uninstall', script.args, true, extension)\n\t\t\t\t\t.then(() => this.logService.info(extension.identifier.id, extension.manifest.version, `Finished running post uninstall script`), err => this.logService.error(extension.identifier.id, extension.manifest.version, `Failed to run post uninstall script: ${err}`)));\n\t\t}\n\t\treturn rimraf(this.getExtensionStoragePath(extension)).then(undefined, e => this.logService.error('Error while removing extension storage path', e));\n\t}\n\n\tprivate parseScript(extension: ILocalExtension, type: string): { script: string, args: string[] } | null {\n\t\tconst scriptKey = `vscode:${type}`;\n\t\tif (extension.location.scheme === Schemas.file && extension.manifest && extension.manifest['scripts'] && typeof extension.manifest['scripts'][scriptKey] === 'string') {\n\t\t\tconst script = (<string>extension.manifest['scripts'][scriptKey]).split(' ');\n\t\t\tif (script.length < 2 || script[0] !== 'node' || !script[1]) {\n\t\t\t\tthis.logService.warn(extension.identifier.id, extension.manifest.version, `${scriptKey} should be a node script`);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn { script: join(extension.location.fsPath, script[1]), args: script.slice(2) || [] };\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate runLifecycleHook(lifecycleHook: string, lifecycleType: string, args: string[], timeout: boolean, extension: ILocalExtension): Promise<void> {\n\t\treturn new Promise<void>((c, e) => {\n\n\t\t\tconst extensionLifecycleProcess = this.start(lifecycleHook, lifecycleType, args, extension);\n\t\t\tlet timeoutHandler: any;\n\n\t\t\tconst onexit = (error?: string) => {\n\t\t\t\tif (timeoutHandler) {\n\t\t\t\t\tclearTimeout(timeoutHandler);\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t}\n\t\t\t\tif (error) {\n\t\t\t\t\te(error);\n\t\t\t\t} else {\n\t\t\t\t\tc(undefined);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// on error\n\t\t\textensionLifecycleProcess.on('error', (err) => {\n\t\t\t\tonexit(toErrorMessage(err) || 'Unknown');\n\t\t\t});\n\n\t\t\t// on exit\n\t\t\textensionLifecycleProcess.on('exit', (code: number, signal: string) => {\n\t\t\t\tonexit(code ? `post-${lifecycleType} process exited with code ${code}` : undefined);\n\t\t\t});\n\n\t\t\tif (timeout) {\n\t\t\t\t// timeout: kill process after waiting for 5s\n\t\t\t\ttimeoutHandler = setTimeout(() => {\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t\textensionLifecycleProcess.kill();\n\t\t\t\t\te('timed out');\n\t\t\t\t}, 5000);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate start(uninstallHook: string, lifecycleType: string, args: string[], extension: ILocalExtension): ChildProcess {\n\t\tconst opts = {\n\t\t\tsilent: true,\n\t\t\texecArgv: undefined\n\t\t};\n\t\tconst extensionUninstallProcess = fork(uninstallHook, [`--type=extension-post-${lifecycleType}`, ...args], opts);\n\n\t\t// Catch all output coming from the process\n\t\ttype Output = { data: string, format: string[] };\n\t\textensionUninstallProcess.stdout!.setEncoding('utf8');\n\t\textensionUninstallProcess.stderr!.setEncoding('utf8');\n\n\t\tconst onStdout = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stdout!, 'data');\n\t\tconst onStderr = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stderr!, 'data');\n\n\t\t// Log output\n\t\tonStdout(data => this.logService.info(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\t\tonStderr(data => this.logService.error(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\n\t\tconst onOutput = Event.any(\n\t\t\tEvent.map(onStdout, o => ({ data: `%c${o}`, format: [''] })),\n\t\t\tEvent.map(onStderr, o => ({ data: `%c${o}`, format: ['color: red'] }))\n\t\t);\n\t\t// Debounce all output, so we can render it in the Chrome console as a group\n\t\tconst onDebouncedOutput = Event.debounce<Output>(onOutput, (r, o) => {\n\t\t\treturn r\n\t\t\t\t? { data: r.data + o.data, format: [...r.format, ...o.format] }\n\t\t\t\t: { data: o.data, format: o.format };\n\t\t}, 100);\n\n\t\t// Print out output\n\t\tonDebouncedOutput(data => {\n\t\t\tconsole.group(extension.identifier.id);\n\t\t\tconsole.log(data.data, ...data.format);\n\t\t\tconsole.groupEnd();\n\t\t});\n\n\t\treturn extensionUninstallProcess;\n\t}\n\n\tprivate getExtensionStoragePath(extension: ILocalExtension): string {\n\t\treturn join(this.environmentService.globalStorageHome.fsPath, extension.identifier.id.toLowerCase());\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, IDisposable, toDisposable, dispose, DisposableStore } from 'vs/base/common/lifecycle';\nimport { IFileService, IResolveFileOptions, FileChangesEvent, FileOperationEvent, IFileSystemProviderRegistrationEvent, IFileSystemProvider, IFileStat, IResolveFileResult, ICreateFileOptions, IFileSystemProviderActivationEvent, FileOperationError, FileOperationResult, FileOperation, FileSystemProviderCapabilities, FileType, toFileSystemProviderErrorCode, FileSystemProviderErrorCode, IStat, IFileStatWithMetadata, IResolveMetadataFileOptions, etag, hasReadWriteCapability, hasFileFolderCopyCapability, hasOpenReadWriteCloseCapability, toFileOperationResult, IFileSystemProviderWithOpenReadWriteCloseCapability, IFileSystemProviderWithFileReadWriteCapability, IResolveFileResultWithMetadata, IWatchOptions, IWriteFileOptions, IReadFileOptions, IFileStreamContent, IFileContent, ETAG_DISABLED, hasFileReadStreamCapability, IFileSystemProviderWithFileReadStreamCapability, ensureFileSystemProviderError, IFileSystemProviderCapabilitiesChangeEvent } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { isAbsolutePath, dirname, basename, joinPath, IExtUri, extUri, extUriIgnorePathCase } from 'vs/base/common/resources';\nimport { localize } from 'vs/nls';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { isNonEmptyArray, coalesce } from 'vs/base/common/arrays';\nimport { getBaseLabel } from 'vs/base/common/labels';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { VSBuffer, VSBufferReadable, readableToBuffer, bufferToReadable, streamToBuffer, bufferToStream, VSBufferReadableStream, VSBufferReadableBufferedStream, bufferedStreamToBuffer, newWriteableBufferStream } from 'vs/base/common/buffer';\nimport { isReadableStream, transform, peekReadable, peekStream, isReadableBufferedStream } from 'vs/base/common/stream';\nimport { Queue } from 'vs/base/common/async';\nimport { CancellationTokenSource, CancellationToken } from 'vs/base/common/cancellation';\nimport { Schemas } from 'vs/base/common/network';\nimport { readFileIntoStream } from 'vs/platform/files/common/io';\n\nexport class FileService extends Disposable implements IFileService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly BUFFER_SIZE = 64 * 1024;\n\n\tconstructor(@ILogService private readonly logService: ILogService) {\n\t\tsuper();\n\t}\n\n\t//#region File System Provider\n\n\tprivate readonly _onDidChangeFileSystemProviderRegistrations = this._register(new Emitter<IFileSystemProviderRegistrationEvent>());\n\treadonly onDidChangeFileSystemProviderRegistrations = this._onDidChangeFileSystemProviderRegistrations.event;\n\n\tprivate readonly _onWillActivateFileSystemProvider = this._register(new Emitter<IFileSystemProviderActivationEvent>());\n\treadonly onWillActivateFileSystemProvider = this._onWillActivateFileSystemProvider.event;\n\n\tprivate readonly _onDidChangeFileSystemProviderCapabilities = this._register(new Emitter<IFileSystemProviderCapabilitiesChangeEvent>());\n\treadonly onDidChangeFileSystemProviderCapabilities = this._onDidChangeFileSystemProviderCapabilities.event;\n\n\tprivate readonly provider = new Map<string, IFileSystemProvider>();\n\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable {\n\t\tif (this.provider.has(scheme)) {\n\t\t\tthrow new Error(`A filesystem provider for the scheme '${scheme}' is already registered.`);\n\t\t}\n\n\t\t// Add provider with event\n\t\tthis.provider.set(scheme, provider);\n\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: true, scheme, provider });\n\n\t\t// Forward events from provider\n\t\tconst providerDisposables = new DisposableStore();\n\t\tproviderDisposables.add(provider.onDidChangeFile(changes => this._onDidFilesChange.fire(new FileChangesEvent(changes, this.getExtUri(provider).extUri))));\n\t\tproviderDisposables.add(provider.onDidChangeCapabilities(() => this._onDidChangeFileSystemProviderCapabilities.fire({ provider, scheme })));\n\t\tif (typeof provider.onDidErrorOccur === 'function') {\n\t\t\tproviderDisposables.add(provider.onDidErrorOccur(error => this._onError.fire(new Error(error))));\n\t\t}\n\n\t\treturn toDisposable(() => {\n\t\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: false, scheme, provider });\n\t\t\tthis.provider.delete(scheme);\n\n\t\t\tdispose(providerDisposables);\n\t\t});\n\t}\n\n\tasync activateProvider(scheme: string): Promise<void> {\n\n\t\t// Emit an event that we are about to activate a provider with the given scheme.\n\t\t// Listeners can participate in the activation by registering a provider for it.\n\t\tconst joiners: Promise<void>[] = [];\n\t\tthis._onWillActivateFileSystemProvider.fire({\n\t\t\tscheme,\n\t\t\tjoin(promise) {\n\t\t\t\tif (promise) {\n\t\t\t\t\tjoiners.push(promise);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tif (this.provider.has(scheme)) {\n\t\t\treturn; // provider is already here so we can return directly\n\t\t}\n\n\t\t// If the provider is not yet there, make sure to join on the listeners assuming\n\t\t// that it takes a bit longer to register the file system provider.\n\t\tawait Promise.all(joiners);\n\t}\n\n\tcanHandleResource(resource: URI): boolean {\n\t\treturn this.provider.has(resource.scheme);\n\t}\n\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean {\n\t\tconst provider = this.provider.get(resource.scheme);\n\n\t\treturn !!(provider && (provider.capabilities & capability));\n\t}\n\n\tprotected async withProvider(resource: URI): Promise<IFileSystemProvider> {\n\n\t\t// Assert path is absolute\n\t\tif (!isAbsolutePath(resource)) {\n\t\t\tthrow new FileOperationError(localize('invalidPath', \"Unable to resolve filesystem provider with relative file path '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_INVALID_PATH);\n\t\t}\n\n\t\t// Activate provider\n\t\tawait this.activateProvider(resource.scheme);\n\n\t\t// Assert provider\n\t\tconst provider = this.provider.get(resource.scheme);\n\t\tif (!provider) {\n\t\t\tconst error = new Error();\n\t\t\terror.name = 'ENOPRO';\n\t\t\terror.message = localize('noProviderFound', \"No file system provider found for resource '{0}'\", resource.toString());\n\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate async withReadProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider) || hasFileReadStreamCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite, FileReadStream nor FileOpenReadWriteClose capability which is needed for the read operation.`);\n\t}\n\n\tprivate async withWriteProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite nor FileOpenReadWriteClose capability which is needed for the write operation.`);\n\t}\n\n\t//#endregion\n\n\tprivate readonly _onDidRunOperation = this._register(new Emitter<FileOperationEvent>());\n\treadonly onDidRunOperation = this._onDidRunOperation.event;\n\n\tprivate readonly _onError = this._register(new Emitter<Error>());\n\treadonly onError = this._onError.event;\n\n\t//#region File Metadata Resolving\n\n\tasync resolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\ttry {\n\t\t\treturn await this.doResolveFile(resource, options);\n\t\t} catch (error) {\n\n\t\t\t// Specially handle file not found case as file operation result\n\t\t\tif (toFileSystemProviderErrorCode(error) === FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\tthrow new FileOperationError(localize('fileNotFoundError', \"Unable to resolve non-existing file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t\t}\n\n\t\t\t// Bubble up any other error as is\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async doResolveFile(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tconst resolveTo = options?.resolveTo;\n\t\tconst resolveSingleChildDescendants = options?.resolveSingleChildDescendants;\n\t\tconst resolveMetadata = options?.resolveMetadata;\n\n\t\tconst stat = await provider.stat(resource);\n\n\t\tlet trie: TernarySearchTree<URI, boolean> | undefined;\n\n\t\treturn this.toFileStat(provider, resource, stat, undefined, !!resolveMetadata, (stat, siblings) => {\n\n\t\t\t// lazy trie to check for recursive resolving\n\t\t\tif (!trie) {\n\t\t\t\ttrie = TernarySearchTree.forUris<true>();\n\t\t\t\ttrie.set(resource, true);\n\t\t\t\tif (isNonEmptyArray(resolveTo)) {\n\t\t\t\t\tresolveTo.forEach(uri => trie!.set(uri, true));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// check for recursive resolving\n\t\t\tif (Boolean(trie.findSuperstr(stat.resource) || trie.get(stat.resource))) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// check for resolving single child folders\n\t\t\tif (stat.isDirectory && resolveSingleChildDescendants) {\n\t\t\t\treturn siblings === 1;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat, siblings: number | undefined, resolveMetadata: true, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStatWithMetadata>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat> {\n\n\t\t// convert to file stat\n\t\tconst fileStat: IFileStat = {\n\t\t\tresource,\n\t\t\tname: getBaseLabel(resource),\n\t\t\tisFile: (stat.type & FileType.File) !== 0,\n\t\t\tisDirectory: (stat.type & FileType.Directory) !== 0,\n\t\t\tisSymbolicLink: (stat.type & FileType.SymbolicLink) !== 0,\n\t\t\tmtime: stat.mtime,\n\t\t\tctime: stat.ctime,\n\t\t\tsize: stat.size,\n\t\t\tetag: etag({ mtime: stat.mtime, size: stat.size })\n\t\t};\n\n\t\t// check to recurse for directories\n\t\tif (fileStat.isDirectory && recurse(fileStat, siblings)) {\n\t\t\ttry {\n\t\t\t\tconst entries = await provider.readdir(resource);\n\t\t\t\tconst resolvedEntries = await Promise.all(entries.map(async ([name, type]) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst childResource = joinPath(resource, name);\n\t\t\t\t\t\tconst childStat = resolveMetadata ? await provider.stat(childResource) : { type };\n\n\t\t\t\t\t\treturn await this.toFileStat(provider, childResource, childStat, entries.length, resolveMetadata, recurse);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\t\t\treturn null; // can happen e.g. due to permission errors\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\t// make sure to get rid of null values that signal a failure to resolve a particular entry\n\t\t\t\tfileStat.children = coalesce(resolvedEntries);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\tfileStat.children = []; // gracefully handle errors, we may not have permissions to read\n\t\t\t}\n\n\t\t\treturn fileStat;\n\t\t}\n\n\t\treturn fileStat;\n\t}\n\n\tasync resolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\tasync resolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResultWithMetadata[]>;\n\tasync resolveAll(toResolve: { resource: URI; options?: IResolveFileOptions; }[]): Promise<IResolveFileResult[]> {\n\t\treturn Promise.all(toResolve.map(async entry => {\n\t\t\ttry {\n\t\t\t\treturn { stat: await this.doResolveFile(entry.resource, entry.options), success: true };\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\treturn { stat: undefined, success: false };\n\t\t\t}\n\t\t}));\n\t}\n\n\tasync exists(resource: URI): Promise<boolean> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\ttry {\n\t\t\tconst stat = await provider.stat(resource);\n\n\t\t\treturn !!stat;\n\t\t} catch (error) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync canCreateFile(resource: URI, options?: ICreateFileOptions): Promise<Error | true> {\n\t\ttry {\n\t\t\tawait this.doValidateCreateFile(resource, options);\n\t\t} catch (error) {\n\t\t\treturn error;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async doValidateCreateFile(resource: URI, options?: ICreateFileOptions): Promise<void> {\n\n\t\t// validate overwrite\n\t\tif (!options?.overwrite && await this.exists(resource)) {\n\t\t\tthrow new FileOperationError(localize('fileExists', \"Unable to create file '{0}' that already exists when overwrite flag is not set\", this.resourceForError(resource)), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\t}\n\n\tasync createFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream = VSBuffer.fromString(''), options?: ICreateFileOptions): Promise<IFileStatWithMetadata> {\n\n\t\t// validate\n\t\tawait this.doValidateCreateFile(resource, options);\n\n\t\t// do write into file (this will create it too)\n\t\tconst fileStat = await this.writeFile(resource, bufferOrReadableOrStream);\n\n\t\t// events\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync writeFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(resource), resource);\n\n\t\ttry {\n\n\t\t\t// validate write\n\t\t\tconst stat = await this.validateWriteFile(provider, resource, options);\n\n\t\t\t// mkdir recursively as needed\n\t\t\tif (!stat) {\n\t\t\t\tawait this.mkdirp(provider, dirname(resource));\n\t\t\t}\n\n\t\t\t// optimization: if the provider has unbuffered write capability and the data\n\t\t\t// to write is a Readable, we consume up to 3 chunks and try to write the data\n\t\t\t// unbuffered to reduce the overhead. If the Readable has more data to provide\n\t\t\t// we continue to write buffered.\n\t\t\tlet bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream;\n\t\t\tif (hasReadWriteCapability(provider) && !(bufferOrReadableOrStream instanceof VSBuffer)) {\n\t\t\t\tif (isReadableStream(bufferOrReadableOrStream)) {\n\t\t\t\t\tconst bufferedStream = await peekStream(bufferOrReadableOrStream, 3);\n\t\t\t\t\tif (bufferedStream.ended) {\n\t\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = VSBuffer.concat(bufferedStream.buffer);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = bufferedStream;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = peekReadable(bufferOrReadableOrStream, data => VSBuffer.concat(data), 3);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = bufferOrReadableOrStream;\n\t\t\t}\n\n\t\t\t// write file: unbuffered (only if data to write is a buffer, or the provider has no buffered write capability)\n\t\t\tif (!hasOpenReadWriteCloseCapability(provider) || (hasReadWriteCapability(provider) && bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer)) {\n\t\t\t\tawait this.doWriteUnbuffered(provider, resource, bufferOrReadableOrStreamOrBufferedStream);\n\t\t\t}\n\n\t\t\t// write file: buffered\n\t\t\telse {\n\t\t\t\tawait this.doWriteBuffered(provider, resource, bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer ? bufferToReadable(bufferOrReadableOrStreamOrBufferedStream) : bufferOrReadableOrStreamOrBufferedStream);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthrow new FileOperationError(localize('err.write', \"Unable to write file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options);\n\t\t}\n\n\t\treturn this.resolve(resource, { resolveMetadata: true });\n\t}\n\n\tprivate async validateWriteFile(provider: IFileSystemProvider, resource: URI, options?: IWriteFileOptions): Promise<IStat | undefined> {\n\t\tlet stat: IStat | undefined = undefined;\n\t\ttry {\n\t\t\tstat = await provider.stat(resource);\n\t\t} catch (error) {\n\t\t\treturn undefined; // file might not exist\n\t\t}\n\n\t\t// file cannot be directory\n\t\tif ((stat.type & FileType.Directory) !== 0) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryWriteError', \"Unable to write file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// Dirty write prevention: if the file on disk has been changed and does not match our expected\n\t\t// mtime and etag, we bail out to prevent dirty writing.\n\t\t//\n\t\t// First, we check for a mtime that is in the future before we do more checks. The assumption is\n\t\t// that only the mtime is an indicator for a file that has changed on disk.\n\t\t//\n\t\t// Second, if the mtime has advanced, we compare the size of the file on disk with our previous\n\t\t// one using the etag() function. Relying only on the mtime check has prooven to produce false\n\t\t// positives due to file system weirdness (especially around remote file systems). As such, the\n\t\t// check for size is a weaker check because it can return a false negative if the file has changed\n\t\t// but to the same length. This is a compromise we take to avoid having to produce checksums of\n\t\t// the file content for comparison which would be much slower to compute.\n\t\tif (\n\t\t\toptions && typeof options.mtime === 'number' && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED &&\n\t\t\ttypeof stat.mtime === 'number' && typeof stat.size === 'number' &&\n\t\t\toptions.mtime < stat.mtime && options.etag !== etag({ mtime: options.mtime /* not using stat.mtime for a reason, see above */, size: stat.size })\n\t\t) {\n\t\t\tthrow new FileOperationError(localize('fileModifiedError', \"File Modified Since\"), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\n\t\treturn stat;\n\t}\n\n\tasync readFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\tconst stream = await this.doReadAsFileStream(provider, resource, {\n\t\t\t...options,\n\t\t\t// optimization: since we know that the caller does not\n\t\t\t// care about buffering, we indicate this to the reader.\n\t\t\t// this reduces all the overhead the buffered reading\n\t\t\t// has (open, read, close) if the provider supports\n\t\t\t// unbuffered reading.\n\t\t\tpreferUnbuffered: true\n\t\t});\n\n\t\treturn {\n\t\t\t...stream,\n\t\t\tvalue: await streamToBuffer(stream.value)\n\t\t};\n\t}\n\n\tasync readFileStream(resource: URI, options?: IReadFileOptions): Promise<IFileStreamContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\treturn this.doReadAsFileStream(provider, resource, options);\n\t}\n\n\tprivate async doReadAsFileStream(provider: IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability, resource: URI, options?: IReadFileOptions & { preferUnbuffered?: boolean }): Promise<IFileStreamContent> {\n\n\t\t// install a cancellation token that gets cancelled\n\t\t// when any error occurs. this allows us to resolve\n\t\t// the content of the file while resolving metadata\n\t\t// but still cancel the operation in certain cases.\n\t\tconst cancellableSource = new CancellationTokenSource();\n\n\t\t// validate read operation\n\t\tconst statPromise = this.validateReadFile(resource, options).then(stat => stat, error => {\n\t\t\tcancellableSource.cancel();\n\n\t\t\tthrow error;\n\t\t});\n\n\t\ttry {\n\n\t\t\t// if the etag is provided, we await the result of the validation\n\t\t\t// due to the likelyhood of hitting a NOT_MODIFIED_SINCE result.\n\t\t\t// otherwise, we let it run in parallel to the file reading for\n\t\t\t// optimal startup performance.\n\t\t\tif (options && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED) {\n\t\t\t\tawait statPromise;\n\t\t\t}\n\n\t\t\tlet fileStreamPromise: Promise<VSBufferReadableStream>;\n\n\t\t\t// read unbuffered (only if either preferred, or the provider has no buffered read capability)\n\t\t\tif (!(hasOpenReadWriteCloseCapability(provider) || hasFileReadStreamCapability(provider)) || (hasReadWriteCapability(provider) && options?.preferUnbuffered)) {\n\t\t\t\tfileStreamPromise = this.readFileUnbuffered(provider, resource, options);\n\t\t\t}\n\n\t\t\t// read streamed (always prefer over primitive buffered read)\n\t\t\telse if (hasFileReadStreamCapability(provider)) {\n\t\t\t\tfileStreamPromise = Promise.resolve(this.readFileStreamed(provider, resource, cancellableSource.token, options));\n\t\t\t}\n\n\t\t\t// read buffered\n\t\t\telse {\n\t\t\t\tfileStreamPromise = Promise.resolve(this.readFileBuffered(provider, resource, cancellableSource.token, options));\n\t\t\t}\n\n\t\t\tconst [fileStat, fileStream] = await Promise.all([statPromise, fileStreamPromise]);\n\n\t\t\treturn {\n\t\t\t\t...fileStat,\n\t\t\t\tvalue: fileStream\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options);\n\t\t}\n\t}\n\n\tprivate readFileStreamed(provider: IFileSystemProviderWithFileReadStreamCapability, resource: URI, token: CancellationToken, options: IReadFileOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst fileStream = provider.readFileStream(resource, options, token);\n\n\t\treturn transform(fileStream, {\n\t\t\tdata: data => data instanceof VSBuffer ? data : VSBuffer.wrap(data),\n\t\t\terror: error => new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options)\n\t\t}, data => VSBuffer.concat(data));\n\t}\n\n\tprivate readFileBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, token: CancellationToken, options: IReadFileOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst stream = newWriteableBufferStream();\n\n\t\treadFileIntoStream(provider, resource, stream, data => data, {\n\t\t\t...options,\n\t\t\tbufferSize: this.BUFFER_SIZE,\n\t\t\terrorTransformer: error => new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options)\n\t\t}, token);\n\n\t\treturn stream;\n\t}\n\n\tprivate async readFileUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, options?: IReadFileOptions): Promise<VSBufferReadableStream> {\n\t\tlet buffer = await provider.readFile(resource);\n\n\t\t// respect position option\n\t\tif (options && typeof options.position === 'number') {\n\t\t\tbuffer = buffer.slice(options.position);\n\t\t}\n\n\t\t// respect length option\n\t\tif (options && typeof options.length === 'number') {\n\t\t\tbuffer = buffer.slice(0, options.length);\n\t\t}\n\n\t\t// Throw if file is too large to load\n\t\tthis.validateReadFileLimits(resource, buffer.byteLength, options);\n\n\t\treturn bufferToStream(VSBuffer.wrap(buffer));\n\t}\n\n\tprivate async validateReadFile(resource: URI, options?: IReadFileOptions): Promise<IFileStatWithMetadata> {\n\t\tconst stat = await this.resolve(resource, { resolveMetadata: true });\n\n\t\t// Throw if resource is a directory\n\t\tif (stat.isDirectory) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryReadError', \"Unable to read file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// Throw if file not modified since (unless disabled)\n\t\tif (options && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED && options.etag === stat.etag) {\n\t\t\tthrow new FileOperationError(localize('fileNotModifiedError', \"File not modified since\"), FileOperationResult.FILE_NOT_MODIFIED_SINCE, options);\n\t\t}\n\n\t\t// Throw if file is too large to load\n\t\tthis.validateReadFileLimits(resource, stat.size, options);\n\n\t\treturn stat;\n\t}\n\n\tprivate validateReadFileLimits(resource: URI, size: number, options?: IReadFileOptions): void {\n\t\tif (options?.limits) {\n\t\t\tlet tooLargeErrorResult: FileOperationResult | undefined = undefined;\n\n\t\t\tif (typeof options.limits.memory === 'number' && size > options.limits.memory) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\t\t}\n\n\t\t\tif (typeof options.limits.size === 'number' && size > options.limits.size) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_TOO_LARGE;\n\t\t\t}\n\n\t\t\tif (typeof tooLargeErrorResult === 'number') {\n\t\t\t\tthrow new FileOperationError(localize('fileTooLargeError', \"Unable to read file '{0}' that is too large to open\", this.resourceForError(resource)), tooLargeErrorResult);\n\t\t\t}\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync canMove(source: URI, target: URI, overwrite?: boolean): Promise<Error | true> {\n\t\treturn this.doCanMoveCopy(source, target, 'move', overwrite);\n\t}\n\n\tasync canCopy(source: URI, target: URI, overwrite?: boolean): Promise<Error | true> {\n\t\treturn this.doCanMoveCopy(source, target, 'copy', overwrite);\n\t}\n\n\tprivate async doCanMoveCopy(source: URI, target: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<Error | true> {\n\t\tif (source.toString() !== target.toString()) {\n\t\t\ttry {\n\t\t\t\tconst sourceProvider = mode === 'move' ? this.throwIfFileSystemIsReadonly(await this.withWriteProvider(source), source) : await this.withReadProvider(source);\n\t\t\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t\t\tawait this.doValidateMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite);\n\t\t\t} catch (error) {\n\t\t\t\treturn error;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tasync move(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(source), source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// move\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'move', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(source, mode === 'move' ? FileOperation.MOVE : FileOperation.COPY, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync copy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = await this.withReadProvider(source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// copy\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(source, mode === 'copy' ? FileOperation.COPY : FileOperation.MOVE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async doMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite: boolean): Promise<'move' | 'copy'> {\n\t\tif (source.toString() === target.toString()) {\n\t\t\treturn mode; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\t// validation\n\t\tconst { exists, isSameResourceWithDifferentPathCase } = await this.doValidateMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite);\n\n\t\t// delete as needed (unless target is same resurce with different path case)\n\t\tif (exists && !isSameResourceWithDifferentPathCase && overwrite) {\n\t\t\tawait this.del(target, { recursive: true });\n\t\t}\n\n\t\t// create parent folders\n\t\tawait this.mkdirp(targetProvider, dirname(target));\n\n\t\t// copy source => target\n\t\tif (mode === 'copy') {\n\n\t\t\t// same provider with fast copy: leverage copy() functionality\n\t\t\tif (sourceProvider === targetProvider && hasFileFolderCopyCapability(sourceProvider)) {\n\t\t\t\tawait sourceProvider.copy(source, target, { overwrite });\n\t\t\t}\n\n\t\t\t// when copying via buffer/unbuffered, we have to manually\n\t\t\t// traverse the source if it is a folder and not a file\n\t\t\telse {\n\t\t\t\tconst sourceFile = await this.resolve(source);\n\t\t\t\tif (sourceFile.isDirectory) {\n\t\t\t\t\tawait this.doCopyFolder(sourceProvider, sourceFile, targetProvider, target);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doCopyFile(sourceProvider, source, targetProvider, target);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mode;\n\t\t}\n\n\t\t// move source => target\n\t\telse {\n\n\t\t\t// same provider: leverage rename() functionality\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tawait sourceProvider.rename(source, target, { overwrite });\n\n\t\t\t\treturn mode;\n\t\t\t}\n\n\t\t\t// across providers: copy to target & delete at source\n\t\t\telse {\n\t\t\t\tawait this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', overwrite);\n\n\t\t\t\tawait this.del(source, { recursive: true });\n\n\t\t\t\treturn 'copy';\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async doCopyFile(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI): Promise<void> {\n\n\t\t// copy: source (buffered) => target (buffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (buffered) => target (unbuffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeBufferedToUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (buffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbufferedToBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (unbuffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\t}\n\n\tprivate async doCopyFolder(sourceProvider: IFileSystemProvider, sourceFolder: IFileStat, targetProvider: IFileSystemProvider, targetFolder: URI): Promise<void> {\n\n\t\t// create folder in target\n\t\tawait targetProvider.mkdir(targetFolder);\n\n\t\t// create children in target\n\t\tif (Array.isArray(sourceFolder.children)) {\n\t\t\tawait Promise.all(sourceFolder.children.map(async sourceChild => {\n\t\t\t\tconst targetChild = joinPath(targetFolder, sourceChild.name);\n\t\t\t\tif (sourceChild.isDirectory) {\n\t\t\t\t\treturn this.doCopyFolder(sourceProvider, await this.resolve(sourceChild.resource), targetProvider, targetChild);\n\t\t\t\t} else {\n\t\t\t\t\treturn this.doCopyFile(sourceProvider, sourceChild.resource, targetProvider, targetChild);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate async doValidateMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<{ exists: boolean, isSameResourceWithDifferentPathCase: boolean }> {\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\n\t\t// Check if source is equal or parent to target (requires providers to be the same)\n\t\tif (sourceProvider === targetProvider) {\n\t\t\tconst { extUri, isPathCaseSensitive } = this.getExtUri(sourceProvider);\n\t\t\tif (!isPathCaseSensitive) {\n\t\t\t\tisSameResourceWithDifferentPathCase = extUri.isEqual(source, target);\n\t\t\t}\n\n\t\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError1', \"Unable to copy when source '{0}' is same as target '{1}' with different path case on a case insensitive file system\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\n\t\t\tif (!isSameResourceWithDifferentPathCase && extUri.isEqualOrParent(target, source)) {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError2', \"Unable to move/copy when source '{0}' is parent of target '{1}'.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\t\t}\n\n\t\t// Extra checks if target exists and this is not a rename\n\t\tconst exists = await this.exists(target);\n\t\tif (exists && !isSameResourceWithDifferentPathCase) {\n\n\t\t\t// Bail out if target exists and we are not about to overwrite\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow new FileOperationError(localize('unableToMoveCopyError3', \"Unable to move/copy '{0}' because target '{1}' already exists at destination.\", this.resourceForError(source), this.resourceForError(target)), FileOperationResult.FILE_MOVE_CONFLICT);\n\t\t\t}\n\n\t\t\t// Special case: if the target is a parent of the source, we cannot delete\n\t\t\t// it as it would delete the source as well. In this case we have to throw\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tconst { extUri } = this.getExtUri(sourceProvider);\n\t\t\t\tif (extUri.isEqualOrParent(source, target)) {\n\t\t\t\t\tthrow new Error(localize('unableToMoveCopyError4', \"Unable to move/copy '{0}' into '{1}' since a file would replace the folder it is contained in.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { exists, isSameResourceWithDifferentPathCase };\n\t}\n\n\tprivate getExtUri(provider: IFileSystemProvider): { extUri: IExtUri, isPathCaseSensitive: boolean } {\n\t\tconst isPathCaseSensitive = !!(provider.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\n\t\treturn {\n\t\t\textUri: isPathCaseSensitive ? extUri : extUriIgnorePathCase,\n\t\t\tisPathCaseSensitive\n\t\t};\n\t}\n\n\tasync createFolder(resource: URI): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// mkdir recursively\n\t\tawait this.mkdirp(provider, resource);\n\n\t\t// events\n\t\tconst fileStat = await this.resolve(resource, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async mkdirp(provider: IFileSystemProvider, directory: URI): Promise<void> {\n\t\tconst directoriesToCreate: string[] = [];\n\n\t\t// mkdir until we reach root\n\t\tconst { extUri } = this.getExtUri(provider);\n\t\twhile (!extUri.isEqual(directory, dirname(directory))) {\n\t\t\ttry {\n\t\t\t\tconst stat = await provider.stat(directory);\n\t\t\t\tif ((stat.type & FileType.Directory) === 0) {\n\t\t\t\t\tthrow new Error(localize('mkdirExistsError', \"Unable to create folder '{0}' that already exists but is not a directory\", this.resourceForError(directory)));\n\t\t\t\t}\n\n\t\t\t\tbreak; // we have hit a directory that exists -> good\n\t\t\t} catch (error) {\n\n\t\t\t\t// Bubble up any other error that is not file not found\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\t// Upon error, remember directories that need to be created\n\t\t\t\tdirectoriesToCreate.push(basename(directory));\n\n\t\t\t\t// Continue up\n\t\t\t\tdirectory = dirname(directory);\n\t\t\t}\n\t\t}\n\n\t\t// Create directories as needed\n\t\tfor (let i = directoriesToCreate.length - 1; i >= 0; i--) {\n\t\t\tdirectory = joinPath(directory, directoriesToCreate[i]);\n\n\t\t\ttry {\n\t\t\t\tawait provider.mkdir(directory);\n\t\t\t} catch (error) {\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileExists) {\n\t\t\t\t\t// For mkdirp() we tolerate that the mkdir() call fails\n\t\t\t\t\t// in case the folder already exists. This follows node.js\n\t\t\t\t\t// own implementation of fs.mkdir({ recursive: true }) and\n\t\t\t\t\t// reduces the chances of race conditions leading to errors\n\t\t\t\t\t// if multiple calls try to create the same folders\n\t\t\t\t\t// As such, we only throw an error here if it is other than\n\t\t\t\t\t// the fact that the file already exists.\n\t\t\t\t\t// (see also https://github.com/microsoft/vscode/issues/89834)\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync canDelete(resource: URI, options?: { useTrash?: boolean; recursive?: boolean; }): Promise<Error | true> {\n\t\ttry {\n\t\t\tawait this.doValidateDelete(resource, options);\n\t\t} catch (error) {\n\t\t\treturn error;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async doValidateDelete(resource: URI, options?: { useTrash?: boolean; recursive?: boolean; }): Promise<IFileSystemProvider> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// Validate trash support\n\t\tconst useTrash = !!options?.useTrash;\n\t\tif (useTrash && !(provider.capabilities & FileSystemProviderCapabilities.Trash)) {\n\t\t\tthrow new Error(localize('deleteFailedTrashUnsupported', \"Unable to delete file '{0}' via trash because provider does not support it.\", this.resourceForError(resource)));\n\t\t}\n\n\t\t// Validate delete\n\t\tconst exists = await this.exists(resource);\n\t\tif (!exists) {\n\t\t\tthrow new FileOperationError(localize('deleteFailedNotFound', \"Unable to delete non-existing file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t}\n\n\t\t// Validate recursive\n\t\tconst recursive = !!options?.recursive;\n\t\tif (!recursive && exists) {\n\t\t\tconst stat = await this.resolve(resource);\n\t\t\tif (stat.isDirectory && Array.isArray(stat.children) && stat.children.length > 0) {\n\t\t\t\tthrow new Error(localize('deleteFailedNonEmptyFolder', \"Unable to delete non-empty folder '{0}'.\", this.resourceForError(resource)));\n\t\t\t}\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tasync del(resource: URI, options?: { useTrash?: boolean; recursive?: boolean; }): Promise<void> {\n\t\tconst provider = await this.doValidateDelete(resource, options);\n\n\t\tconst useTrash = !!options?.useTrash;\n\t\tconst recursive = !!options?.recursive;\n\n\t\t// Delete through provider\n\t\tawait provider.delete(resource, { recursive, useTrash });\n\n\t\t// Events\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.DELETE));\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprivate readonly _onDidFilesChange = this._register(new Emitter<FileChangesEvent>());\n\treadonly onDidFilesChange = this._onDidFilesChange.event;\n\n\tprivate readonly activeWatchers = new Map<string, { disposable: IDisposable, count: number }>();\n\n\twatch(resource: URI, options: IWatchOptions = { recursive: false, excludes: [] }): IDisposable {\n\t\tlet watchDisposed = false;\n\t\tlet watchDisposable = toDisposable(() => watchDisposed = true);\n\n\t\t// Watch and wire in disposable which is async but\n\t\t// check if we got disposed meanwhile and forward\n\t\tthis.doWatch(resource, options).then(disposable => {\n\t\t\tif (watchDisposed) {\n\t\t\t\tdispose(disposable);\n\t\t\t} else {\n\t\t\t\twatchDisposable = disposable;\n\t\t\t}\n\t\t}, error => this.logService.error(error));\n\n\t\treturn toDisposable(() => dispose(watchDisposable));\n\t}\n\n\tasync doWatch(resource: URI, options: IWatchOptions): Promise<IDisposable> {\n\t\tconst provider = await this.withProvider(resource);\n\t\tconst key = this.toWatchKey(provider, resource, options);\n\n\t\t// Only start watching if we are the first for the given key\n\t\tconst watcher = this.activeWatchers.get(key) || { count: 0, disposable: provider.watch(resource, options) };\n\t\tif (!this.activeWatchers.has(key)) {\n\t\t\tthis.activeWatchers.set(key, watcher);\n\t\t}\n\n\t\t// Increment usage counter\n\t\twatcher.count += 1;\n\n\t\treturn toDisposable(() => {\n\n\t\t\t// Unref\n\t\t\twatcher.count--;\n\n\t\t\t// Dispose only when last user is reached\n\t\t\tif (watcher.count === 0) {\n\t\t\t\tdispose(watcher.disposable);\n\t\t\t\tthis.activeWatchers.delete(key);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate toWatchKey(provider: IFileSystemProvider, resource: URI, options: IWatchOptions): string {\n\t\tconst { extUri } = this.getExtUri(provider);\n\n\t\treturn [\n\t\t\textUri.getComparisonKey(resource), \t// lowercase path if the provider is case insensitive\n\t\t\tString(options.recursive),\t\t\t// use recursive: true | false as part of the key\n\t\t\toptions.excludes.join()\t\t\t\t// use excludes as part of the key\n\t\t].join();\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.activeWatchers.forEach(watcher => dispose(watcher.disposable));\n\t\tthis.activeWatchers.clear();\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprivate readonly writeQueues: Map<string, Queue<void>> = new Map();\n\n\tprivate ensureWriteQueue(provider: IFileSystemProvider, resource: URI): Queue<void> {\n\t\tconst { extUri } = this.getExtUri(provider);\n\t\tconst queueKey = extUri.getComparisonKey(resource);\n\n\t\t// ensure to never write to the same resource without finishing\n\t\t// the one write. this ensures a write finishes consistently\n\t\t// (even with error) before another write is done.\n\t\tlet writeQueue = this.writeQueues.get(queueKey);\n\t\tif (!writeQueue) {\n\t\t\twriteQueue = new Queue<void>();\n\t\t\tthis.writeQueues.set(queueKey, writeQueue);\n\n\t\t\tconst onFinish = Event.once(writeQueue.onFinished);\n\t\t\tonFinish(() => {\n\t\t\t\tthis.writeQueues.delete(queueKey);\n\t\t\t\tdispose(writeQueue);\n\t\t\t});\n\t\t}\n\n\t\treturn writeQueue;\n\t}\n\n\tprivate async doWriteBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, readableOrStreamOrBufferedStream: VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\treturn this.ensureWriteQueue(provider, resource).queue(async () => {\n\n\t\t\t// open handle\n\t\t\tconst handle = await provider.open(resource, { create: true });\n\n\t\t\t// write into handle until all bytes from buffer have been written\n\t\t\ttry {\n\t\t\t\tif (isReadableStream(readableOrStreamOrBufferedStream) || isReadableBufferedStream(readableOrStreamOrBufferedStream)) {\n\t\t\t\t\tawait this.doWriteStreamBufferedQueued(provider, handle, readableOrStreamOrBufferedStream);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doWriteReadableBufferedQueued(provider, handle, readableOrStreamOrBufferedStream);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t\t} finally {\n\n\t\t\t\t// close handle always\n\t\t\t\tawait provider.close(handle);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async doWriteStreamBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, streamOrBufferedStream: VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\tlet posInFile = 0;\n\t\tlet stream: VSBufferReadableStream;\n\n\t\t// Buffered stream: consume the buffer first by writing\n\t\t// it to the target before reading from the stream.\n\t\tif (isReadableBufferedStream(streamOrBufferedStream)) {\n\t\t\tif (streamOrBufferedStream.buffer.length > 0) {\n\t\t\t\tconst chunk = VSBuffer.concat(streamOrBufferedStream.buffer);\n\t\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\n\t\t\t\tposInFile += chunk.byteLength;\n\t\t\t}\n\n\t\t\t// If the stream has been consumed, return early\n\t\t\tif (streamOrBufferedStream.ended) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstream = streamOrBufferedStream.stream;\n\t\t}\n\n\t\t// Unbuffered stream - just take as is\n\t\telse {\n\t\t\tstream = streamOrBufferedStream;\n\t\t}\n\n\t\treturn new Promise(async (resolve, reject) => {\n\n\t\t\tstream.on('data', async chunk => {\n\n\t\t\t\t// pause stream to perform async write operation\n\t\t\t\tstream.pause();\n\n\t\t\t\ttry {\n\t\t\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\tposInFile += chunk.byteLength;\n\n\t\t\t\t// resume stream now that we have successfully written\n\t\t\t\t// run this on the next tick to prevent increasing the\n\t\t\t\t// execution stack because resume() may call the event\n\t\t\t\t// handler again before finishing.\n\t\t\t\tsetTimeout(() => stream.resume());\n\t\t\t});\n\n\t\t\tstream.on('error', error => reject(error));\n\t\t\tstream.on('end', () => resolve());\n\t\t});\n\t}\n\n\tprivate async doWriteReadableBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, readable: VSBufferReadable): Promise<void> {\n\t\tlet posInFile = 0;\n\n\t\tlet chunk: VSBuffer | null;\n\t\twhile ((chunk = readable.read()) !== null) {\n\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\n\t\t\tposInFile += chunk.byteLength;\n\t\t}\n\t}\n\n\tprivate async doWriteBuffer(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, buffer: VSBuffer, length: number, posInFile: number, posInBuffer: number): Promise<void> {\n\t\tlet totalBytesWritten = 0;\n\t\twhile (totalBytesWritten < length) {\n\n\t\t\t// Write through the provider\n\t\t\tconst bytesWritten = await provider.write(handle, posInFile + totalBytesWritten, buffer.buffer, posInBuffer + totalBytesWritten, length - totalBytesWritten);\n\t\t\ttotalBytesWritten += bytesWritten;\n\t\t}\n\t}\n\n\tprivate async doWriteUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\treturn this.ensureWriteQueue(provider, resource).queue(() => this.doWriteUnbufferedQueued(provider, resource, bufferOrReadableOrStreamOrBufferedStream));\n\t}\n\n\tprivate async doWriteUnbufferedQueued(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\tlet buffer: VSBuffer;\n\t\tif (bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer) {\n\t\t\tbuffer = bufferOrReadableOrStreamOrBufferedStream;\n\t\t} else if (isReadableStream(bufferOrReadableOrStreamOrBufferedStream)) {\n\t\t\tbuffer = await streamToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t} else if (isReadableBufferedStream(bufferOrReadableOrStreamOrBufferedStream)) {\n\t\t\tbuffer = await bufferedStreamToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t} else {\n\t\t\tbuffer = readableToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t}\n\n\t\t// Write through the provider\n\t\tawait provider.writeFile(resource, buffer.buffer, { create: true, overwrite: true });\n\t}\n\n\tprivate async doPipeBuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.ensureWriteQueue(targetProvider, target).queue(() => this.doPipeBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeBufferedQueued(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\tlet sourceHandle: number | undefined = undefined;\n\t\tlet targetHandle: number | undefined = undefined;\n\n\t\ttry {\n\n\t\t\t// Open handles\n\t\t\tsourceHandle = await sourceProvider.open(source, { create: false });\n\t\t\ttargetHandle = await targetProvider.open(target, { create: true });\n\n\t\t\tconst buffer = VSBuffer.alloc(this.BUFFER_SIZE);\n\n\t\t\tlet posInFile = 0;\n\t\t\tlet posInBuffer = 0;\n\t\t\tlet bytesRead = 0;\n\t\t\tdo {\n\t\t\t\t// read from source (sourceHandle) at current position (posInFile) into buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\t\tbytesRead = await sourceProvider.read(sourceHandle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\t\t// write into target (targetHandle) at current position (posInFile) from buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) all bytes we read (bytesRead).\n\t\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, buffer, bytesRead, posInFile, posInBuffer);\n\n\t\t\t\tposInFile += bytesRead;\n\t\t\t\tposInBuffer += bytesRead;\n\n\t\t\t\t// when buffer full, fill it again from the beginning\n\t\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\t\tposInBuffer = 0;\n\t\t\t\t}\n\t\t\t} while (bytesRead > 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait Promise.all([\n\t\t\t\ttypeof sourceHandle === 'number' ? sourceProvider.close(sourceHandle) : Promise.resolve(),\n\t\t\t\ttypeof targetHandle === 'number' ? targetProvider.close(targetHandle) : Promise.resolve(),\n\t\t\t]);\n\t\t}\n\t}\n\n\tprivate async doPipeUnbuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn this.ensureWriteQueue(targetProvider, target).queue(() => this.doPipeUnbufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn targetProvider.writeFile(target, await sourceProvider.readFile(source), { create: true, overwrite: true });\n\t}\n\n\tprivate async doPipeUnbufferedToBuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.ensureWriteQueue(targetProvider, target).queue(() => this.doPipeUnbufferedToBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedToBufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\n\t\t// Open handle\n\t\tconst targetHandle = await targetProvider.open(target, { create: true });\n\n\t\t// Read entire buffer from source and write buffered\n\t\ttry {\n\t\t\tconst buffer = await sourceProvider.readFile(source);\n\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, VSBuffer.wrap(buffer), buffer.byteLength, 0, 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait targetProvider.close(targetHandle);\n\t\t}\n\t}\n\n\tprivate async doPipeBufferedToUnbuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\n\t\t// Read buffer via stream buffered\n\t\tconst buffer = await streamToBuffer(this.readFileBuffered(sourceProvider, source, CancellationToken.None));\n\n\t\t// Write buffer into target at once\n\t\tawait this.doWriteUnbuffered(targetProvider, target, buffer);\n\t}\n\n\tprotected throwIfFileSystemIsReadonly<T extends IFileSystemProvider>(provider: T, resource: URI): T {\n\t\tif (provider.capabilities & FileSystemProviderCapabilities.Readonly) {\n\t\t\tthrow new FileOperationError(localize('err.readonly', \"Unable to modify readonly file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_PERMISSION_DENIED);\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate resourceForError(resource: URI): string {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\treturn resource.fsPath;\n\t\t}\n\n\t\treturn resource.toString(true);\n\t}\n\n\t//#endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mkdir, open, close, read, write, fdatasync, Dirent, Stats } from 'fs';\nimport { promisify } from 'util';\nimport { IDisposable, Disposable, toDisposable, dispose, combinedDisposable } from 'vs/base/common/lifecycle';\nimport { FileSystemProviderCapabilities, IFileChange, IWatchOptions, IStat, FileType, FileDeleteOptions, FileOverwriteOptions, FileWriteOptions, FileOpenOptions, FileSystemProviderErrorCode, createFileSystemProviderError, FileSystemProviderError, IFileSystemProviderWithFileReadWriteCapability, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithOpenReadWriteCloseCapability, FileReadStreamOptions, IFileSystemProviderWithFileFolderCopyCapability } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { statLink, unlink, move, copy, readFile, truncate, rimraf, RimRafMode, exists, readdirWithFileTypes } from 'vs/base/node/pfs';\nimport { normalize, basename, dirname } from 'vs/base/common/path';\nimport { joinPath } from 'vs/base/common/resources';\nimport { isEqual } from 'vs/base/common/extpath';\nimport { retry, ThrottledDelayer } from 'vs/base/common/async';\nimport { ILogService, LogLevel } from 'vs/platform/log/common/log';\nimport { localize } from 'vs/nls';\nimport { IDiskFileChange, toFileChanges, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { FileWatcher as UnixWatcherService } from 'vs/platform/files/node/watcher/unix/watcherService';\nimport { FileWatcher as WindowsWatcherService } from 'vs/platform/files/node/watcher/win32/watcherService';\nimport { FileWatcher as NsfwWatcherService } from 'vs/platform/files/node/watcher/nsfw/watcherService';\nimport { FileWatcher as NodeJSWatcherService } from 'vs/platform/files/node/watcher/nodejs/watcherService';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ReadableStreamEvents, newWriteableStream } from 'vs/base/common/stream';\nimport { readFileIntoStream } from 'vs/platform/files/common/io';\nimport { insert } from 'vs/base/common/arrays';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\nexport interface IWatcherOptions {\n\tpollingInterval?: number;\n\tusePolling: boolean;\n}\n\nexport interface IDiskFileSystemProviderOptions {\n\tbufferSize?: number;\n\twatcher?: IWatcherOptions;\n}\n\nexport class DiskFileSystemProvider extends Disposable implements\n\tIFileSystemProviderWithFileReadWriteCapability,\n\tIFileSystemProviderWithOpenReadWriteCloseCapability,\n\tIFileSystemProviderWithFileReadStreamCapability,\n\tIFileSystemProviderWithFileFolderCopyCapability {\n\n\tprivate readonly BUFFER_SIZE = this.options?.bufferSize || 64 * 1024;\n\n\tconstructor(\n\t\tprivate readonly logService: ILogService,\n\t\tprivate readonly options?: IDiskFileSystemProviderOptions\n\t) {\n\t\tsuper();\n\t}\n\n\t//#region File Capabilities\n\n\tonDidChangeCapabilities: Event<void> = Event.None;\n\n\tprotected _capabilities: FileSystemProviderCapabilities | undefined;\n\tget capabilities(): FileSystemProviderCapabilities {\n\t\tif (!this._capabilities) {\n\t\t\tthis._capabilities =\n\t\t\t\tFileSystemProviderCapabilities.FileReadWrite |\n\t\t\t\tFileSystemProviderCapabilities.FileOpenReadWriteClose |\n\t\t\t\tFileSystemProviderCapabilities.FileReadStream |\n\t\t\t\tFileSystemProviderCapabilities.FileFolderCopy;\n\n\t\t\tif (isLinux) {\n\t\t\t\tthis._capabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t\t}\n\t\t}\n\n\t\treturn this._capabilities;\n\t}\n\n\t//#endregion\n\n\t//#region File Metadata Resolving\n\n\tasync stat(resource: URI): Promise<IStat> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await statLink(this.toFilePath(resource)); // cannot use fs.stat() here to support links properly\n\n\t\t\treturn {\n\t\t\t\ttype: this.toType(stat, symbolicLink),\n\t\t\t\tctime: stat.birthtime.getTime(), // intentionally not using ctime here, we want the creation time\n\t\t\t\tmtime: stat.mtime.getTime(),\n\t\t\t\tsize: stat.size\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync readdir(resource: URI): Promise<[string, FileType][]> {\n\t\ttry {\n\t\t\tconst children = await readdirWithFileTypes(this.toFilePath(resource));\n\n\t\t\tconst result: [string, FileType][] = [];\n\t\t\tawait Promise.all(children.map(async child => {\n\t\t\t\ttry {\n\t\t\t\t\tlet type: FileType;\n\t\t\t\t\tif (child.isSymbolicLink()) {\n\t\t\t\t\t\ttype = (await this.stat(joinPath(resource, child.name))).type; // always resolve target the link points to if any\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = this.toType(child);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult.push([child.name, type]);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.trace(error); // ignore errors for individual entries that can arise from permission denied\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate toType(entry: Stats | Dirent, symbolicLink?: { dangling: boolean }): FileType {\n\n\t\t// Signal file type by checking for file / directory, except:\n\t\t// - symbolic links pointing to non-existing files are FileType.Unknown\n\t\t// - files that are neither file nor directory are FileType.Unknown\n\t\tlet type: FileType;\n\t\tif (symbolicLink?.dangling) {\n\t\t\ttype = FileType.Unknown;\n\t\t} else if (entry.isFile()) {\n\t\t\ttype = FileType.File;\n\t\t} else if (entry.isDirectory()) {\n\t\t\ttype = FileType.Directory;\n\t\t} else {\n\t\t\ttype = FileType.Unknown;\n\t\t}\n\n\t\t// Always signal symbolic link as file type additionally\n\t\tif (symbolicLink) {\n\t\t\ttype |= FileType.SymbolicLink;\n\t\t}\n\n\t\treturn type;\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\treturn await readFile(filePath);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tconst stream = newWriteableStream<Uint8Array>(data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\n\t\treadFileIntoStream(this, resource, stream, data => data.buffer, {\n\t\t\t...opts,\n\t\t\tbufferSize: this.BUFFER_SIZE\n\t\t}, token);\n\n\t\treturn stream;\n\t}\n\n\tasync writeFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\tlet handle: number | undefined = undefined;\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\t// Validate target unless { create: true, overwrite: true }\n\t\t\tif (!opts.create || !opts.overwrite) {\n\t\t\t\tconst fileExists = await exists(filePath);\n\t\t\t\tif (fileExists) {\n\t\t\t\t\tif (!opts.overwrite) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileExists', \"File already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!opts.create) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileNotExists', \"File does not exist\"), FileSystemProviderErrorCode.FileNotFound);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Open\n\t\t\thandle = await this.open(resource, { create: true });\n\n\t\t\t// Write content at once\n\t\t\tawait this.write(handle, 0, content, 0, content.byteLength);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tif (typeof handle === 'number') {\n\t\t\t\tawait this.close(handle);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate readonly mapHandleToPos: Map<number, number> = new Map();\n\n\tprivate readonly writeHandles: Set<number> = new Set();\n\tprivate canFlush: boolean = true;\n\n\tasync open(resource: URI, opts: FileOpenOptions): Promise<number> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\tlet flags: string | undefined = undefined;\n\t\t\tif (opts.create) {\n\t\t\t\tif (isWindows && await exists(filePath)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// On Windows and if the file exists, we use a different strategy of saving the file\n\t\t\t\t\t\t// by first truncating the file and then writing with r+ flag. This helps to save hidden files on Windows\n\t\t\t\t\t\t// (see https://github.com/Microsoft/vscode/issues/931) and prevent removing alternate data streams\n\t\t\t\t\t\t// (see https://github.com/Microsoft/vscode/issues/6363)\n\t\t\t\t\t\tawait truncate(filePath, 0);\n\n\t\t\t\t\t\t// After a successful truncate() the flag can be set to 'r+' which will not truncate.\n\t\t\t\t\t\tflags = 'r+';\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.trace(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// we take opts.create as a hint that the file is opened for writing\n\t\t\t\t// as such we use 'w' to truncate an existing or create the\n\t\t\t\t// file otherwise. we do not allow reading.\n\t\t\t\tif (!flags) {\n\t\t\t\t\tflags = 'w';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// otherwise we assume the file is opened for reading\n\t\t\t\t// as such we use 'r' to neither truncate, nor create\n\t\t\t\t// the file.\n\t\t\t\tflags = 'r';\n\t\t\t}\n\n\t\t\tconst handle = await promisify(open)(filePath, flags);\n\n\t\t\t// remember this handle to track file position of the handle\n\t\t\t// we init the position to 0 since the file descriptor was\n\t\t\t// just created and the position was not moved so far (see\n\t\t\t// also http://man7.org/linux/man-pages/man2/open.2.html -\n\t\t\t// \"The file offset is set to the beginning of the file.\")\n\t\t\tthis.mapHandleToPos.set(handle, 0);\n\n\t\t\t// remember that this handle was used for writing\n\t\t\tif (opts.create) {\n\t\t\t\tthis.writeHandles.add(handle);\n\t\t\t}\n\n\t\t\treturn handle;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync close(fd: number): Promise<void> {\n\t\ttry {\n\n\t\t\t// remove this handle from map of positions\n\t\t\tthis.mapHandleToPos.delete(fd);\n\n\t\t\t// if a handle is closed that was used for writing, ensure\n\t\t\t// to flush the contents to disk if possible.\n\t\t\tif (this.writeHandles.delete(fd) && this.canFlush) {\n\t\t\t\ttry {\n\t\t\t\t\tawait promisify(fdatasync)(fd);\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t\t// In that case we disable flushing and log the error to our logger\n\t\t\t\t\tthis.canFlush = false;\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn await promisify(close)(fd);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesRead: number | null = null;\n\t\ttry {\n\t\t\tconst result = await promisify(read)(fd, data, offset, length, normalizedPos);\n\n\t\t\tif (typeof result === 'number') {\n\t\t\t\tbytesRead = result; // node.d.ts fail\n\t\t\t} else {\n\t\t\t\tbytesRead = result.bytesRead;\n\t\t\t}\n\n\t\t\treturn bytesRead;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesRead);\n\t\t}\n\t}\n\n\tprivate normalizePos(fd: number, pos: number): number | null {\n\n\t\t// when calling fs.read/write we try to avoid passing in the \"pos\" argument and\n\t\t// rather prefer to pass in \"null\" because this avoids an extra seek(pos)\n\t\t// call that in some cases can even fail (e.g. when opening a file over FTP -\n\t\t// see https://github.com/microsoft/vscode/issues/73884).\n\t\t//\n\t\t// as such, we compare the passed in position argument with our last known\n\t\t// position for the file descriptor and use \"null\" if they match.\n\t\tif (pos === this.mapHandleToPos.get(fd)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\tprivate updatePos(fd: number, pos: number | null, bytesLength: number | null): void {\n\t\tconst lastKnownPos = this.mapHandleToPos.get(fd);\n\t\tif (typeof lastKnownPos === 'number') {\n\n\t\t\t// pos !== null signals that previously a position was used that is\n\t\t\t// not null. node.js documentation explains, that in this case\n\t\t\t// the internal file pointer is not moving and as such we do not move\n\t\t\t// our position pointer.\n\t\t\t//\n\t\t\t// Docs: \"If position is null, data will be read from the current file position,\n\t\t\t// and the file position will be updated. If position is an integer, the file position\n\t\t\t// will remain unchanged.\"\n\t\t\tif (typeof pos === 'number') {\n\t\t\t\t// do not modify the position\n\t\t\t}\n\n\t\t\t// bytesLength = number is a signal that the read/write operation was\n\t\t\t// successful and as such we need to advance the position in the Map\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/read.2.html):\n\t\t\t// \"On files that support seeking, the read operation commences at the\n\t\t\t// file offset, and the file offset is incremented by the number of\n\t\t\t// bytes read.\"\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/write.2.html):\n\t\t\t// \"For a seekable file (i.e., one to which lseek(2) may be applied, for\n\t\t\t// example, a regular file) writing takes place at the file offset, and\n\t\t\t// the file offset is incremented by the number of bytes actually\n\t\t\t// written.\"\n\t\t\telse if (typeof bytesLength === 'number') {\n\t\t\t\tthis.mapHandleToPos.set(fd, lastKnownPos + bytesLength);\n\t\t\t}\n\n\t\t\t// bytesLength = null signals an error in the read/write operation\n\t\t\t// and as such we drop the handle from the Map because the position\n\t\t\t// is unspecificed at this point.\n\t\t\telse {\n\t\t\t\tthis.mapHandleToPos.delete(fd);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync write(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\t// we know at this point that the file to write to is truncated and thus empty\n\t\t// if the write now fails, the file remains empty. as such we really try hard\n\t\t// to ensure the write succeeds by retrying up to three times.\n\t\treturn retry(() => this.doWrite(fd, pos, data, offset, length), 100 /* ms delay */, 3 /* retries */);\n\t}\n\n\tprivate async doWrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesWritten: number | null = null;\n\t\ttry {\n\t\t\tconst result = await promisify(write)(fd, data, offset, length, normalizedPos);\n\n\t\t\tif (typeof result === 'number') {\n\t\t\t\tbytesWritten = result; // node.d.ts fail\n\t\t\t} else {\n\t\t\t\tbytesWritten = result.bytesWritten;\n\t\t\t}\n\n\t\t\treturn bytesWritten;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesWritten);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync mkdir(resource: URI): Promise<void> {\n\t\ttry {\n\t\t\tawait promisify(mkdir)(this.toFilePath(resource));\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync delete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\tawait this.doDelete(filePath, opts);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprotected async doDelete(filePath: string, opts: FileDeleteOptions): Promise<void> {\n\t\tif (opts.recursive) {\n\t\t\tawait rimraf(filePath, RimRafMode.MOVE);\n\t\t} else {\n\t\t\tawait unlink(filePath);\n\t\t}\n\t}\n\n\tasync rename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'move', opts.overwrite);\n\n\t\t\t// Move\n\t\t\tawait move(fromFilePath, toFilePath);\n\t\t} catch (error) {\n\n\t\t\t// rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('moveError', \"Unable to move '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync copy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'copy', opts.overwrite);\n\n\t\t\t// Copy\n\t\t\tawait copy(fromFilePath, toFilePath);\n\t\t} catch (error) {\n\n\t\t\t// rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('copyError', \"Unable to copy '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async validateTargetDeleted(from: URI, to: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\t\tconst isPathCaseSensitive = !!(this.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\t\tif (!isPathCaseSensitive) {\n\t\t\tisSameResourceWithDifferentPathCase = isEqual(fromFilePath, toFilePath, true /* ignore case */);\n\t\t}\n\n\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorPathCase', \"'File cannot be copied to same path with different path case\"), FileSystemProviderErrorCode.FileExists);\n\t\t}\n\n\t\t// handle existing target (unless this is a case change)\n\t\tif (!isSameResourceWithDifferentPathCase && await exists(toFilePath)) {\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorExists', \"File at target already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t}\n\n\t\t\t// Delete target\n\t\t\tawait this.delete(to, { recursive: true, useTrash: false });\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprivate readonly _onDidWatchErrorOccur = this._register(new Emitter<string>());\n\treadonly onDidErrorOccur = this._onDidWatchErrorOccur.event;\n\n\tprivate readonly _onDidChangeFile = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChangeFile.event;\n\n\tprivate recursiveWatcher: WindowsWatcherService | UnixWatcherService | NsfwWatcherService | undefined;\n\tprivate readonly recursiveFoldersToWatch: { path: string, excludes: string[] }[] = [];\n\tprivate recursiveWatchRequestDelayer = this._register(new ThrottledDelayer<void>(0));\n\n\tprivate recursiveWatcherLogLevelListener: IDisposable | undefined;\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tif (opts.recursive) {\n\t\t\treturn this.watchRecursive(resource, opts.excludes);\n\t\t}\n\n\t\treturn this.watchNonRecursive(resource); // TODO@ben ideally the same watcher can be used in both cases\n\t}\n\n\tprivate watchRecursive(resource: URI, excludes: string[]): IDisposable {\n\n\t\t// Add to list of folders to watch recursively\n\t\tconst folderToWatch = { path: this.toFilePath(resource), excludes };\n\t\tconst remove = insert(this.recursiveFoldersToWatch, folderToWatch);\n\n\t\t// Trigger update\n\t\tthis.refreshRecursiveWatchers();\n\n\t\treturn toDisposable(() => {\n\n\t\t\t// Remove from list of folders to watch recursively\n\t\t\tremove();\n\n\t\t\t// Trigger update\n\t\t\tthis.refreshRecursiveWatchers();\n\t\t});\n\t}\n\n\tprivate refreshRecursiveWatchers(): void {\n\n\t\t// Buffer requests for recursive watching to decide on right watcher\n\t\t// that supports potentially watching more than one folder at once\n\t\tthis.recursiveWatchRequestDelayer.trigger(async () => {\n\t\t\tthis.doRefreshRecursiveWatchers();\n\t\t});\n\t}\n\n\tprivate doRefreshRecursiveWatchers(): void {\n\n\t\t// Reuse existing\n\t\tif (this.recursiveWatcher instanceof NsfwWatcherService) {\n\t\t\tthis.recursiveWatcher.setFolders(this.recursiveFoldersToWatch);\n\t\t}\n\n\t\t// Create new\n\t\telse {\n\n\t\t\t// Dispose old\n\t\t\tdispose(this.recursiveWatcher);\n\t\t\tthis.recursiveWatcher = undefined;\n\n\t\t\t// Create new if we actually have folders to watch\n\t\t\tif (this.recursiveFoldersToWatch.length > 0) {\n\t\t\t\tlet watcherImpl: {\n\t\t\t\t\tnew(\n\t\t\t\t\t\tfolders: { path: string, excludes: string[] }[],\n\t\t\t\t\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\t\t\t\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\t\t\t\t\tverboseLogging: boolean,\n\t\t\t\t\t\twatcherOptions?: IWatcherOptions\n\t\t\t\t\t): WindowsWatcherService | UnixWatcherService | NsfwWatcherService\n\t\t\t\t};\n\n\t\t\t\tlet watcherOptions: IWatcherOptions | undefined = undefined;\n\n\t\t\t\t// requires a polling watcher\n\t\t\t\tif (this.options?.watcher?.usePolling) {\n\t\t\t\t\twatcherImpl = UnixWatcherService;\n\t\t\t\t\twatcherOptions = this.options?.watcher;\n\t\t\t\t}\n\n\t\t\t\t// Single Folder Watcher\n\t\t\t\telse {\n\t\t\t\t\tif (this.recursiveFoldersToWatch.length === 1) {\n\t\t\t\t\t\tif (isWindows) {\n\t\t\t\t\t\t\twatcherImpl = WindowsWatcherService;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twatcherImpl = UnixWatcherService;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Multi Folder Watcher\n\t\t\t\t\telse {\n\t\t\t\t\t\twatcherImpl = NsfwWatcherService;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Create and start watching\n\t\t\t\tthis.recursiveWatcher = new watcherImpl(\n\t\t\t\t\tthis.recursiveFoldersToWatch,\n\t\t\t\t\tevent => this._onDidChangeFile.fire(toFileChanges(event)),\n\t\t\t\t\tmsg => {\n\t\t\t\t\t\tif (msg.type === 'error') {\n\t\t\t\t\t\t\tthis._onDidWatchErrorOccur.fire(msg.message);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.logService[msg.type](msg.message);\n\t\t\t\t\t},\n\t\t\t\t\tthis.logService.getLevel() === LogLevel.Trace,\n\t\t\t\t\twatcherOptions\n\t\t\t\t);\n\n\t\t\t\tif (!this.recursiveWatcherLogLevelListener) {\n\t\t\t\t\tthis.recursiveWatcherLogLevelListener = this.logService.onDidChangeLogLevel(() => {\n\t\t\t\t\t\tif (this.recursiveWatcher) {\n\t\t\t\t\t\t\tthis.recursiveWatcher.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate watchNonRecursive(resource: URI): IDisposable {\n\t\tconst watcherService = new NodeJSWatcherService(\n\t\t\tthis.toFilePath(resource),\n\t\t\tchanges => this._onDidChangeFile.fire(toFileChanges(changes)),\n\t\t\tmsg => {\n\t\t\t\tif (msg.type === 'error') {\n\t\t\t\t\tthis._onDidWatchErrorOccur.fire(msg.message);\n\t\t\t\t}\n\n\t\t\t\tthis.logService[msg.type](msg.message);\n\t\t\t},\n\t\t\tthis.logService.getLevel() === LogLevel.Trace\n\t\t);\n\n\t\tconst logLevelListener = this.logService.onDidChangeLogLevel(() => {\n\t\t\twatcherService.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t});\n\n\t\treturn combinedDisposable(watcherService, logLevelListener);\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprotected toFilePath(resource: URI): string {\n\t\treturn normalize(resource.fsPath);\n\t}\n\n\tprivate toFileSystemProviderError(error: NodeJS.ErrnoException): FileSystemProviderError {\n\t\tif (error instanceof FileSystemProviderError) {\n\t\t\treturn error; // avoid double conversion\n\t\t}\n\n\t\tlet code: FileSystemProviderErrorCode;\n\t\tswitch (error.code) {\n\t\t\tcase 'ENOENT':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileNotFound;\n\t\t\t\tbreak;\n\t\t\tcase 'EISDIR':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileIsADirectory;\n\t\t\t\tbreak;\n\t\t\tcase 'ENOTDIR':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileNotADirectory;\n\t\t\t\tbreak;\n\t\t\tcase 'EEXIST':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileExists;\n\t\t\t\tbreak;\n\t\t\tcase 'EPERM':\n\t\t\tcase 'EACCES':\n\t\t\t\tcode = FileSystemProviderErrorCode.NoPermissions;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcode = FileSystemProviderErrorCode.Unknown;\n\t\t}\n\n\t\treturn createFileSystemProviderError(error, code);\n\t}\n\n\t//#endregion\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tdispose(this.recursiveWatcher);\n\t\tthis.recursiveWatcher = undefined;\n\n\t\tdispose(this.recursiveWatcherLogLevelListener);\n\t\tthis.recursiveWatcherLogLevelListener = undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as pfs from 'vs/base/node/pfs';\nimport { createHash } from 'crypto';\nimport { IExtensionManagementService, ILocalExtension, IExtensionIdentifier } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { INativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { Queue } from 'vs/base/common/async';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { isValidLocalization, ILocalizationsService } from 'vs/platform/localizations/common/localizations';\nimport { distinct, equals } from 'vs/base/common/arrays';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { join } from 'vs/base/common/path';\n\ninterface ILanguagePack {\n\thash: string;\n\textensions: {\n\t\textensionIdentifier: IExtensionIdentifier;\n\t\tversion: string;\n\t}[];\n\ttranslations: { [id: string]: string };\n}\n\nexport class LocalizationsService extends Disposable implements ILocalizationsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly cache: LanguagePacksCache;\n\n\tprivate readonly _onDidLanguagesChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidLanguagesChange: Event<void> = this._onDidLanguagesChange.event;\n\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.cache = this._register(new LanguagePacksCache(environmentService, logService));\n\n\t\tthis._register(extensionManagementService.onDidInstallExtension(({ local }) => this.onDidInstallExtension(local)));\n\t\tthis._register(extensionManagementService.onDidUninstallExtension(({ identifier }) => this.onDidUninstallExtension(identifier)));\n\t}\n\n\tgetLanguageIds(): Promise<string[]> {\n\t\treturn this.cache.getLanguagePacks()\n\t\t\t.then(languagePacks => {\n\t\t\t\t// Contributed languages are those installed via extension packs, so does not include English\n\t\t\t\tconst languages = ['en', ...Object.keys(languagePacks)];\n\t\t\t\treturn distinct(languages);\n\t\t\t});\n\t}\n\n\tprivate onDidInstallExtension(extension: ILocalExtension | undefined): void {\n\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\tthis.logService.debug('Adding language packs from the extension', extension.identifier.id);\n\t\t\tthis.update().then(changed => { if (changed) { this._onDidLanguagesChange.fire(); } });\n\t\t}\n\t}\n\n\tprivate onDidUninstallExtension(identifier: IExtensionIdentifier): void {\n\t\tthis.cache.getLanguagePacks()\n\t\t\t.then(languagePacks => {\n\t\t\t\tif (Object.keys(languagePacks).some(language => languagePacks[language] && languagePacks[language].extensions.some(e => areSameExtensions(e.extensionIdentifier, identifier)))) {\n\t\t\t\t\tthis.logService.debug('Removing language packs from the extension', identifier.id);\n\t\t\t\t\tthis.update().then(changed => { if (changed) { this._onDidLanguagesChange.fire(); } });\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tupdate(): Promise<boolean> {\n\t\treturn Promise.all([this.cache.getLanguagePacks(), this.extensionManagementService.getInstalled()])\n\t\t\t.then(([current, installed]) => this.cache.update(installed)\n\t\t\t\t.then(updated => !equals(Object.keys(current), Object.keys(updated))));\n\t}\n}\n\nclass LanguagePacksCache extends Disposable {\n\n\tprivate languagePacks: { [language: string]: ILanguagePack } = {};\n\tprivate languagePacksFilePath: string;\n\tprivate languagePacksFileLimiter: Queue<any>;\n\tprivate initializedCache: boolean | undefined;\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.languagePacksFilePath = join(environmentService.userDataPath, 'languagepacks.json');\n\t\tthis.languagePacksFileLimiter = new Queue();\n\t}\n\n\tgetLanguagePacks(): Promise<{ [language: string]: ILanguagePack }> {\n\t\t// if queue is not empty, fetch from disk\n\t\tif (this.languagePacksFileLimiter.size || !this.initializedCache) {\n\t\t\treturn this.withLanguagePacks()\n\t\t\t\t.then(() => this.languagePacks);\n\t\t}\n\t\treturn Promise.resolve(this.languagePacks);\n\t}\n\n\tupdate(extensions: ILocalExtension[]): Promise<{ [language: string]: ILanguagePack }> {\n\t\treturn this.withLanguagePacks(languagePacks => {\n\t\t\tObject.keys(languagePacks).forEach(language => delete languagePacks[language]);\n\t\t\tthis.createLanguagePacksFromExtensions(languagePacks, ...extensions);\n\t\t}).then(() => this.languagePacks);\n\t}\n\n\tprivate createLanguagePacksFromExtensions(languagePacks: { [language: string]: ILanguagePack }, ...extensions: ILocalExtension[]): void {\n\t\tfor (const extension of extensions) {\n\t\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\t\tthis.createLanguagePacksFromExtension(languagePacks, extension);\n\t\t\t}\n\t\t}\n\t\tObject.keys(languagePacks).forEach(languageId => this.updateHash(languagePacks[languageId]));\n\t}\n\n\tprivate createLanguagePacksFromExtension(languagePacks: { [language: string]: ILanguagePack }, extension: ILocalExtension): void {\n\t\tconst extensionIdentifier = extension.identifier;\n\t\tconst localizations = extension.manifest.contributes && extension.manifest.contributes.localizations ? extension.manifest.contributes.localizations : [];\n\t\tfor (const localizationContribution of localizations) {\n\t\t\tif (extension.location.scheme === Schemas.file && isValidLocalization(localizationContribution)) {\n\t\t\t\tlet languagePack = languagePacks[localizationContribution.languageId];\n\t\t\t\tif (!languagePack) {\n\t\t\t\t\tlanguagePack = { hash: '', extensions: [], translations: {} };\n\t\t\t\t\tlanguagePacks[localizationContribution.languageId] = languagePack;\n\t\t\t\t}\n\t\t\t\tlet extensionInLanguagePack = languagePack.extensions.filter(e => areSameExtensions(e.extensionIdentifier, extensionIdentifier))[0];\n\t\t\t\tif (extensionInLanguagePack) {\n\t\t\t\t\textensionInLanguagePack.version = extension.manifest.version;\n\t\t\t\t} else {\n\t\t\t\t\tlanguagePack.extensions.push({ extensionIdentifier, version: extension.manifest.version });\n\t\t\t\t}\n\t\t\t\tfor (const translation of localizationContribution.translations) {\n\t\t\t\t\tlanguagePack.translations[translation.id] = join(extension.location.fsPath, translation.path);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateHash(languagePack: ILanguagePack): void {\n\t\tif (languagePack) {\n\t\t\tconst md5 = createHash('md5');\n\t\t\tfor (const extension of languagePack.extensions) {\n\t\t\t\tmd5.update(extension.extensionIdentifier.uuid || extension.extensionIdentifier.id).update(extension.version);\n\t\t\t}\n\t\t\tlanguagePack.hash = md5.digest('hex');\n\t\t}\n\t}\n\n\tprivate withLanguagePacks<T>(fn: (languagePacks: { [language: string]: ILanguagePack }) => T | null = () => null): Promise<T> {\n\t\treturn this.languagePacksFileLimiter.queue(() => {\n\t\t\tlet result: T | null = null;\n\t\t\treturn pfs.readFile(this.languagePacksFilePath, 'utf8')\n\t\t\t\t.then(undefined, err => err.code === 'ENOENT' ? Promise.resolve('{}') : Promise.reject(err))\n\t\t\t\t.then<{ [language: string]: ILanguagePack }>(raw => { try { return JSON.parse(raw); } catch (e) { return {}; } })\n\t\t\t\t.then(languagePacks => { result = fn(languagePacks); return languagePacks; })\n\t\t\t\t.then(languagePacks => {\n\t\t\t\t\tfor (const language of Object.keys(languagePacks)) {\n\t\t\t\t\t\tif (!languagePacks[language]) {\n\t\t\t\t\t\t\tdelete languagePacks[language];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.languagePacks = languagePacks;\n\t\t\t\t\tthis.initializedCache = true;\n\t\t\t\t\tconst raw = JSON.stringify(this.languagePacks);\n\t\t\t\t\tthis.logService.debug('Writing language packs', raw);\n\t\t\t\t\treturn pfs.writeFile(this.languagePacksFilePath, raw);\n\t\t\t\t})\n\t\t\t\t.then(() => result, error => this.logService.error(error));\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { LogLevel, ILogService, DelegatedLogService } from 'vs/platform/log/common/log';\nimport { Event } from 'vs/base/common/event';\n\nexport class LoggerChannel implements IServerChannel {\n\n\tonDidChangeLogLevel: Event<LogLevel>;\n\n\tconstructor(private service: ILogService) {\n\t\tthis.onDidChangeLogLevel = Event.buffer(service.onDidChangeLogLevel, true);\n\t}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidChangeLogLevel': return this.onDidChangeLogLevel;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setLevel': this.service.setLevel(arg); return Promise.resolve();\n\t\t\tcase 'consoleLog': this.consoleLog(arg[0], arg[1]); return Promise.resolve();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n\n\tprivate consoleLog(severity: string, args: string[]): void {\n\t\tlet consoleFn = console.log;\n\n\t\tswitch (severity) {\n\t\t\tcase 'error':\n\t\t\t\tconsoleFn = console.error;\n\t\t\t\tbreak;\n\t\t\tcase 'warn':\n\t\t\t\tconsoleFn = console.warn;\n\t\t\t\tbreak;\n\t\t\tcase 'info':\n\t\t\t\tconsoleFn = console.info;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconsoleFn.call(console, ...args);\n\t}\n}\n\nexport class LoggerChannelClient {\n\n\tconstructor(private channel: IChannel) { }\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.channel.listen('onDidChangeLogLevel');\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tLoggerChannelClient.setLevel(this.channel, level);\n\t}\n\n\tpublic static setLevel(channel: IChannel, level: LogLevel): Promise<void> {\n\t\treturn channel.call('setLevel', level);\n\t}\n\n\tconsoleLog(severity: string, args: string[]): void {\n\t\tthis.channel.call('consoleLog', [severity, args]);\n\t}\n}\n\nexport class FollowerLogService extends DelegatedLogService implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private parent: LoggerChannelClient, logService: ILogService) {\n\t\tsuper(logService);\n\t\tthis._register(parent.onDidChangeLogLevel(level => logService.setLevel(level)));\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tsuper.setLevel(level);\n\n\t\tthis.parent.setLevel(level);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { ILogService, LogLevel, AbstractLogService } from 'vs/platform/log/common/log';\nimport * as spdlog from 'spdlog';\n\nasync function createSpdLogLogger(processName: string, logsFolder: string): Promise<spdlog.RotatingLogger | null> {\n\t// Do not crash if spdlog cannot be loaded\n\ttry {\n\t\tconst _spdlog = await import('spdlog');\n\t\t_spdlog.setAsyncMode(8192, 500);\n\t\tconst logfilePath = path.join(logsFolder, `${processName}.log`);\n\t\treturn _spdlog.createRotatingLoggerAsync(processName, logfilePath, 1024 * 1024 * 5, 6);\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n\treturn null;\n}\n\nexport function createRotatingLogger(name: string, filename: string, filesize: number, filecount: number): spdlog.RotatingLogger {\n\tconst _spdlog: typeof spdlog = require.__$__nodeRequire('spdlog');\n\treturn _spdlog.createRotatingLogger(name, filename, filesize, filecount);\n}\n\ninterface ILog {\n\tlevel: LogLevel;\n\tmessage: string;\n}\n\nfunction log(logger: spdlog.RotatingLogger, level: LogLevel, message: string): void {\n\tswitch (level) {\n\t\tcase LogLevel.Trace: logger.trace(message); break;\n\t\tcase LogLevel.Debug: logger.debug(message); break;\n\t\tcase LogLevel.Info: logger.info(message); break;\n\t\tcase LogLevel.Warning: logger.warn(message); break;\n\t\tcase LogLevel.Error: logger.error(message); break;\n\t\tcase LogLevel.Critical: logger.critical(message); break;\n\t\tdefault: throw new Error('Invalid log level');\n\t}\n}\n\nexport class SpdLogService extends AbstractLogService implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate buffer: ILog[] = [];\n\tprivate _loggerCreationPromise: Promise<void> | undefined = undefined;\n\tprivate _logger: spdlog.RotatingLogger | undefined;\n\n\tconstructor(private readonly name: string, private readonly logsFolder: string, level: LogLevel) {\n\t\tsuper();\n\t\tthis.setLevel(level);\n\t\tthis._createSpdLogLogger();\n\t\tthis._register(this.onDidChangeLogLevel(level => {\n\t\t\tif (this._logger) {\n\t\t\t\tthis._logger.setLevel(level);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _createSpdLogLogger(): Promise<void> {\n\t\tif (!this._loggerCreationPromise) {\n\t\t\tthis._loggerCreationPromise = createSpdLogLogger(this.name, this.logsFolder)\n\t\t\t\t.then(logger => {\n\t\t\t\t\tif (logger) {\n\t\t\t\t\t\tthis._logger = logger;\n\t\t\t\t\t\tthis._logger.setLevel(this.getLevel());\n\t\t\t\t\t\tfor (const { level, message } of this.buffer) {\n\t\t\t\t\t\t\tlog(this._logger, level, message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.buffer = [];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t\treturn this._loggerCreationPromise;\n\t}\n\n\tprivate _log(level: LogLevel, message: string): void {\n\t\tif (this._logger) {\n\t\t\tlog(this._logger, level, message);\n\t\t} else if (this.getLevel() <= level) {\n\t\t\tthis.buffer.push({ level, message });\n\t\t}\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis._log(LogLevel.Trace, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis._log(LogLevel.Debug, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis._log(LogLevel.Info, this.format([message, ...args]));\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis._log(LogLevel.Warning, this.format([message, ...args]));\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\n\t\t\tif (message instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = message.stack;\n\t\t\t\tthis._log(LogLevel.Error, this.format(array));\n\t\t\t} else {\n\t\t\t\tthis._log(LogLevel.Error, this.format([message, ...args]));\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis._log(LogLevel.Critical, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.flush();\n\t\t} else if (this._loggerCreationPromise) {\n\t\t\tthis._loggerCreationPromise.then(() => this.flush());\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this._logger) {\n\t\t\tthis.disposeLogger();\n\t\t} else if (this._loggerCreationPromise) {\n\t\t\tthis._loggerCreationPromise.then(() => this.disposeLogger());\n\t\t}\n\t\tthis._loggerCreationPromise = undefined;\n\t}\n\n\tprivate disposeLogger(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.drop();\n\t\t\tthis._logger = undefined;\n\t\t}\n\t}\n\n\tprivate format(args: any): string {\n\t\tlet result = '';\n\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tlet a = args[i];\n\n\t\t\tif (typeof a === 'object') {\n\t\t\t\ttry {\n\t\t\t\t\ta = JSON.stringify(a);\n\t\t\t\t} catch (e) { }\n\t\t\t}\n\n\t\t\tresult += (i > 0 ? ' ' : '') + a;\n\t\t}\n\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport BaseSeverity from 'vs/base/common/severity';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IAction } from 'vs/base/common/actions';\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport import Severity = BaseSeverity;\n\nexport const INotificationService = createDecorator<INotificationService>('notificationService');\n\nexport type NotificationMessage = string | Error;\n\nexport interface INotificationProperties {\n\n\t/**\n\t * Sticky notifications are not automatically removed after a certain timeout. By\n\t * default, notifications with primary actions and severity error are always sticky.\n\t */\n\treadonly sticky?: boolean;\n\n\t/**\n\t * Silent notifications are not shown to the user unless the notification center\n\t * is opened. The status bar will still indicate all number of notifications to\n\t * catch some attention.\n\t */\n\treadonly silent?: boolean;\n\n\t/**\n\t * Adds an action to never show the notification again. The choice will be persisted\n\t * such as future requests will not cause the notification to show again.\n\t */\n\treadonly neverShowAgain?: INeverShowAgainOptions;\n}\n\nexport enum NeverShowAgainScope {\n\n\t/**\n\t * Will never show this notification on the current workspace again.\n\t */\n\tWORKSPACE,\n\n\t/**\n\t * Will never show this notification on any workspace again.\n\t */\n\tGLOBAL\n}\n\nexport interface INeverShowAgainOptions {\n\n\t/**\n\t * The id is used to persist the selection of not showing the notification again.\n\t */\n\treadonly id: string;\n\n\t/**\n\t * By default the action will show up as primary action. Setting this to true will\n\t * make it a secondary action instead.\n\t */\n\treadonly isSecondary?: boolean;\n\n\t/**\n\t * Whether to persist the choice in the current workspace or for all workspaces. By\n\t * default it will be persisted for all workspaces (= `NeverShowAgainScope.GLOBAL`).\n\t */\n\treadonly scope?: NeverShowAgainScope;\n}\n\nexport interface INotification extends INotificationProperties {\n\n\t/**\n\t * The severity of the notification. Either `Info`, `Warning` or `Error`.\n\t */\n\treadonly severity: Severity;\n\n\t/**\n\t * The message of the notification. This can either be a `string` or `Error`. Messages\n\t * can optionally include links in the format: `[text](link)`\n\t */\n\treadonly message: NotificationMessage;\n\n\t/**\n\t * The source of the notification appears as additional information.\n\t */\n\treadonly source?: string;\n\n\t/**\n\t * Actions to show as part of the notification. Primary actions show up as\n\t * buttons as part of the message and will close the notification once clicked.\n\t *\n\t * Secondary actions are meant to provide additional configuration or context\n\t * for the notification and will show up less prominent. A notification does not\n\t * close automatically when invoking a secondary action.\n\t *\n\t * **Note:** If your intent is to show a message with actions to the user, consider\n\t * the `INotificationService.prompt()` method instead which are optimized for\n\t * this usecase and much easier to use!\n\t */\n\tactions?: INotificationActions;\n\n\t/**\n\t * The initial set of progress properties for the notification. To update progress\n\t * later on, access the `INotificationHandle.progress` property.\n\t */\n\treadonly progress?: INotificationProgressProperties;\n}\n\nexport interface INotificationActions {\n\n\t/**\n\t * Primary actions show up as buttons as part of the message and will close\n\t * the notification once clicked.\n\t */\n\treadonly primary?: ReadonlyArray<IAction>;\n\n\t/**\n\t * Secondary actions are meant to provide additional configuration or context\n\t * for the notification and will show up less prominent. A notification does not\n\t * close automatically when invoking a secondary action.\n\t */\n\treadonly secondary?: ReadonlyArray<IAction>;\n}\n\nexport interface INotificationProgressProperties {\n\n\t/**\n\t * Causes the progress bar to spin infinitley.\n\t */\n\treadonly infinite?: boolean;\n\n\t/**\n\t * Indicate the total amount of work.\n\t */\n\treadonly total?: number;\n\n\t/**\n\t * Indicate that a specific chunk of work is done.\n\t */\n\treadonly worked?: number;\n}\n\nexport interface INotificationProgress {\n\n\t/**\n\t * Causes the progress bar to spin infinitley.\n\t */\n\tinfinite(): void;\n\n\t/**\n\t * Indicate the total amount of work.\n\t */\n\ttotal(value: number): void;\n\n\t/**\n\t * Indicate that a specific chunk of work is done.\n\t */\n\tworked(value: number): void;\n\n\t/**\n\t * Indicate that the long running operation is done.\n\t */\n\tdone(): void;\n}\n\nexport interface INotificationHandle {\n\n\t/**\n\t * Will be fired once the notification is closed.\n\t */\n\treadonly onDidClose: Event<void>;\n\n\t/**\n\t * Will be fired whenever the visibility of the notification changes.\n\t * A notification can either be visible as toast or inside the notification\n\t * center if it is visible.\n\t */\n\treadonly onDidChangeVisibility: Event<boolean>;\n\n\t/**\n\t * Allows to indicate progress on the notification even after the\n\t * notification is already visible.\n\t */\n\treadonly progress: INotificationProgress;\n\n\t/**\n\t * Allows to update the severity of the notification.\n\t */\n\tupdateSeverity(severity: Severity): void;\n\n\t/**\n\t * Allows to update the message of the notification even after the\n\t * notification is already visible.\n\t */\n\tupdateMessage(message: NotificationMessage): void;\n\n\t/**\n\t * Allows to update the actions of the notification even after the\n\t * notification is already visible.\n\t */\n\tupdateActions(actions?: INotificationActions): void;\n\n\t/**\n\t * Hide the notification and remove it from the notification center.\n\t */\n\tclose(): void;\n}\n\nexport interface IPromptChoice {\n\n\t/**\n\t * Label to show for the choice to the user.\n\t */\n\treadonly label: string;\n\n\t/**\n\t * Primary choices show up as buttons in the notification below the message.\n\t * Secondary choices show up under the gear icon in the header of the notification.\n\t */\n\treadonly isSecondary?: boolean;\n\n\t/**\n\t * Whether to keep the notification open after the choice was selected\n\t * by the user. By default, will close the notification upon click.\n\t */\n\treadonly keepOpen?: boolean;\n\n\t/**\n\t * Triggered when the user selects the choice.\n\t */\n\trun: () => void;\n}\n\nexport interface IPromptOptions extends INotificationProperties {\n\n\t/**\n\t * Will be called if the user closed the notification without picking\n\t * any of the provided choices.\n\t */\n\tonCancel?: () => void;\n}\n\nexport interface IStatusMessageOptions {\n\n\t/**\n\t * An optional timeout after which the status message should show. By default\n\t * the status message will show immediately.\n\t */\n\treadonly showAfter?: number;\n\n\t/**\n\t * An optional timeout after which the status message is to be hidden. By default\n\t * the status message will not hide until another status message is displayed.\n\t */\n\treadonly hideAfter?: number;\n}\n\nexport enum NotificationsFilter {\n\n\t/**\n\t * No filter is enabled.\n\t */\n\tOFF,\n\n\t/**\n\t * All notifications are configured as silent. See\n\t * `INotificationProperties.silent` for more info.\n\t */\n\tSILENT,\n\n\t/**\n\t * All notifications are silent except error notifications.\n\t*/\n\tERROR\n}\n\n/**\n * A service to bring up notifications and non-modal prompts.\n *\n * Note: use the `IDialogService` for a modal way to ask the user for input.\n */\nexport interface INotificationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Show the provided notification to the user. The returned `INotificationHandle`\n\t * can be used to control the notification afterwards.\n\t *\n\t * **Note:** If your intent is to show a message with actions to the user, consider\n\t * the `INotificationService.prompt()` method instead which are optimized for\n\t * this usecase and much easier to use!\n\t *\n\t * @returns a handle on the notification to e.g. hide it or update message, buttons, etc.\n\t */\n\tnotify(notification: INotification): INotificationHandle;\n\n\t/**\n\t * A convenient way of reporting infos. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\tinfo(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * A convenient way of reporting warnings. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\twarn(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * A convenient way of reporting errors. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\terror(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * Shows a prompt in the notification area with the provided choices. The prompt\n\t * is non-modal. If you want to show a modal dialog instead, use `IDialogService`.\n\t *\n\t * @param severity the severity of the notification. Either `Info`, `Warning` or `Error`.\n\t * @param message the message to show as status.\n\t * @param choices options to be choosen from.\n\t * @param options provides some optional configuration options.\n\t *\n\t * @returns a handle on the notification to e.g. hide it or update message, buttons, etc.\n\t */\n\tprompt(severity: Severity, message: string, choices: IPromptChoice[], options?: IPromptOptions): INotificationHandle;\n\n\t/**\n\t * Shows a status message in the status area with the provided text.\n\t *\n\t * @param message the message to show as status\n\t * @param options provides some optional configuration options\n\t *\n\t * @returns a disposable to hide the status message\n\t */\n\tstatus(message: NotificationMessage, options?: IStatusMessageOptions): IDisposable;\n\n\t/**\n\t * Allows to configure a filter for notifications.\n\t *\n\t * @param filter the filter to use\n\t */\n\tsetFilter(filter: NotificationsFilter): void;\n}\n\nexport class NoOpNotification implements INotificationHandle {\n\n\treadonly progress = new NoOpProgress();\n\n\treadonly onDidClose = Event.None;\n\treadonly onDidChangeVisibility = Event.None;\n\n\tupdateSeverity(severity: Severity): void { }\n\tupdateMessage(message: NotificationMessage): void { }\n\tupdateActions(actions?: INotificationActions): void { }\n\n\tclose(): void { }\n}\n\nexport class NoOpProgress implements INotificationProgress {\n\tinfinite(): void { }\n\tdone(): void { }\n\ttotal(value: number): void { }\n\tworked(value: number): void { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProductConfiguration } from 'vs/platform/product/common/productService';\nimport { isWeb } from 'vs/base/common/platform';\nimport * as path from 'vs/base/common/path';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { env } from 'vs/base/common/process';\n\nlet product: IProductConfiguration;\n\n// Web\nif (isWeb) {\n\n\t// Built time configuration (do NOT modify)\n\tproduct = { /*BUILD->INSERT_PRODUCT_CONFIGURATION*/ } as IProductConfiguration;\n\n\t// Running out of sources\n\tif (Object.keys(product).length === 0) {\n\t\tObject.assign(product, {\n\t\t\tversion: '1.48.0-dev',\n\t\t\tnameLong: 'Visual Studio Code Web Dev',\n\t\t\tnameShort: 'VSCode Web Dev',\n\t\t\turlProtocol: 'code-oss',\n\t\t\textensionAllowedProposedApi: [\n\t\t\t\t'ms-vscode.references-view',\n\t\t\t\t'ms-vscode.github-browser'\n\t\t\t],\n\t\t});\n\t}\n\t// NOTE@coder: Add the ability to inject settings from the server.\n\tconst el = document.getElementById('vscode-remote-product-configuration');\n\tconst rawProductConfiguration = el && el.getAttribute('data-settings');\n\tif (rawProductConfiguration) {\n\t\tObject.assign(product, JSON.parse(rawProductConfiguration));\n\t}\n}\n\n// Node: AMD loader\nelse if (typeof require !== 'undefined' && typeof require.__$__nodeRequire === 'function') {\n\n\t// Obtain values from product.json and package.json\n\tconst rootPath = path.dirname(getPathFromAmdModule(require, ''));\n\n\tproduct = require.__$__nodeRequire(path.join(rootPath, 'product.json'));\n\tconst pkg = require.__$__nodeRequire(path.join(rootPath, 'package.json')) as { version: string; };\n\n\t// Running out of sources\n\tif (env['VSCODE_DEV']) {\n\t\tObject.assign(product, {\n\t\t\tnameShort: `${product.nameShort} Dev`,\n\t\t\tnameLong: `${product.nameLong} Dev`,\n\t\t\tdataFolderName: `${product.dataFolderName}-dev`\n\t\t});\n\t}\n\n\tObject.assign(product, {\n\t\tversion: pkg.version\n\t});\n}\n\n// Unknown\nelse {\n\tthrow new Error('Unable to resolve product configuration');\n}\n\nexport default product;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentService, IDebugParams, IExtensionHostDebugParams, BACKUPS } from 'vs/platform/environment/common/environment';\nimport { ParsedArgs } from 'vs/platform/environment/node/argv';\nimport * as crypto from 'crypto';\nimport * as paths from 'vs/base/node/paths';\nimport * as os from 'os';\nimport * as path from 'vs/base/common/path';\nimport * as resources from 'vs/base/common/resources';\nimport { memoize } from 'vs/base/common/decorators';\nimport product from 'vs/platform/product/common/product';\nimport { toLocalISOString } from 'vs/base/common/date';\nimport { isWindows, isLinux, Platform, platform } from 'vs/base/common/platform';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { URI } from 'vs/base/common/uri';\n\nexport interface INativeEnvironmentService extends IEnvironmentService {\n\targs: ParsedArgs;\n\n\tappRoot: string;\n\texecPath: string;\n\n\tappSettingsHome: URI;\n\tuserDataPath: string;\n\tuserHome: URI;\n\tmachineSettingsResource: URI;\n\tbackupWorkspacesPath: string;\n\tnodeCachedDataDir?: string;\n\n\tmainIPCHandle: string;\n\tsharedIPCHandle: string;\n\n\tinstallSourcePath: string;\n\n\textensionsPath?: string;\n\textensionsDownloadPath: string;\n\tbuiltinExtensionsPath: string;\n\textraExtensionPaths: string[];\n\textraBuiltinExtensionPaths: string[];\n\n\tdriverHandle?: string;\n\tdriverVerbose: boolean;\n\n\tdisableUpdates: boolean;\n\n\tsandbox: boolean;\n}\n\nexport class EnvironmentService implements INativeEnvironmentService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tget args(): ParsedArgs { return this._args; }\n\n\t@memoize\n\tget appRoot(): string { return path.dirname(getPathFromAmdModule(require, '')); }\n\n\tget execPath(): string { return this._execPath; }\n\n\t@memoize\n\tget cliPath(): string { return getCLIPath(this.execPath, this.appRoot, this.isBuilt); }\n\n\treadonly logsPath: string;\n\n\t@memoize\n\tget userHome(): URI { return URI.file(os.homedir()); }\n\n\t@memoize\n\tget userDataPath(): string {\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn path.join(vscodePortable, 'user-data');\n\t\t}\n\n\t\treturn parseUserDataDir(this._args, process);\n\t}\n\n\t@memoize\n\tget appSettingsHome(): URI { return URI.file(path.join(this.userDataPath, 'User')); }\n\n\t@memoize\n\tget userRoamingDataHome(): URI { return this.appSettingsHome; }\n\n\t@memoize\n\tget settingsResource(): URI { return resources.joinPath(this.userRoamingDataHome, 'settings.json'); }\n\n\t@memoize\n\tget userDataSyncHome(): URI { return resources.joinPath(this.userRoamingDataHome, 'sync'); }\n\n\t@memoize\n\tget userDataSyncLogResource(): URI { return URI.file(path.join(this.logsPath, 'userDataSync.log')); }\n\n\t@memoize\n\tget sync(): 'on' | 'off' | undefined { return this.args.sync; }\n\n\t@memoize\n\tget enableSyncByDefault(): boolean { return false; }\n\n\t@memoize\n\tget machineSettingsResource(): URI { return resources.joinPath(URI.file(path.join(this.userDataPath, 'Machine')), 'settings.json'); }\n\n\t@memoize\n\tget globalStorageHome(): URI { return URI.joinPath(this.appSettingsHome, 'globalStorage'); }\n\n\t@memoize\n\tget workspaceStorageHome(): URI { return URI.joinPath(this.appSettingsHome, 'workspaceStorage'); }\n\n\t@memoize\n\tget keybindingsResource(): URI { return resources.joinPath(this.userRoamingDataHome, 'keybindings.json'); }\n\n\t@memoize\n\tget keyboardLayoutResource(): URI { return resources.joinPath(this.userRoamingDataHome, 'keyboardLayout.json'); }\n\n\t@memoize\n\tget argvResource(): URI {\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn URI.file(path.join(vscodePortable, 'argv.json'));\n\t\t}\n\n\t\treturn resources.joinPath(this.userHome, product.dataFolderName, 'argv.json');\n\t}\n\n\t@memoize\n\tget snippetsHome(): URI { return resources.joinPath(this.userRoamingDataHome, 'snippets'); }\n\n\t@memoize\n\tget isExtensionDevelopment(): boolean { return !!this._args.extensionDevelopmentPath; }\n\n\t@memoize\n\tget backupHome(): URI { return URI.file(path.join(this.userDataPath, BACKUPS)); }\n\n\t@memoize\n\tget backupWorkspacesPath(): string { return path.join(this.backupHome.fsPath, 'workspaces.json'); }\n\n\t@memoize\n\tget untitledWorkspacesHome(): URI { return URI.file(path.join(this.userDataPath, 'Workspaces')); }\n\n\t@memoize\n\tget installSourcePath(): string { return path.join(this.userDataPath, 'installSource'); }\n\n\t@memoize\n\tget builtinExtensionsPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['builtin-extensions-dir'], process);\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t} else {\n\t\t\treturn path.normalize(path.join(getPathFromAmdModule(require, ''), '..', 'extensions'));\n\t\t}\n\t}\n\n\tget extensionsDownloadPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['extensions-download-dir'], process);\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t} else {\n\t\t\treturn path.join(this.userDataPath, 'CachedExtensionVSIXs');\n\t\t}\n\t}\n\n\t@memoize\n\tget extensionsPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['extensions-dir'], process);\n\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t}\n\n\t\tconst vscodeExtensions = process.env['VSCODE_EXTENSIONS'];\n\t\tif (vscodeExtensions) {\n\t\t\treturn vscodeExtensions;\n\t\t}\n\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn path.join(vscodePortable, 'extensions');\n\t\t}\n\n\t\treturn resources.joinPath(this.userHome, product.dataFolderName, 'extensions').fsPath;\n\t}\n\n\t@memoize get extraExtensionPaths(): string[] {\n\t\treturn (this._args['extra-extensions-dir'] || []).map((p) => <string>parsePathArg(p, process));\n\t}\n\t@memoize get extraBuiltinExtensionPaths(): string[] {\n\t\treturn (this._args['extra-builtin-extensions-dir'] || []).map((p) => <string>parsePathArg(p, process));\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationURI(): URI[] | undefined {\n\t\tconst s = this._args.extensionDevelopmentPath;\n\t\tif (Array.isArray(s)) {\n\t\t\treturn s.map(p => {\n\t\t\t\tif (/^[^:/?#]+?:\\/\\//.test(p)) {\n\t\t\t\t\treturn URI.parse(p);\n\t\t\t\t}\n\t\t\t\treturn URI.file(path.normalize(p));\n\t\t\t});\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget extensionTestsLocationURI(): URI | undefined {\n\t\tconst s = this._args.extensionTestsPath;\n\t\tif (s) {\n\t\t\tif (/^[^:/?#]+?:\\/\\//.test(s)) {\n\t\t\t\treturn URI.parse(s);\n\t\t\t}\n\t\t\treturn URI.file(path.normalize(s));\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tget disableExtensions(): boolean | string[] {\n\t\tif (this._args['disable-extensions']) {\n\t\t\treturn true;\n\t\t}\n\t\tconst disableExtensions = this._args['disable-extension'];\n\t\tif (disableExtensions) {\n\t\t\tif (typeof disableExtensions === 'string') {\n\t\t\t\treturn [disableExtensions];\n\t\t\t}\n\t\t\tif (Array.isArray(disableExtensions) && disableExtensions.length > 0) {\n\t\t\t\treturn disableExtensions;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tget extensionEnabledProposedApi(): string[] | undefined {\n\t\tif (Array.isArray(this.args['enable-proposed-api'])) {\n\t\t\treturn this.args['enable-proposed-api'];\n\t\t}\n\n\t\tif ('enable-proposed-api' in this.args) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget debugExtensionHost(): IExtensionHostDebugParams { return parseExtensionHostPort(this._args, this.isBuilt); }\n\t@memoize\n\tget logExtensionHostCommunication(): boolean { return !!this.args.logExtensionHostCommunication; }\n\n\tget isBuilt(): boolean { return !process.env['VSCODE_DEV']; }\n\tget verbose(): boolean { return !!this._args.verbose; }\n\tget logLevel(): string | undefined { return this._args.log; }\n\n\t@memoize\n\tget mainIPCHandle(): string { return getIPCHandle(this.userDataPath, 'main'); }\n\n\t@memoize\n\tget sharedIPCHandle(): string { return getIPCHandle(this.userDataPath, 'shared'); }\n\n\t@memoize\n\tget nodeCachedDataDir(): string | undefined { return process.env['VSCODE_NODE_CACHED_DATA_DIR'] || undefined; }\n\n\t@memoize\n\tget serviceMachineIdResource(): URI { return resources.joinPath(URI.file(this.userDataPath), 'machineid'); }\n\n\tget disableUpdates(): boolean { return !!this._args['disable-updates']; }\n\tget disableCrashReporter(): boolean { return !!this._args['disable-crash-reporter']; }\n\tget crashReporterDirectory(): string | undefined { return this._args['crash-reporter-directory']; }\n\n\tget driverHandle(): string | undefined { return this._args['driver']; }\n\tget driverVerbose(): boolean { return !!this._args['driver-verbose']; }\n\n\tget disableTelemetry(): boolean { return !!this._args['disable-telemetry']; }\n\n\tget sandbox(): boolean { return !!this._args['__sandbox']; }\n\n\tconstructor(private _args: ParsedArgs, private _execPath: string) {\n\t\tif (!process.env['VSCODE_LOGS']) {\n\t\t\tconst key = toLocalISOString(new Date()).replace(/-|:|\\.\\d+Z$/g, '');\n\t\t\tprocess.env['VSCODE_LOGS'] = path.join(this.userDataPath, 'logs', key);\n\t\t}\n\n\t\tthis.logsPath = process.env['VSCODE_LOGS']!;\n\t}\n}\n\n// Read this before there's any chance it is overwritten\n// Related to https://github.com/Microsoft/vscode/issues/30624\nexport const xdgRuntimeDir = process.env['XDG_RUNTIME_DIR'];\n\nconst safeIpcPathLengths: { [platform: number]: number } = {\n\t[Platform.Linux]: 107,\n\t[Platform.Mac]: 103\n};\n\nfunction getNixIPCHandle(userDataPath: string, type: string): string {\n\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\n\tlet result: string;\n\tif (xdgRuntimeDir && !vscodePortable) {\n\t\tconst scope = crypto.createHash('md5').update(userDataPath).digest('hex').substr(0, 8);\n\t\tresult = path.join(xdgRuntimeDir, `vscode-${scope}-${product.version}-${type}.sock`);\n\t} else {\n\t\tresult = path.join(userDataPath, `${product.version}-${type}.sock`);\n\t}\n\n\tconst limit = safeIpcPathLengths[platform];\n\tif (typeof limit === 'number') {\n\t\tif (result.length >= limit) {\n\t\t\t// https://nodejs.org/api/net.html#net_identifying_paths_for_ipc_connections\n\t\t\tconsole.warn(`WARNING: IPC handle \"${result}\" is longer than ${limit} chars, try a shorter --user-data-dir`);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction getWin32IPCHandle(userDataPath: string, type: string): string {\n\tconst scope = crypto.createHash('md5').update(userDataPath).digest('hex');\n\n\treturn `\\\\\\\\.\\\\pipe\\\\${scope}-${product.version}-${type}-sock`;\n}\n\nfunction getIPCHandle(userDataPath: string, type: string): string {\n\tif (isWindows) {\n\t\treturn getWin32IPCHandle(userDataPath, type);\n\t}\n\n\treturn getNixIPCHandle(userDataPath, type);\n}\n\nfunction getCLIPath(execPath: string, appRoot: string, isBuilt: boolean): string {\n\n\t// Windows\n\tif (isWindows) {\n\t\tif (isBuilt) {\n\t\t\treturn path.join(path.dirname(execPath), 'bin', `${product.applicationName}.cmd`);\n\t\t}\n\n\t\treturn path.join(appRoot, 'scripts', 'code-cli.bat');\n\t}\n\n\t// Linux\n\tif (isLinux) {\n\t\tif (isBuilt) {\n\t\t\treturn path.join(path.dirname(execPath), 'bin', `${product.applicationName}`);\n\t\t}\n\n\t\treturn path.join(appRoot, 'scripts', 'code-cli.sh');\n\t}\n\n\t// macOS\n\tif (isBuilt) {\n\t\treturn path.join(appRoot, 'bin', 'code');\n\t}\n\n\treturn path.join(appRoot, 'scripts', 'code-cli.sh');\n}\n\nexport function parseExtensionHostPort(args: ParsedArgs, isBuild: boolean): IExtensionHostDebugParams {\n\treturn parseDebugPort(args['inspect-extensions'], args['inspect-brk-extensions'], 5870, isBuild, args.debugId);\n}\n\nexport function parseSearchPort(args: ParsedArgs, isBuild: boolean): IDebugParams {\n\treturn parseDebugPort(args['inspect-search'], args['inspect-brk-search'], 5876, isBuild);\n}\n\nfunction parseDebugPort(debugArg: string | undefined, debugBrkArg: string | undefined, defaultBuildPort: number, isBuild: boolean, debugId?: string): IExtensionHostDebugParams {\n\tconst portStr = debugBrkArg || debugArg;\n\tconst port = Number(portStr) || (!isBuild ? defaultBuildPort : null);\n\tconst brk = port ? Boolean(!!debugBrkArg) : false;\n\n\treturn { port, break: brk, debugId };\n}\n\nexport function parsePathArg(arg: string | undefined, process: NodeJS.Process): string | undefined {\n\tif (!arg) {\n\t\treturn undefined;\n\t}\n\n\t// Determine if the arg is relative or absolute, if relative use the original CWD\n\t// (VSCODE_CWD), not the potentially overridden one (process.cwd()).\n\tconst resolved = path.resolve(arg);\n\n\tif (path.normalize(arg) === resolved) {\n\t\treturn resolved;\n\t}\n\n\treturn path.resolve(process.env['VSCODE_CWD'] || process.cwd(), arg);\n}\n\nexport function parseUserDataDir(args: ParsedArgs, process: NodeJS.Process): string {\n\treturn parsePathArg(args['user-data-dir'], process) || path.resolve(paths.getDefaultUserDataPath(process.platform));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ExtensionKind } from 'vs/platform/extensions/common/extensions';\nimport { IStringDictionary } from 'vs/base/common/collections';\n\nexport const IProductService = createDecorator<IProductService>('productService');\n\nexport interface IProductService extends Readonly<IProductConfiguration> {\n\n\treadonly _serviceBrand: undefined;\n\n}\n\nexport interface IBuiltInExtension {\n\treadonly name: string;\n\treadonly version: string;\n\treadonly repo: string;\n\treadonly metadata: any;\n}\n\nexport type ConfigurationSyncStore = {\n\turl: string,\n\tinsidersUrl?: string,\n\tstableUrl?: string,\n\tauthenticationProviders: IStringDictionary<{ scopes: string[] }>\n};\n\nexport interface IProductConfiguration {\n\treadonly codeServerVersion?: string;\n\n\treadonly version: string;\n\treadonly date?: string;\n\treadonly quality?: string;\n\treadonly commit?: string;\n\n\treadonly nameShort: string;\n\treadonly nameLong: string;\n\n\treadonly win32AppUserModelId?: string;\n\treadonly win32MutexName?: string;\n\treadonly applicationName: string;\n\n\treadonly urlProtocol: string;\n\treadonly dataFolderName: string;\n\n\treadonly builtInExtensions?: IBuiltInExtension[];\n\n\treadonly downloadUrl?: string;\n\treadonly updateUrl?: string;\n\treadonly target?: string;\n\n\treadonly settingsSearchBuildId?: number;\n\treadonly settingsSearchUrl?: string;\n\n\treadonly tasConfig?: {\n\t\tendpoint: string;\n\t\ttelemetryEventName: string;\n\t\tfeaturesTelemetryPropertyName: string;\n\t\tassignmentContextTelemetryPropertyName: string;\n\t};\n\n\treadonly experimentsUrl?: string;\n\n\treadonly extensionsGallery?: {\n\t\treadonly serviceUrl: string;\n\t\treadonly itemUrl: string;\n\t\treadonly controlUrl: string;\n\t\treadonly recommendationsUrl: string;\n\t};\n\n\treadonly extensionTips?: { [id: string]: string; };\n\treadonly extensionImportantTips?: { [id: string]: { name: string; pattern: string; isExtensionPack?: boolean }; };\n\treadonly configBasedExtensionTips?: { [id: string]: IConfigBasedExtensionTip; };\n\treadonly exeBasedExtensionTips?: { [id: string]: IExeBasedExtensionTip; };\n\treadonly remoteExtensionTips?: { [remoteName: string]: IRemoteExtensionTip; };\n\treadonly extensionKeywords?: { [extension: string]: readonly string[]; };\n\treadonly keymapExtensionTips?: readonly string[];\n\n\treadonly crashReporter?: {\n\t\treadonly companyName: string;\n\t\treadonly productName: string;\n\t};\n\n\treadonly enableTelemetry?: boolean;\n\treadonly aiConfig?: {\n\t\treadonly asimovKey: string;\n\t};\n\n\treadonly sendASmile?: {\n\t\treadonly reportIssueUrl: string,\n\t\treadonly requestFeatureUrl: string\n\t};\n\n\treadonly documentationUrl?: string;\n\treadonly releaseNotesUrl?: string;\n\treadonly keyboardShortcutsUrlMac?: string;\n\treadonly keyboardShortcutsUrlLinux?: string;\n\treadonly keyboardShortcutsUrlWin?: string;\n\treadonly introductoryVideosUrl?: string;\n\treadonly tipsAndTricksUrl?: string;\n\treadonly newsletterSignupUrl?: string;\n\treadonly twitterUrl?: string;\n\treadonly requestFeatureUrl?: string;\n\treadonly reportIssueUrl?: string;\n\treadonly licenseUrl?: string;\n\treadonly privacyStatementUrl?: string;\n\treadonly telemetryOptOutUrl?: string;\n\n\treadonly npsSurveyUrl?: string;\n\treadonly surveys?: readonly ISurveyData[];\n\n\treadonly checksums?: { [path: string]: string; };\n\treadonly checksumFailMoreInfoUrl?: string;\n\n\treadonly appCenter?: IAppCenterConfiguration;\n\n\treadonly portable?: string;\n\n\treadonly extensionKind?: { readonly [extensionId: string]: ExtensionKind[]; };\n\treadonly extensionAllowedProposedApi?: readonly string[];\n\n\treadonly msftInternalDomains?: string[];\n\treadonly linkProtectionTrustedDomains?: readonly string[];\n\n\treadonly 'configurationSync.store'?: ConfigurationSyncStore;\n}\n\nexport interface IAppCenterConfiguration {\n\treadonly 'win32-ia32': string;\n\treadonly 'win32-x64': string;\n\treadonly 'linux-x64': string;\n\treadonly 'darwin': string;\n}\n\nexport interface IConfigBasedExtensionTip {\n\tconfigPath: string;\n\tconfigName: string;\n\trecommendations: IStringDictionary<{ name: string, remotes?: string[], important?: boolean, isExtensionPack?: boolean }>;\n}\n\nexport interface IExeBasedExtensionTip {\n\tfriendlyName: string;\n\twindowsPath?: string;\n\trecommendations: IStringDictionary<{ name: string, important?: boolean, isExtensionPack?: boolean }>;\n}\n\nexport interface IRemoteExtensionTip {\n\tfriendlyName: string;\n\textensionId: string;\n}\n\nexport interface ISurveyData {\n\tsurveyId: string;\n\tsurveyUrl: string;\n\tlanguageId: string;\n\teditCount: number;\n\tuserProbability: number;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Types from 'vs/base/common/types';\nimport * as Assert from 'vs/base/common/assert';\n\nexport interface IRegistry {\n\n\t/**\n\t * Adds the extension functions and properties defined by data to the\n\t * platform. The provided id must be unique.\n\t * @param id a unique identifier\n\t * @param data a contribution\n\t */\n\tadd(id: string, data: any): void;\n\n\t/**\n\t * Returns true iff there is an extension with the provided id.\n\t * @param id an extension identifier\n\t */\n\tknows(id: string): boolean;\n\n\t/**\n\t * Returns the extension functions and properties defined by the specified key or null.\n\t * @param id an extension identifier\n\t */\n\tas<T>(id: string): T;\n}\n\nclass RegistryImpl implements IRegistry {\n\n\tprivate readonly data = new Map<string, any>();\n\n\tpublic add(id: string, data: any): void {\n\t\tAssert.ok(Types.isString(id));\n\t\tAssert.ok(Types.isObject(data));\n\t\tAssert.ok(!this.data.has(id), 'There is already an extension with this id');\n\n\t\tthis.data.set(id, data);\n\t}\n\n\tpublic knows(id: string): boolean {\n\t\treturn this.data.has(id);\n\t}\n\n\tpublic as(id: string): any {\n\t\treturn this.data.get(id) || null;\n\t}\n}\n\nexport const Registry: IRegistry = new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport * as platform from 'vs/platform/registry/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\n\nexport const Extensions = {\n\tJSONContribution: 'base.contributions.json'\n};\n\nexport interface ISchemaContributions {\n\tschemas: { [id: string]: IJSONSchema };\n}\n\nexport interface IJSONContributionRegistry {\n\n\treadonly onDidChangeSchema: Event<string>;\n\n\t/**\n\t * Register a schema to the registry.\n\t */\n\tregisterSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void;\n\n\n\t/**\n\t * Notifies all listeners that the content of the given schema has changed.\n\t * @param uri The id of the schema\n\t */\n\tnotifySchemaChanged(uri: string): void;\n\n\t/**\n\t * Get all schemas\n\t */\n\tgetSchemaContributions(): ISchemaContributions;\n}\n\n\n\nfunction normalizeId(id: string) {\n\tif (id.length > 0 && id.charAt(id.length - 1) === '#') {\n\t\treturn id.substring(0, id.length - 1);\n\t}\n\treturn id;\n}\n\n\n\nclass JSONContributionRegistry implements IJSONContributionRegistry {\n\n\tprivate schemasById: { [id: string]: IJSONSchema };\n\n\tprivate readonly _onDidChangeSchema = new Emitter<string>();\n\treadonly onDidChangeSchema: Event<string> = this._onDidChangeSchema.event;\n\n\tconstructor() {\n\t\tthis.schemasById = {};\n\t}\n\n\tpublic registerSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void {\n\t\tthis.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic notifySchemaChanged(uri: string): void {\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic getSchemaContributions(): ISchemaContributions {\n\t\treturn {\n\t\t\tschemas: this.schemasById,\n\t\t};\n\t}\n\n}\n\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport * as types from 'vs/base/common/types';\nimport { IJSONContributionRegistry, Extensions as JSONExtensions } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { IStringDictionary } from 'vs/base/common/collections';\n\nexport const Extensions = {\n\tConfiguration: 'base.contributions.configuration'\n};\n\nexport interface IConfigurationRegistry {\n\n\t/**\n\t * Register a configuration to the registry.\n\t */\n\tregisterConfiguration(configuration: IConfigurationNode): void;\n\n\t/**\n\t * Register multiple configurations to the registry.\n\t */\n\tregisterConfigurations(configurations: IConfigurationNode[], validate?: boolean): void;\n\n\t/**\n\t * Deregister multiple configurations from the registry.\n\t */\n\tderegisterConfigurations(configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Register multiple default configurations to the registry.\n\t */\n\tregisterDefaultConfigurations(defaultConfigurations: IStringDictionary<any>[]): void;\n\n\t/**\n\t * Deregister multiple default configurations from the registry.\n\t */\n\tderegisterDefaultConfigurations(defaultConfigurations: IStringDictionary<any>[]): void;\n\n\t/**\n\t * Signal that the schema of a configuration setting has changes. It is currently only supported to change enumeration values.\n\t * Property or default value changes are not allowed.\n\t */\n\tnotifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidSchemaChange: Event<void>;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidUpdateConfiguration: Event<string[]>;\n\n\t/**\n\t * Returns all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurations(): IConfigurationNode[];\n\n\t/**\n\t * Returns all configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Returns all excluded configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Register the identifiers for editor configurations\n\t */\n\tregisterOverrideIdentifiers(identifiers: string[]): void;\n}\n\nexport const enum ConfigurationScope {\n\t/**\n\t * Application specific configuration, which can be configured only in local user settings.\n\t */\n\tAPPLICATION = 1,\n\t/**\n\t * Machine specific configuration, which can be configured only in local and remote user settings.\n\t */\n\tMACHINE,\n\t/**\n\t * Window specific configuration, which can be configured in the user or workspace settings.\n\t */\n\tWINDOW,\n\t/**\n\t * Resource specific configuration, which can be configured in the user, workspace or folder settings.\n\t */\n\tRESOURCE,\n\t/**\n\t * Resource specific configuration that can be configured in language specific settings\n\t */\n\tLANGUAGE_OVERRIDABLE,\n\t/**\n\t * Machine specific configuration that can also be configured in workspace or folder settings.\n\t */\n\tMACHINE_OVERRIDABLE,\n}\n\nexport interface IConfigurationPropertySchema extends IJSONSchema {\n\tscope?: ConfigurationScope;\n\tincluded?: boolean;\n\ttags?: string[];\n\tdisallowSyncIgnore?: boolean;\n}\n\nexport interface IConfigurationExtensionInfo {\n\tid: string;\n}\n\nexport interface IConfigurationNode {\n\tid?: string;\n\torder?: number;\n\ttype?: string | string[];\n\ttitle?: string;\n\tdescription?: string;\n\tproperties?: { [path: string]: IConfigurationPropertySchema; };\n\tallOf?: IConfigurationNode[];\n\tscope?: ConfigurationScope;\n\textensionInfo?: IConfigurationExtensionInfo;\n}\n\ntype SettingProperties = { [key: string]: any };\n\nexport const allSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const applicationSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const machineSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const machineOverridableSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const windowSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const resourceSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\n\nexport const resourceLanguageSettingsSchemaId = 'vscode://schemas/settings/resourceLanguage';\n\nconst contributionRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\nclass ConfigurationRegistry implements IConfigurationRegistry {\n\n\tprivate readonly defaultValues: IStringDictionary<any>;\n\tprivate readonly defaultLanguageConfigurationOverridesNode: IConfigurationNode;\n\tprivate readonly configurationContributors: IConfigurationNode[];\n\tprivate readonly configurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly excludedConfigurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly resourceLanguageSettingsSchema: IJSONSchema;\n\tprivate readonly overrideIdentifiers = new Set<string>();\n\n\tprivate readonly _onDidSchemaChange = new Emitter<void>();\n\treadonly onDidSchemaChange: Event<void> = this._onDidSchemaChange.event;\n\n\tprivate readonly _onDidUpdateConfiguration: Emitter<string[]> = new Emitter<string[]>();\n\treadonly onDidUpdateConfiguration: Event<string[]> = this._onDidUpdateConfiguration.event;\n\n\tconstructor() {\n\t\tthis.defaultValues = {};\n\t\tthis.defaultLanguageConfigurationOverridesNode = {\n\t\t\tid: 'defaultOverrides',\n\t\t\ttitle: nls.localize('defaultLanguageConfigurationOverrides.title', \"Default Language Configuration Overrides\"),\n\t\t\tproperties: {}\n\t\t};\n\t\tthis.configurationContributors = [this.defaultLanguageConfigurationOverridesNode];\n\t\tthis.resourceLanguageSettingsSchema = { properties: {}, patternProperties: {}, additionalProperties: false, errorMessage: 'Unknown editor configuration setting', allowTrailingCommas: true, allowComments: true };\n\t\tthis.configurationProperties = {};\n\t\tthis.excludedConfigurationProperties = {};\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t}\n\n\tpublic registerConfiguration(configuration: IConfigurationNode, validate: boolean = true): void {\n\t\tthis.registerConfigurations([configuration], validate);\n\t}\n\n\tpublic registerConfigurations(configurations: IConfigurationNode[], validate: boolean = true): void {\n\t\tconst properties: string[] = [];\n\t\tconfigurations.forEach(configuration => {\n\t\t\tproperties.push(...this.validateAndRegisterProperties(configuration, validate)); // fills in defaults\n\t\t\tthis.configurationContributors.push(configuration);\n\t\t\tthis.registerJSONConfiguration(configuration);\n\t\t});\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterConfigurations(configurations: IConfigurationNode[]): void {\n\t\tconst properties: string[] = [];\n\t\tconst deregisterConfiguration = (configuration: IConfigurationNode) => {\n\t\t\tif (configuration.properties) {\n\t\t\t\tfor (const key in configuration.properties) {\n\t\t\t\t\tproperties.push(key);\n\t\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t\t\tthis.removeFromSchema(key, configuration.properties[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (configuration.allOf) {\n\t\t\t\tconfiguration.allOf.forEach(node => deregisterConfiguration(node));\n\t\t\t}\n\t\t};\n\t\tfor (const configuration of configurations) {\n\t\t\tderegisterConfiguration(configuration);\n\t\t\tconst index = this.configurationContributors.indexOf(configuration);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.configurationContributors.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic registerDefaultConfigurations(defaultConfigurations: IStringDictionary<any>[]): void {\n\t\tconst properties: string[] = [];\n\t\tconst overrideIdentifiers: string[] = [];\n\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration) {\n\t\t\t\tproperties.push(key);\n\t\t\t\tthis.defaultValues[key] = defaultConfiguration[key];\n\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\t\tconst property: IConfigurationPropertySchema = {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tdefault: this.defaultValues[key],\n\t\t\t\t\t\tdescription: nls.localize('defaultLanguageConfiguration.description', \"Configure settings to be overridden for {0} language.\", key),\n\t\t\t\t\t\t$ref: resourceLanguageSettingsSchemaId\n\t\t\t\t\t};\n\t\t\t\t\toverrideIdentifiers.push(overrideIdentifierFromKey(key));\n\t\t\t\t\tthis.configurationProperties[key] = property;\n\t\t\t\t\tthis.defaultLanguageConfigurationOverridesNode.properties![key] = property;\n\t\t\t\t} else {\n\t\t\t\t\tconst property = this.configurationProperties[key];\n\t\t\t\t\tif (property) {\n\t\t\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\t\t\t\t\t\tthis.updateSchema(key, property);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.registerOverrideIdentifiers(overrideIdentifiers);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterDefaultConfigurations(defaultConfigurations: IStringDictionary<any>[]): void {\n\t\tconst properties: string[] = [];\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration) {\n\t\t\t\tproperties.push(key);\n\t\t\t\tdelete this.defaultValues[key];\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t\t\tdelete this.defaultLanguageConfigurationOverridesNode.properties![key];\n\t\t\t\t} else {\n\t\t\t\t\tconst property = this.configurationProperties[key];\n\t\t\t\t\tif (property) {\n\t\t\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\t\t\t\t\t\tthis.updateSchema(key, property);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.updateOverridePropertyPatternKey();\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic notifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]) {\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tpublic registerOverrideIdentifiers(overrideIdentifiers: string[]): void {\n\t\tfor (const overrideIdentifier of overrideIdentifiers) {\n\t\t\tthis.overrideIdentifiers.add(overrideIdentifier);\n\t\t}\n\t\tthis.updateOverridePropertyPatternKey();\n\t}\n\n\tprivate validateAndRegisterProperties(configuration: IConfigurationNode, validate: boolean = true, scope: ConfigurationScope = ConfigurationScope.WINDOW): string[] {\n\t\tscope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n\t\tlet propertyKeys: string[] = [];\n\t\tlet properties = configuration.properties;\n\t\tif (properties) {\n\t\t\tfor (let key in properties) {\n\t\t\t\tif (validate && validateProperty(key)) {\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst property = properties[key];\n\n\t\t\t\t// update default value\n\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\n\t\t\t\t// update scope\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\t\tproperty.scope = undefined; // No scope for overridable properties `[${identifier}]`\n\t\t\t\t} else {\n\t\t\t\t\tproperty.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n\t\t\t\t}\n\n\t\t\t\t// Add to properties maps\n\t\t\t\t// Property is included by default if 'included' is unspecified\n\t\t\t\tif (properties[key].hasOwnProperty('included') && !properties[key].included) {\n\t\t\t\t\tthis.excludedConfigurationProperties[key] = properties[key];\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tthis.configurationProperties[key] = properties[key];\n\t\t\t\t}\n\n\t\t\t\tif (!properties[key].deprecationMessage && properties[key].markdownDeprecationMessage) {\n\t\t\t\t\t// If not set, default deprecationMessage to the markdown source\n\t\t\t\t\tproperties[key].deprecationMessage = properties[key].markdownDeprecationMessage;\n\t\t\t\t}\n\n\t\t\t\tpropertyKeys.push(key);\n\t\t\t}\n\t\t}\n\t\tlet subNodes = configuration.allOf;\n\t\tif (subNodes) {\n\t\t\tfor (let node of subNodes) {\n\t\t\t\tpropertyKeys.push(...this.validateAndRegisterProperties(node, validate, scope));\n\t\t\t}\n\t\t}\n\t\treturn propertyKeys;\n\t}\n\n\tgetConfigurations(): IConfigurationNode[] {\n\t\treturn this.configurationContributors;\n\t}\n\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.configurationProperties;\n\t}\n\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.excludedConfigurationProperties;\n\t}\n\n\tprivate registerJSONConfiguration(configuration: IConfigurationNode) {\n\t\tconst register = (configuration: IConfigurationNode) => {\n\t\t\tlet properties = configuration.properties;\n\t\t\tif (properties) {\n\t\t\t\tfor (const key in properties) {\n\t\t\t\t\tthis.updateSchema(key, properties[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet subNodes = configuration.allOf;\n\t\t\tif (subNodes) {\n\t\t\t\tsubNodes.forEach(register);\n\t\t\t}\n\t\t};\n\t\tregister(configuration);\n\t}\n\n\tprivate updateSchema(key: string, property: IConfigurationPropertySchema): void {\n\t\tallSettings.properties[key] = property;\n\t\tswitch (property.scope) {\n\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\tapplicationSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\tmachineSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\tmachineOverridableSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\twindowSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\tresourceSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\tresourceSettings.properties[key] = property;\n\t\t\t\tthis.resourceLanguageSettingsSchema.properties![key] = property;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate removeFromSchema(key: string, property: IConfigurationPropertySchema): void {\n\t\tdelete allSettings.properties[key];\n\t\tswitch (property.scope) {\n\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\tdelete applicationSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\tdelete machineSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\tdelete machineOverridableSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\tdelete windowSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\tdelete resourceSettings.properties[key];\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate updateOverridePropertyPatternKey(): void {\n\t\tfor (const overrideIdentifier of this.overrideIdentifiers.values()) {\n\t\t\tconst overrideIdentifierProperty = `[${overrideIdentifier}]`;\n\t\t\tconst resourceLanguagePropertiesSchema: IJSONSchema = {\n\t\t\t\ttype: 'object',\n\t\t\t\tdescription: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n\t\t\t\terrorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n\t\t\t\t$ref: resourceLanguageSettingsSchemaId,\n\t\t\t};\n\t\t\tthis.updatePropertyDefaultValue(overrideIdentifierProperty, resourceLanguagePropertiesSchema);\n\t\t\tallSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tapplicationSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineOverridableSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\twindowSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tresourceSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t}\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tprivate updatePropertyDefaultValue(key: string, property: IConfigurationPropertySchema): void {\n\t\tlet defaultValue = this.defaultValues[key];\n\t\tif (types.isUndefined(defaultValue)) {\n\t\t\tdefaultValue = property.default;\n\t\t}\n\t\tif (types.isUndefined(defaultValue)) {\n\t\t\tdefaultValue = getDefaultValue(property.type);\n\t\t}\n\t\tproperty.default = defaultValue;\n\t}\n}\n\nconst OVERRIDE_PROPERTY = '\\\\[.*\\\\]$';\nexport const OVERRIDE_PROPERTY_PATTERN = new RegExp(OVERRIDE_PROPERTY);\n\nexport function overrideIdentifierFromKey(key: string): string {\n\treturn key.substring(1, key.length - 1);\n}\n\nexport function getDefaultValue(type: string | string[] | undefined): any {\n\tconst t = Array.isArray(type) ? (<string[]>type)[0] : <string>type;\n\tswitch (t) {\n\t\tcase 'boolean':\n\t\t\treturn false;\n\t\tcase 'integer':\n\t\tcase 'number':\n\t\t\treturn 0;\n\t\tcase 'string':\n\t\t\treturn '';\n\t\tcase 'array':\n\t\t\treturn [];\n\t\tcase 'object':\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\n\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\n\nexport function validateProperty(property: string): string | null {\n\tif (OVERRIDE_PROPERTY_PATTERN.test(property)) {\n\t\treturn nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n\t}\n\tif (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n\t\treturn nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n\t}\n\treturn null;\n}\n\nexport function getScopes(): [string, ConfigurationScope | undefined][] {\n\tconst scopes: [string, ConfigurationScope | undefined][] = [];\n\tconst configurationProperties = configurationRegistry.getConfigurationProperties();\n\tfor (const key of Object.keys(configurationProperties)) {\n\t\tscopes.push([key, configurationProperties[key].scope]);\n\t}\n\tscopes.push(['launch', ConfigurationScope.RESOURCE]);\n\tscopes.push(['task', ConfigurationScope.RESOURCE]);\n\treturn scopes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as objects from 'vs/base/common/objects';\nimport * as types from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { Event } from 'vs/base/common/event';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationRegistry, Extensions, OVERRIDE_PROPERTY_PATTERN, overrideIdentifierFromKey } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IStringDictionary } from 'vs/base/common/collections';\n\nexport const IConfigurationService = createDecorator<IConfigurationService>('configurationService');\n\nexport function isConfigurationOverrides(thing: any): thing is IConfigurationOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport interface IConfigurationOverrides {\n\toverrideIdentifier?: string | null;\n\tresource?: URI | null;\n}\n\nexport const enum ConfigurationTarget {\n\tUSER = 1,\n\tUSER_LOCAL,\n\tUSER_REMOTE,\n\tWORKSPACE,\n\tWORKSPACE_FOLDER,\n\tDEFAULT,\n\tMEMORY\n}\nexport function ConfigurationTargetToString(configurationTarget: ConfigurationTarget) {\n\tswitch (configurationTarget) {\n\t\tcase ConfigurationTarget.USER: return 'USER';\n\t\tcase ConfigurationTarget.USER_LOCAL: return 'USER_LOCAL';\n\t\tcase ConfigurationTarget.USER_REMOTE: return 'USER_REMOTE';\n\t\tcase ConfigurationTarget.WORKSPACE: return 'WORKSPACE';\n\t\tcase ConfigurationTarget.WORKSPACE_FOLDER: return 'WORKSPACE_FOLDER';\n\t\tcase ConfigurationTarget.DEFAULT: return 'DEFAULT';\n\t\tcase ConfigurationTarget.MEMORY: return 'MEMORY';\n\t}\n}\n\nexport interface IConfigurationChange {\n\tkeys: string[];\n\toverrides: [string, string[]][];\n}\n\nexport interface IConfigurationChangeEvent {\n\n\treadonly source: ConfigurationTarget;\n\treadonly affectedKeys: string[];\n\treadonly change: IConfigurationChange;\n\n\taffectsConfiguration(configuration: string, overrides?: IConfigurationOverrides): boolean;\n\n\t// Following data is used for telemetry\n\treadonly sourceConfig: any;\n}\n\nexport interface IConfigurationValue<T> {\n\n\treadonly defaultValue?: T;\n\treadonly userValue?: T;\n\treadonly userLocalValue?: T;\n\treadonly userRemoteValue?: T;\n\treadonly workspaceValue?: T;\n\treadonly workspaceFolderValue?: T;\n\treadonly memoryValue?: T;\n\treadonly value?: T;\n\n\treadonly default?: { value?: T, override?: T };\n\treadonly user?: { value?: T, override?: T };\n\treadonly userLocal?: { value?: T, override?: T };\n\treadonly userRemote?: { value?: T, override?: T };\n\treadonly workspace?: { value?: T, override?: T };\n\treadonly workspaceFolder?: { value?: T, override?: T };\n\treadonly memory?: { value?: T, override?: T };\n\n\treadonly overrideIdentifiers?: string[];\n}\n\nexport interface IConfigurationService {\n\treadonly _serviceBrand: undefined;\n\n\tonDidChangeConfiguration: Event<IConfigurationChangeEvent>;\n\n\tgetConfigurationData(): IConfigurationData | null;\n\n\t/**\n\t * Fetches the value of the section for the given overrides.\n\t * Value can be of native type or an object keyed off the section name.\n\t *\n\t * @param section - Section of the configuraion. Can be `null` or `undefined`.\n\t * @param overrides - Overrides that has to be applied while fetching\n\t *\n\t */\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget, donotNotifyError?: boolean): Promise<void>;\n\n\tinspect<T>(key: string, overrides?: IConfigurationOverrides): IConfigurationValue<T>;\n\n\treloadConfiguration(folder?: IWorkspaceFolder): Promise<void>;\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t\tmemory?: string[];\n\t};\n}\n\nexport interface IConfigurationModel {\n\tcontents: any;\n\tkeys: string[];\n\toverrides: IOverrides[];\n}\n\nexport interface IOverrides {\n\tkeys: string[];\n\tcontents: any;\n\tidentifiers: string[];\n}\n\nexport interface IConfigurationData {\n\tdefaults: IConfigurationModel;\n\tuser: IConfigurationModel;\n\tworkspace: IConfigurationModel;\n\tfolders: [UriComponents, IConfigurationModel][];\n}\n\nexport interface IConfigurationCompareResult {\n\tadded: string[];\n\tremoved: string[];\n\tupdated: string[];\n\toverrides: [string, string[]][];\n}\n\nexport function compare(from: IConfigurationModel | undefined, to: IConfigurationModel | undefined): IConfigurationCompareResult {\n\tconst added = to\n\t\t? from ? to.keys.filter(key => from.keys.indexOf(key) === -1) : [...to.keys]\n\t\t: [];\n\tconst removed = from\n\t\t? to ? from.keys.filter(key => to.keys.indexOf(key) === -1) : [...from.keys]\n\t\t: [];\n\tconst updated: string[] = [];\n\n\tif (to && from) {\n\t\tfor (const key of from.keys) {\n\t\t\tif (to.keys.indexOf(key) !== -1) {\n\t\t\t\tconst value1 = getConfigurationValue(from.contents, key);\n\t\t\t\tconst value2 = getConfigurationValue(to.contents, key);\n\t\t\t\tif (!objects.equals(value1, value2)) {\n\t\t\t\t\tupdated.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst overrides: [string, string[]][] = [];\n\tconst byOverrideIdentifier = (overrides: IOverrides[]): IStringDictionary<IOverrides> => {\n\t\tconst result: IStringDictionary<IOverrides> = {};\n\t\tfor (const override of overrides) {\n\t\t\tfor (const identifier of override.identifiers) {\n\t\t\t\tresult[keyFromOverrideIdentifier(identifier)] = override;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\tconst toOverridesByIdentifier: IStringDictionary<IOverrides> = to ? byOverrideIdentifier(to.overrides) : {};\n\tconst fromOverridesByIdentifier: IStringDictionary<IOverrides> = from ? byOverrideIdentifier(from.overrides) : {};\n\n\tif (Object.keys(toOverridesByIdentifier).length) {\n\t\tfor (const key of added) {\n\t\t\tconst override = toOverridesByIdentifier[key];\n\t\t\tif (override) {\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), override.keys]);\n\t\t\t}\n\t\t}\n\t}\n\tif (Object.keys(fromOverridesByIdentifier).length) {\n\t\tfor (const key of removed) {\n\t\t\tconst override = fromOverridesByIdentifier[key];\n\t\t\tif (override) {\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), override.keys]);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (Object.keys(toOverridesByIdentifier).length && Object.keys(fromOverridesByIdentifier).length) {\n\t\tfor (const key of updated) {\n\t\t\tconst fromOverride = fromOverridesByIdentifier[key];\n\t\t\tconst toOverride = toOverridesByIdentifier[key];\n\t\t\tif (fromOverride && toOverride) {\n\t\t\t\tconst result = compare({ contents: fromOverride.contents, keys: fromOverride.keys, overrides: [] }, { contents: toOverride.contents, keys: toOverride.keys, overrides: [] });\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), [...result.added, ...result.removed, ...result.updated]]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { added, removed, updated, overrides };\n}\n\nexport function toOverrides(raw: any, conflictReporter: (message: string) => void): IOverrides[] {\n\tconst overrides: IOverrides[] = [];\n\tfor (const key of Object.keys(raw)) {\n\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\tconst overrideRaw: any = {};\n\t\t\tfor (const keyInOverrideRaw in raw[key]) {\n\t\t\t\toverrideRaw[keyInOverrideRaw] = raw[key][keyInOverrideRaw];\n\t\t\t}\n\t\t\toverrides.push({\n\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\tkeys: Object.keys(overrideRaw),\n\t\t\t\tcontents: toValuesTree(overrideRaw, conflictReporter)\n\t\t\t});\n\t\t}\n\t}\n\treturn overrides;\n}\n\nexport function toValuesTree(properties: { [qualifiedKey: string]: any }, conflictReporter: (message: string) => void): any {\n\tconst root = Object.create(null);\n\n\tfor (let key in properties) {\n\t\taddToValueTree(root, key, properties[key], conflictReporter);\n\t}\n\n\treturn root;\n}\n\nexport function addToValueTree(settingsTreeRoot: any, key: string, value: any, conflictReporter: (message: string) => void): void {\n\tconst segments = key.split('.');\n\tconst last = segments.pop()!;\n\n\tlet curr = settingsTreeRoot;\n\tfor (let i = 0; i < segments.length; i++) {\n\t\tlet s = segments[i];\n\t\tlet obj = curr[s];\n\t\tswitch (typeof obj) {\n\t\t\tcase 'undefined':\n\t\t\t\tobj = curr[s] = Object.create(null);\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n\t\t\t\treturn;\n\t\t}\n\t\tcurr = obj;\n\t}\n\n\tif (typeof curr === 'object' && curr !== null) {\n\t\ttry {\n\t\t\tcurr[last] = value; // workaround https://github.com/Microsoft/vscode/issues/13606\n\t\t} catch (e) {\n\t\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t\t}\n\t} else {\n\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t}\n}\n\nexport function removeFromValueTree(valueTree: any, key: string): void {\n\tconst segments = key.split('.');\n\tdoRemoveFromValueTree(valueTree, segments);\n}\n\nfunction doRemoveFromValueTree(valueTree: any, segments: string[]): void {\n\tconst first = segments.shift()!;\n\tif (segments.length === 0) {\n\t\t// Reached last segment\n\t\tdelete valueTree[first];\n\t\treturn;\n\t}\n\n\tif (Object.keys(valueTree).indexOf(first) !== -1) {\n\t\tconst value = valueTree[first];\n\t\tif (typeof value === 'object' && !Array.isArray(value)) {\n\t\t\tdoRemoveFromValueTree(value, segments);\n\t\t\tif (Object.keys(value).length === 0) {\n\t\t\t\tdelete valueTree[first];\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue<T>(config: any, settingPath: string, defaultValue?: T): T {\n\tfunction accessSetting(config: any, path: string[]): any {\n\t\tlet current = config;\n\t\tfor (const component of path) {\n\t\t\tif (typeof current !== 'object' || current === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tcurrent = current[component];\n\t\t}\n\t\treturn <T>current;\n\t}\n\n\tconst path = settingPath.split('.');\n\tconst result = accessSetting(config, path);\n\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\nexport function merge(base: any, add: any, overwrite: boolean): void {\n\tObject.keys(add).forEach(key => {\n\t\tif (key !== '__proto__') {\n\t\t\tif (key in base) {\n\t\t\t\tif (types.isObject(base[key]) && types.isObject(add[key])) {\n\t\t\t\t\tmerge(base[key], add[key], overwrite);\n\t\t\t\t} else if (overwrite) {\n\t\t\t\t\tbase[key] = add[key];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbase[key] = add[key];\n\t\t\t}\n\t\t}\n\t});\n}\n\nexport function getConfigurationKeys(): string[] {\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\treturn Object.keys(properties);\n}\n\nexport function getDefaultValues(): any {\n\tconst valueTreeRoot: any = Object.create(null);\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\n\tfor (let key in properties) {\n\t\tlet value = properties[key].default;\n\t\taddToValueTree(valueTreeRoot, key, value, message => console.error(`Conflict in default settings: ${message}`));\n\t}\n\n\treturn valueTreeRoot;\n}\n\nexport function keyFromOverrideIdentifier(overrideIdentifier: string): string {\n\treturn `[${overrideIdentifier}]`;\n}\n\nexport function getMigratedSettingValue<T>(configurationService: IConfigurationService, currentSettingName: string, legacySettingName: string): T {\n\tconst setting = configurationService.inspect<T>(currentSettingName);\n\tconst legacySetting = configurationService.inspect<T>(legacySettingName);\n\n\tif (typeof setting.userValue !== 'undefined' || typeof setting.workspaceValue !== 'undefined' || typeof setting.workspaceFolderValue !== 'undefined') {\n\t\treturn setting.value!;\n\t} else if (typeof legacySetting.userValue !== 'undefined' || typeof legacySetting.workspaceValue !== 'undefined' || typeof legacySetting.workspaceFolderValue !== 'undefined') {\n\t\treturn legacySetting.value!;\n\t} else {\n\t\treturn setting.defaultValue!;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as json from 'vs/base/common/json';\nimport { ResourceMap, getOrSet } from 'vs/base/common/map';\nimport * as arrays from 'vs/base/common/arrays';\nimport * as types from 'vs/base/common/types';\nimport * as objects from 'vs/base/common/objects';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { OVERRIDE_PROPERTY_PATTERN, ConfigurationScope, IConfigurationRegistry, Extensions, IConfigurationPropertySchema, overrideIdentifierFromKey } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IOverrides, addToValueTree, toValuesTree, IConfigurationModel, getConfigurationValue, IConfigurationOverrides, IConfigurationData, getDefaultValues, getConfigurationKeys, removeFromValueTree, toOverrides, IConfigurationValue, ConfigurationTarget, compare, IConfigurationChangeEvent, IConfigurationChange } from 'vs/platform/configuration/common/configuration';\nimport { Workspace } from 'vs/platform/workspace/common/workspace';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { dirname } from 'vs/base/common/resources';\n\nexport class ConfigurationModel implements IConfigurationModel {\n\n\tprivate isFrozen: boolean = false;\n\n\tconstructor(\n\t\tprivate _contents: any = {},\n\t\tprivate _keys: string[] = [],\n\t\tprivate _overrides: IOverrides[] = []\n\t) {\n\t}\n\n\tget contents(): any {\n\t\treturn this.checkAndFreeze(this._contents);\n\t}\n\n\tget overrides(): IOverrides[] {\n\t\treturn this.checkAndFreeze(this._overrides);\n\t}\n\n\tget keys(): string[] {\n\t\treturn this.checkAndFreeze(this._keys);\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\n\t}\n\n\tgetValue<V>(section: string | undefined): V {\n\t\treturn section ? getConfigurationValue<any>(this.contents, section) : this.contents;\n\t}\n\n\tgetOverrideValue<V>(section: string | undefined, overrideIdentifier: string): V | undefined {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\n\t\treturn overrideContents\n\t\t\t? section ? getConfigurationValue<any>(overrideContents, section) : overrideContents\n\t\t\t: undefined;\n\t}\n\n\tgetKeysForOverrideIdentifier(identifier: string): string[] {\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.indexOf(identifier) !== -1) {\n\t\t\t\treturn override.keys;\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\toverride(identifier: string): ConfigurationModel {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(identifier);\n\n\t\tif (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n\t\t\t// If there are no valid overrides, return self\n\t\t\treturn this;\n\t\t}\n\n\t\tlet contents: any = {};\n\t\tfor (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n\n\t\t\tlet contentsForKey = this.contents[key];\n\t\t\tlet overrideContentsForKey = overrideContents[key];\n\n\t\t\t// If there are override contents for the key, clone and merge otherwise use base contents\n\t\t\tif (overrideContentsForKey) {\n\t\t\t\t// Clone and merge only if base contents and override contents are of type object otherwise just override\n\t\t\t\tif (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n\t\t\t\t\tcontentsForKey = objects.deepClone(contentsForKey);\n\t\t\t\t\tthis.mergeContents(contentsForKey, overrideContentsForKey);\n\t\t\t\t} else {\n\t\t\t\t\tcontentsForKey = overrideContentsForKey;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontents[key] = contentsForKey;\n\t\t}\n\n\t\treturn new ConfigurationModel(contents, this.keys, this.overrides);\n\t}\n\n\tmerge(...others: ConfigurationModel[]): ConfigurationModel {\n\t\tconst contents = objects.deepClone(this.contents);\n\t\tconst overrides = objects.deepClone(this.overrides);\n\t\tconst keys = [...this.keys];\n\n\t\tfor (const other of others) {\n\t\t\tthis.mergeContents(contents, other.contents);\n\n\t\t\tfor (const otherOverride of other.overrides) {\n\t\t\t\tconst [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n\t\t\t\tif (override) {\n\t\t\t\t\tthis.mergeContents(override.contents, otherOverride.contents);\n\t\t\t\t} else {\n\t\t\t\t\toverrides.push(objects.deepClone(otherOverride));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const key of other.keys) {\n\t\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new ConfigurationModel(contents, keys, overrides);\n\t}\n\n\tfreeze(): ConfigurationModel {\n\t\tthis.isFrozen = true;\n\t\treturn this;\n\t}\n\n\tprivate mergeContents(source: any, target: any): void {\n\t\tfor (const key of Object.keys(target)) {\n\t\t\tif (key in source) {\n\t\t\t\tif (types.isObject(source[key]) && types.isObject(target[key])) {\n\t\t\t\t\tthis.mergeContents(source[key], target[key]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsource[key] = objects.deepClone(target[key]);\n\t\t}\n\t}\n\n\tprivate checkAndFreeze<T>(data: T): T {\n\t\tif (this.isFrozen && !Object.isFrozen(data)) {\n\t\t\treturn objects.deepFreeze(data);\n\t\t}\n\t\treturn data;\n\t}\n\n\tprivate getContentsForOverrideIdentifer(identifier: string): any {\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.indexOf(identifier) !== -1) {\n\t\t\t\treturn override.contents;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\ttoJSON(): IConfigurationModel {\n\t\treturn {\n\t\t\tcontents: this.contents,\n\t\t\toverrides: this.overrides,\n\t\t\tkeys: this.keys\n\t\t};\n\t}\n\n\t// Update methods\n\n\tpublic setValue(key: string, value: any) {\n\t\tthis.addKey(key);\n\t\taddToValueTree(this.contents, key, value, e => { throw new Error(e); });\n\t}\n\n\tpublic removeValue(key: string): void {\n\t\tif (this.removeKey(key)) {\n\t\t\tremoveFromValueTree(this.contents, key);\n\t\t}\n\t}\n\n\tprivate addKey(key: string): void {\n\t\tlet index = this.keys.length;\n\t\tfor (let i = 0; i < index; i++) {\n\t\t\tif (key.indexOf(this.keys[i]) === 0) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\tthis.keys.splice(index, 1, key);\n\t}\n\n\tprivate removeKey(key: string): boolean {\n\t\tlet index = this.keys.indexOf(key);\n\t\tif (index !== -1) {\n\t\t\tthis.keys.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class DefaultConfigurationModel extends ConfigurationModel {\n\n\tconstructor() {\n\t\tconst contents = getDefaultValues();\n\t\tconst keys = getConfigurationKeys();\n\t\tconst overrides: IOverrides[] = [];\n\t\tfor (const key of Object.keys(contents)) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\toverrides.push({\n\t\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\t\tkeys: Object.keys(contents[key]),\n\t\t\t\t\tcontents: toValuesTree(contents[key], message => console.error(`Conflict in default settings file: ${message}`)),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tsuper(contents, keys, overrides);\n\t}\n}\n\nexport class ConfigurationModelParser {\n\n\tprivate _raw: any = null;\n\tprivate _configurationModel: ConfigurationModel | null = null;\n\tprivate _parseErrors: any[] = [];\n\n\tconstructor(protected readonly _name: string, private _scopes?: ConfigurationScope[]) { }\n\n\tget configurationModel(): ConfigurationModel {\n\t\treturn this._configurationModel || new ConfigurationModel();\n\t}\n\n\tget errors(): any[] {\n\t\treturn this._parseErrors;\n\t}\n\n\tpublic parseContent(content: string | null | undefined): void {\n\t\tif (!types.isUndefinedOrNull(content)) {\n\t\t\tconst raw = this.doParseContent(content);\n\t\t\tthis.parseRaw(raw);\n\t\t}\n\t}\n\n\tpublic parseRaw(raw: any): void {\n\t\tthis._raw = raw;\n\t\tconst configurationModel = this.doParseRaw(raw);\n\t\tthis._configurationModel = new ConfigurationModel(configurationModel.contents, configurationModel.keys, configurationModel.overrides);\n\t}\n\n\tpublic parse(): void {\n\t\tif (this._raw) {\n\t\t\tthis.parseRaw(this._raw);\n\t\t}\n\t}\n\n\tprotected doParseContent(content: string): any {\n\t\tlet raw: any = {};\n\t\tlet currentProperty: string | null = null;\n\t\tlet currentParent: any = [];\n\t\tlet previousParents: any[] = [];\n\t\tlet parseErrors: json.ParseError[] = [];\n\n\t\tfunction onValue(value: any) {\n\t\t\tif (Array.isArray(currentParent)) {\n\t\t\t\t(<any[]>currentParent).push(value);\n\t\t\t} else if (currentProperty) {\n\t\t\t\tcurrentParent[currentProperty] = value;\n\t\t\t}\n\t\t}\n\n\t\tlet visitor: json.JSONVisitor = {\n\t\t\tonObjectBegin: () => {\n\t\t\t\tlet object = {};\n\t\t\t\tonValue(object);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = object;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonObjectProperty: (name: string) => {\n\t\t\t\tcurrentProperty = name;\n\t\t\t},\n\t\t\tonObjectEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonArrayBegin: () => {\n\t\t\t\tlet array: any[] = [];\n\t\t\t\tonValue(array);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = array;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonArrayEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonLiteralValue: onValue,\n\t\t\tonError: (error: json.ParseErrorCode, offset: number, length: number) => {\n\t\t\t\tparseErrors.push({ error, offset, length });\n\t\t\t}\n\t\t};\n\t\tif (content) {\n\t\t\ttry {\n\t\t\t\tjson.visit(content, visitor);\n\t\t\t\traw = currentParent[0] || {};\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(`Error while parsing settings file ${this._name}: ${e}`);\n\t\t\t\tthis._parseErrors = [e];\n\t\t\t}\n\t\t}\n\n\t\treturn raw;\n\t}\n\n\tprotected doParseRaw(raw: any): IConfigurationModel {\n\t\tif (this._scopes) {\n\t\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\t\t\traw = this.filterByScope(raw, configurationProperties, true, this._scopes);\n\t\t}\n\t\tconst contents = toValuesTree(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\tconst keys = Object.keys(raw);\n\t\tconst overrides: IOverrides[] = toOverrides(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\treturn { contents, keys, overrides };\n\t}\n\n\tprivate filterByScope(properties: any, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema }, filterOverriddenProperties: boolean, scopes: ConfigurationScope[]): {} {\n\t\tconst result: any = {};\n\t\tfor (let key in properties) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key) && filterOverriddenProperties) {\n\t\t\t\tresult[key] = this.filterByScope(properties[key], configurationProperties, false, scopes);\n\t\t\t} else {\n\t\t\t\tconst scope = this.getScope(key, configurationProperties);\n\t\t\t\t// Load unregistered configurations always.\n\t\t\t\tif (scope === undefined || scopes.indexOf(scope) !== -1) {\n\t\t\t\t\tresult[key] = properties[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate getScope(key: string, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema }): ConfigurationScope | undefined {\n\t\tconst propertySchema = configurationProperties[key];\n\t\treturn propertySchema ? typeof propertySchema.scope !== 'undefined' ? propertySchema.scope : ConfigurationScope.WINDOW : undefined;\n\t}\n}\n\nexport class UserSettings extends Disposable {\n\n\tprivate readonly parser: ConfigurationModelParser;\n\tprotected readonly _onDidChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(\n\t\tprivate readonly userSettingsResource: URI,\n\t\tprivate readonly scopes: ConfigurationScope[] | undefined,\n\t\tprivate readonly fileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.parser = new ConfigurationModelParser(this.userSettingsResource.toString(), this.scopes);\n\t\tthis._register(this.fileService.watch(dirname(this.userSettingsResource)));\n\t\tthis._register(Event.filter(this.fileService.onDidFilesChange, e => e.contains(this.userSettingsResource))(() => this._onDidChange.fire()));\n\t}\n\n\tasync loadConfiguration(): Promise<ConfigurationModel> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.userSettingsResource);\n\t\t\tthis.parser.parseContent(content.value.toString() || '{}');\n\t\t\treturn this.parser.configurationModel;\n\t\t} catch (e) {\n\t\t\treturn new ConfigurationModel();\n\t\t}\n\t}\n\n\treprocess(): ConfigurationModel {\n\t\tthis.parser.parse();\n\t\treturn this.parser.configurationModel;\n\t}\n}\n\n\nexport class Configuration {\n\n\tprivate _workspaceConsolidatedConfiguration: ConfigurationModel | null = null;\n\tprivate _foldersConsolidatedConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>();\n\n\tconstructor(\n\t\tprivate _defaultConfiguration: ConfigurationModel,\n\t\tprivate _localUserConfiguration: ConfigurationModel,\n\t\tprivate _remoteUserConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _workspaceConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _folderConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _memoryConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _memoryConfigurationByResource: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _freeze: boolean = true) {\n\t}\n\n\tgetValue(section: string | undefined, overrides: IConfigurationOverrides, workspace: Workspace | undefined): any {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\treturn consolidateConfigurationModel.getValue(section);\n\t}\n\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides = {}): void {\n\t\tlet memoryConfiguration: ConfigurationModel | undefined;\n\t\tif (overrides.resource) {\n\t\t\tmemoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n\t\t\tif (!memoryConfiguration) {\n\t\t\t\tmemoryConfiguration = new ConfigurationModel();\n\t\t\t\tthis._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n\t\t\t}\n\t\t} else {\n\t\t\tmemoryConfiguration = this._memoryConfiguration;\n\t\t}\n\n\t\tif (value === undefined) {\n\t\t\tmemoryConfiguration.removeValue(key);\n\t\t} else {\n\t\t\tmemoryConfiguration.setValue(key, value);\n\t\t}\n\n\t\tif (!overrides.resource) {\n\t\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\t}\n\t}\n\n\tinspect<C>(key: string, overrides: IConfigurationOverrides, workspace: Workspace | undefined): IConfigurationValue<C> {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n\t\tconst memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n\n\t\tconst defaultValue = overrides.overrideIdentifier ? this._defaultConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._defaultConfiguration.freeze().getValue<C>(key);\n\t\tconst userValue = overrides.overrideIdentifier ? this.userConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.userConfiguration.freeze().getValue<C>(key);\n\t\tconst userLocalValue = overrides.overrideIdentifier ? this.localUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.localUserConfiguration.freeze().getValue<C>(key);\n\t\tconst userRemoteValue = overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.remoteUserConfiguration.freeze().getValue<C>(key);\n\t\tconst workspaceValue = workspace ? overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._workspaceConfiguration.freeze().getValue<C>(key) : undefined; //Check on workspace exists or not because _workspaceConfiguration is never null\n\t\tconst workspaceFolderValue = folderConfigurationModel ? overrides.overrideIdentifier ? folderConfigurationModel.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : folderConfigurationModel.freeze().getValue<C>(key) : undefined;\n\t\tconst memoryValue = overrides.overrideIdentifier ? memoryConfigurationModel.override(overrides.overrideIdentifier).getValue<C>(key) : memoryConfigurationModel.getValue<C>(key);\n\t\tconst value = consolidateConfigurationModel.getValue<C>(key);\n\t\tconst overrideIdentifiers: string[] = arrays.distinct(arrays.flatten(consolidateConfigurationModel.overrides.map(override => override.identifiers))).filter(overrideIdentifier => consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined);\n\n\t\treturn {\n\t\t\tdefaultValue: defaultValue,\n\t\t\tuserValue: userValue,\n\t\t\tuserLocalValue: userLocalValue,\n\t\t\tuserRemoteValue: userRemoteValue,\n\t\t\tworkspaceValue: workspaceValue,\n\t\t\tworkspaceFolderValue: workspaceFolderValue,\n\t\t\tmemoryValue: memoryValue,\n\t\t\tvalue,\n\n\t\t\tdefault: defaultValue !== undefined ? { value: this._defaultConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._defaultConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuser: userValue !== undefined ? { value: this.userConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.userConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserLocal: userLocalValue !== undefined ? { value: this.localUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.localUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserRemote: userRemoteValue !== undefined ? { value: this.remoteUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspace: workspaceValue !== undefined ? { value: this._workspaceConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspaceFolder: workspaceFolderValue !== undefined ? { value: folderConfigurationModel?.freeze().getValue(key), override: overrides.overrideIdentifier ? folderConfigurationModel?.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tmemory: memoryValue !== undefined ? { value: memoryConfigurationModel.getValue(key), override: overrides.overrideIdentifier ? memoryConfigurationModel.getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\n\t\t\toverrideIdentifiers: overrideIdentifiers.length ? overrideIdentifiers : undefined\n\t\t};\n\t}\n\n\tkeys(workspace: Workspace | undefined): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(undefined, workspace);\n\t\treturn {\n\t\t\tdefault: this._defaultConfiguration.freeze().keys,\n\t\t\tuser: this.userConfiguration.freeze().keys,\n\t\t\tworkspace: this._workspaceConfiguration.freeze().keys,\n\t\t\tworkspaceFolder: folderConfigurationModel ? folderConfigurationModel.freeze().keys : []\n\t\t};\n\t}\n\n\tupdateDefaultConfiguration(defaultConfiguration: ConfigurationModel): void {\n\t\tthis._defaultConfiguration = defaultConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateLocalUserConfiguration(localUserConfiguration: ConfigurationModel): void {\n\t\tthis._localUserConfiguration = localUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateRemoteUserConfiguration(remoteUserConfiguration: ConfigurationModel): void {\n\t\tthis._remoteUserConfiguration = remoteUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): void {\n\t\tthis._workspaceConfiguration = workspaceConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateFolderConfiguration(resource: URI, configuration: ConfigurationModel): void {\n\t\tthis._folderConfigurations.set(resource, configuration);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tdeleteFolderConfiguration(resource: URI): void {\n\t\tthis.folderConfigurations.delete(resource);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tcompareAndUpdateDefaultConfiguration(defaults: ConfigurationModel, keys: string[]): IConfigurationChange {\n\t\tconst overrides: [string, string[]][] = keys\n\t\t\t.filter(key => OVERRIDE_PROPERTY_PATTERN.test(key))\n\t\t\t.map(key => {\n\t\t\t\tconst overrideIdentifier = overrideIdentifierFromKey(key);\n\t\t\t\tconst fromKeys = this._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst toKeys = defaults.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst keys = [\n\t\t\t\t\t...toKeys.filter(key => fromKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => toKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => !objects.equals(this._defaultConfiguration.override(overrideIdentifier).getValue(key), defaults.override(overrideIdentifier).getValue(key)))\n\t\t\t\t];\n\t\t\t\treturn [overrideIdentifier, keys];\n\t\t\t});\n\t\tthis.updateDefaultConfiguration(defaults);\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateLocalUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.localUserConfiguration, user);\n\t\tconst keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateLocalUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateRemoteUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.remoteUserConfiguration, user);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateRemoteUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.workspaceConfiguration, workspaceConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateWorkspaceConfiguration(workspaceConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateFolderConfiguration(resource: URI, folderConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst currentFolderConfiguration = this.folderConfigurations.get(resource);\n\t\tconst { added, updated, removed, overrides } = compare(currentFolderConfiguration, folderConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length || !currentFolderConfiguration) {\n\t\t\tthis.updateFolderConfiguration(resource, folderConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndDeleteFolderConfiguration(folder: URI): IConfigurationChange {\n\t\tconst folderConfig = this.folderConfigurations.get(folder);\n\t\tif (!folderConfig) {\n\t\t\tthrow new Error('Unknown folder');\n\t\t}\n\t\tthis.deleteFolderConfiguration(folder);\n\t\tconst { added, updated, removed, overrides } = compare(folderConfig, undefined);\n\t\treturn { keys: [...added, ...updated, ...removed], overrides };\n\t}\n\n\tget defaults(): ConfigurationModel {\n\t\treturn this._defaultConfiguration;\n\t}\n\n\tprivate _userConfiguration: ConfigurationModel | null = null;\n\tget userConfiguration(): ConfigurationModel {\n\t\tif (!this._userConfiguration) {\n\t\t\tthis._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._userConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._userConfiguration;\n\t}\n\n\tget localUserConfiguration(): ConfigurationModel {\n\t\treturn this._localUserConfiguration;\n\t}\n\n\tget remoteUserConfiguration(): ConfigurationModel {\n\t\treturn this._remoteUserConfiguration;\n\t}\n\n\tget workspaceConfiguration(): ConfigurationModel {\n\t\treturn this._workspaceConfiguration;\n\t}\n\n\tprotected get folderConfigurations(): ResourceMap<ConfigurationModel> {\n\t\treturn this._folderConfigurations;\n\t}\n\n\tprivate getConsolidateConfigurationModel(overrides: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n\t\treturn overrides.overrideIdentifier ? configurationModel.override(overrides.overrideIdentifier) : configurationModel;\n\t}\n\n\tprivate getConsolidatedConfigurationModelForResource({ resource }: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\tconsolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n\t\t\t}\n\t\t\tconst memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n\t\t\tif (memoryConfigurationForResource) {\n\t\t\t\tconsolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n\t\t\t}\n\t\t}\n\n\t\treturn consolidateConfiguration;\n\t}\n\n\tprivate getWorkspaceConsolidatedConfiguration(): ConfigurationModel {\n\t\tif (!this._workspaceConsolidatedConfiguration) {\n\t\t\tthis._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._workspaceConfiguration = this._workspaceConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._workspaceConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConsolidatedConfiguration(folder: URI): ConfigurationModel {\n\t\tlet folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n\t\tif (!folderConsolidatedConfiguration) {\n\t\t\tconst workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\t\t\tconst folderConfiguration = this._folderConfigurations.get(folder);\n\t\t\tif (folderConfiguration) {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n\t\t\t\tif (this._freeze) {\n\t\t\t\t\tfolderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\n\t\t\t\t}\n\t\t\t\tthis._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n\t\t\t} else {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n\t\t\t}\n\t\t}\n\t\treturn folderConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConfigurationModelForResource(resource: URI | null | undefined, workspace: Workspace | undefined): ConfigurationModel | undefined {\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\treturn this._folderConfigurations.get(root.uri);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\ttoData(): IConfigurationData {\n\t\treturn {\n\t\t\tdefaults: {\n\t\t\t\tcontents: this._defaultConfiguration.contents,\n\t\t\t\toverrides: this._defaultConfiguration.overrides,\n\t\t\t\tkeys: this._defaultConfiguration.keys\n\t\t\t},\n\t\t\tuser: {\n\t\t\t\tcontents: this.userConfiguration.contents,\n\t\t\t\toverrides: this.userConfiguration.overrides,\n\t\t\t\tkeys: this.userConfiguration.keys\n\t\t\t},\n\t\t\tworkspace: {\n\t\t\t\tcontents: this._workspaceConfiguration.contents,\n\t\t\t\toverrides: this._workspaceConfiguration.overrides,\n\t\t\t\tkeys: this._workspaceConfiguration.keys\n\t\t\t},\n\t\t\tfolders: [...this._folderConfigurations.keys()].reduce<[UriComponents, IConfigurationModel][]>((result, folder) => {\n\t\t\t\tconst { contents, overrides, keys } = this._folderConfigurations.get(folder)!;\n\t\t\t\tresult.push([folder, { contents, overrides, keys }]);\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t};\n\t}\n\n\tallKeys(): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis.userConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.freeze().keys.forEach(key => keys.add(key)));\n\t\treturn [...keys.values()];\n\t}\n\n\tprotected getAllKeysForOverrideIdentifier(overrideIdentifier: string): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis.userConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key)));\n\t\treturn [...keys.values()];\n\t}\n\n\tstatic parse(data: IConfigurationData): Configuration {\n\t\tconst defaultConfiguration = this.parseConfigurationModel(data.defaults);\n\t\tconst userConfiguration = this.parseConfigurationModel(data.user);\n\t\tconst workspaceConfiguration = this.parseConfigurationModel(data.workspace);\n\t\tconst folders: ResourceMap<ConfigurationModel> = data.folders.reduce((result, value) => {\n\t\t\tresult.set(URI.revive(value[0]), this.parseConfigurationModel(value[1]));\n\t\t\treturn result;\n\t\t}, new ResourceMap<ConfigurationModel>());\n\t\treturn new Configuration(defaultConfiguration, userConfiguration, new ConfigurationModel(), workspaceConfiguration, folders, new ConfigurationModel(), new ResourceMap<ConfigurationModel>(), false);\n\t}\n\n\tprivate static parseConfigurationModel(model: IConfigurationModel): ConfigurationModel {\n\t\treturn new ConfigurationModel(model.contents, model.keys, model.overrides).freeze();\n\t}\n\n}\n\nexport function mergeChanges(...changes: IConfigurationChange[]): IConfigurationChange {\n\tif (changes.length === 0) {\n\t\treturn { keys: [], overrides: [] };\n\t}\n\tif (changes.length === 1) {\n\t\treturn changes[0];\n\t}\n\tconst keysSet = new Set<string>();\n\tconst overridesMap = new Map<string, Set<string>>();\n\tfor (const change of changes) {\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([identifier, keys]) => {\n\t\t\tconst result = getOrSet(overridesMap, identifier, new Set<string>());\n\t\t\tkeys.forEach(key => result.add(key));\n\t\t});\n\t}\n\tconst overrides: [string, string[]][] = [];\n\toverridesMap.forEach((keys, identifier) => overrides.push([identifier, [...keys.values()]]));\n\treturn { keys: [...keysSet.values()], overrides };\n}\n\nexport class ConfigurationChangeEvent implements IConfigurationChangeEvent {\n\n\tprivate readonly affectedKeysTree: any;\n\treadonly affectedKeys: string[];\n\tsource!: ConfigurationTarget;\n\tsourceConfig: any;\n\n\tconstructor(readonly change: IConfigurationChange, private readonly previous: { workspace?: Workspace, data: IConfigurationData } | undefined, private readonly currentConfiguraiton: Configuration, private readonly currentWorkspace?: Workspace) {\n\t\tconst keysSet = new Set<string>();\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([, keys]) => keys.forEach(key => keysSet.add(key)));\n\t\tthis.affectedKeys = [...keysSet.values()];\n\n\t\tconst configurationModel = new ConfigurationModel();\n\t\tthis.affectedKeys.forEach(key => configurationModel.setValue(key, {}));\n\t\tthis.affectedKeysTree = configurationModel.contents;\n\t}\n\n\tprivate _previousConfiguration: Configuration | undefined = undefined;\n\tget previousConfiguration(): Configuration | undefined {\n\t\tif (!this._previousConfiguration && this.previous) {\n\t\t\tthis._previousConfiguration = Configuration.parse(this.previous.data);\n\t\t}\n\t\treturn this._previousConfiguration;\n\t}\n\n\taffectsConfiguration(section: string, overrides?: IConfigurationOverrides): boolean {\n\t\tif (this.doesAffectedKeysTreeContains(this.affectedKeysTree, section)) {\n\t\t\tif (overrides) {\n\t\t\t\tconst value1 = this.previousConfiguration ? this.previousConfiguration.getValue(section, overrides, this.previous?.workspace) : undefined;\n\t\t\t\tconst value2 = this.currentConfiguraiton.getValue(section, overrides, this.currentWorkspace);\n\t\t\t\treturn !objects.equals(value1, value2);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate doesAffectedKeysTreeContains(affectedKeysTree: any, section: string): boolean {\n\t\tlet requestedTree = toValuesTree({ [section]: true }, () => { });\n\n\t\tlet key;\n\t\twhile (typeof requestedTree === 'object' && (key = Object.keys(requestedTree)[0])) { // Only one key should present, since we added only one property\n\t\t\taffectedKeysTree = affectedKeysTree[key];\n\t\t\tif (!affectedKeysTree) {\n\t\t\t\treturn false; // Requested tree is not found\n\t\t\t}\n\t\t\trequestedTree = requestedTree[key];\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class AllKeysConfigurationChangeEvent extends ConfigurationChangeEvent {\n\tconstructor(configuration: Configuration, workspace: Workspace, public source: ConfigurationTarget, public sourceConfig: any) {\n\t\tsuper({ keys: configuration.allKeys(), overrides: [] }, undefined, configuration, workspace);\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, IConfigurationChangeEvent, IConfigurationOverrides, ConfigurationTarget, isConfigurationOverrides, IConfigurationData, IConfigurationValue, IConfigurationChange } from 'vs/platform/configuration/common/configuration';\nimport { DefaultConfigurationModel, Configuration, ConfigurationModel, ConfigurationChangeEvent, UserSettings } from 'vs/platform/configuration/common/configurationModels';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { RunOnceScheduler } from 'vs/base/common/async';\n\nexport class ConfigurationService extends Disposable implements IConfigurationService, IDisposable {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate configuration: Configuration;\n\tprivate userConfiguration: UserSettings;\n\tprivate readonly reloadConfigurationScheduler: RunOnceScheduler;\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<IConfigurationChangeEvent> = this._register(new Emitter<IConfigurationChangeEvent>());\n\treadonly onDidChangeConfiguration: Event<IConfigurationChangeEvent> = this._onDidChangeConfiguration.event;\n\n\tconstructor(\n\t\tprivate readonly settingsResource: URI,\n\t\tfileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.userConfiguration = this._register(new UserSettings(this.settingsResource, undefined, fileService));\n\t\tthis.configuration = new Configuration(new DefaultConfigurationModel(), new ConfigurationModel());\n\n\t\tthis.reloadConfigurationScheduler = this._register(new RunOnceScheduler(() => this.reloadConfiguration(), 50));\n\t\tthis._register(Registry.as<IConfigurationRegistry>(Extensions.Configuration).onDidUpdateConfiguration(configurationProperties => this.onDidDefaultConfigurationChange(configurationProperties)));\n\t\tthis._register(this.userConfiguration.onDidChange(() => this.reloadConfigurationScheduler.schedule()));\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tconst userConfiguration = await this.userConfiguration.loadConfiguration();\n\t\tthis.configuration = new Configuration(new DefaultConfigurationModel(), userConfiguration);\n\t}\n\n\tgetConfigurationData(): IConfigurationData {\n\t\treturn this.configuration.toData();\n\t}\n\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\tgetValue(arg1?: any, arg2?: any): any {\n\t\tconst section = typeof arg1 === 'string' ? arg1 : undefined;\n\t\tconst overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n\t\treturn this.configuration.getValue(section, overrides, undefined);\n\t}\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, arg3?: any, arg4?: any): Promise<void> {\n\t\treturn Promise.reject(new Error('not supported'));\n\t}\n\n\tinspect<T>(key: string): IConfigurationValue<T> {\n\t\treturn this.configuration.inspect<T>(key, {}, undefined);\n\t}\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\treturn this.configuration.keys(undefined);\n\t}\n\n\tasync reloadConfiguration(): Promise<void> {\n\t\tconst configurationModel = await this.userConfiguration.loadConfiguration();\n\t\tthis.onDidChangeUserConfiguration(configurationModel);\n\t}\n\n\tprivate onDidChangeUserConfiguration(userConfigurationModel: ConfigurationModel): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateLocalUserConfiguration(userConfigurationModel);\n\t\tthis.trigger(change, previous, ConfigurationTarget.USER);\n\t}\n\n\tprivate onDidDefaultConfigurationChange(keys: string[]): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateDefaultConfiguration(new DefaultConfigurationModel(), keys);\n\t\tthis.trigger(change, previous, ConfigurationTarget.DEFAULT);\n\t}\n\n\tprivate trigger(configurationChange: IConfigurationChange, previous: IConfigurationData, source: ConfigurationTarget): void {\n\t\tconst event = new ConfigurationChangeEvent(configurationChange, { data: previous }, this.configuration);\n\t\tevent.source = source;\n\t\tevent.sourceConfig = this.getTargetConfiguration(source);\n\t\tthis._onDidChangeConfiguration.fire(event);\n\t}\n\n\tprivate getTargetConfiguration(target: ConfigurationTarget): any {\n\t\tswitch (target) {\n\t\t\tcase ConfigurationTarget.DEFAULT:\n\t\t\t\treturn this.configuration.defaults.contents;\n\t\t\tcase ConfigurationTarget.USER:\n\t\t\t\treturn this.configuration.localUserConfiguration.contents;\n\t\t}\n\t\treturn {};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { streamToBuffer } from 'vs/base/common/buffer';\nimport { IRequestOptions, IRequestContext } from 'vs/base/parts/request/common/request';\n\nexport const IRequestService = createDecorator<IRequestService>('requestService');\n\nexport interface IRequestService {\n\treadonly _serviceBrand: undefined;\n\n\trequest(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext>;\n\n\tresolveProxy(url: string): Promise<string | undefined>;\n}\n\nexport function isSuccess(context: IRequestContext): boolean {\n\treturn (context.res.statusCode && context.res.statusCode >= 200 && context.res.statusCode < 300) || context.res.statusCode === 1223;\n}\n\nfunction hasNoContent(context: IRequestContext): boolean {\n\treturn context.res.statusCode === 204;\n}\n\nexport async function asText(context: IRequestContext): Promise<string | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\treturn buffer.toString();\n}\n\nexport async function asJson<T = {}>(context: IRequestContext): Promise<T | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\tconst str = buffer.toString();\n\ttry {\n\t\treturn JSON.parse(str);\n\t} catch (err) {\n\t\terr.message += ':\\n' + str;\n\t\tthrow err;\n\t}\n}\n\n\nexport interface IHTTPConfiguration {\n\thttp?: {\n\t\tproxy?: string;\n\t\tproxyStrictSSL?: boolean;\n\t\tproxyAuthorization?: string;\n\t};\n}\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration)\n\t.registerConfiguration({\n\t\tid: 'http',\n\t\torder: 15,\n\t\ttitle: localize('httpConfigurationTitle', \"HTTP\"),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\t'http.proxy': {\n\t\t\t\ttype: 'string',\n\t\t\t\tpattern: '^https?://([^:]*(:[^@]*)?@)?([^:]+|\\\\[[:0-9a-fA-F]+\\\\])(:\\\\d+)?/?$|^$',\n\t\t\t\tmarkdownDescription: localize('proxy', \"The proxy setting to use. If not set, will be inherited from the `http_proxy` and `https_proxy` environment variables.\")\n\t\t\t},\n\t\t\t'http.proxyStrictSSL': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('strictSSL', \"Controls whether the proxy server certificate should be verified against the list of supplied CAs.\")\n\t\t\t},\n\t\t\t'http.proxyAuthorization': {\n\t\t\t\ttype: ['null', 'string'],\n\t\t\t\tdefault: null,\n\t\t\t\tmarkdownDescription: localize('proxyAuthorization', \"The value to send as the `Proxy-Authorization` header for every network request.\")\n\t\t\t},\n\t\t\t'http.proxySupport': {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['off', 'on', 'override'],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tlocalize('proxySupportOff', \"Disable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOn', \"Enable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOverride', \"Enable proxy support for extensions, override request options.\"),\n\t\t\t\t],\n\t\t\t\tdefault: 'override',\n\t\t\t\tdescription: localize('proxySupport', \"Use the proxy support for extensions.\")\n\t\t\t},\n\t\t\t'http.systemCertificates': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('systemCertificates', \"Controls whether CA certificates should be loaded from the OS. (On Windows and macOS a reload of the window is required after turning this off.)\")\n\t\t\t}\n\t\t}\n\t});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Event } from 'vs/base/common/event';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext, IHeaders } from 'vs/base/parts/request/common/request';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { VSBuffer, bufferToStream, streamToBuffer } from 'vs/base/common/buffer';\n\ntype RequestResponse = [\n\t{\n\t\theaders: IHeaders;\n\t\tstatusCode?: number;\n\t},\n\tVSBuffer\n];\n\nexport class RequestChannel implements IServerChannel {\n\n\tconstructor(private readonly service: IRequestService) { }\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'request': return this.service.request(args[0], CancellationToken.None)\n\t\t\t\t.then(async ({ res, stream }) => {\n\t\t\t\t\tconst buffer = await streamToBuffer(stream);\n\t\t\t\t\treturn <RequestResponse>[{ statusCode: res.statusCode, headers: res.headers }, buffer];\n\t\t\t\t});\n\t\t}\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class RequestChannelClient {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly channel: IChannel) { }\n\n\tasync request(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\treturn RequestChannelClient.request(this.channel, options, token);\n\t}\n\n\tstatic async request(channel: IChannel, options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tconst [res, buffer] = await channel.call<RequestResponse>('request', [options]);\n\t\treturn { res, stream: bufferToStream(buffer) };\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Url, parse as parseUrl } from 'url';\nimport { isBoolean } from 'vs/base/common/types';\n\nexport type Agent = any;\n\nfunction getSystemProxyURI(requestURL: Url): string | null {\n\tif (requestURL.protocol === 'http:') {\n\t\treturn process.env.HTTP_PROXY || process.env.http_proxy || null;\n\t} else if (requestURL.protocol === 'https:') {\n\t\treturn process.env.HTTPS_PROXY || process.env.https_proxy || process.env.HTTP_PROXY || process.env.http_proxy || null;\n\t}\n\n\treturn null;\n}\n\nexport interface IOptions {\n\tproxyUrl?: string;\n\tstrictSSL?: boolean;\n}\n\nexport async function getProxyAgent(rawRequestURL: string, options: IOptions = {}): Promise<Agent> {\n\tconst requestURL = parseUrl(rawRequestURL);\n\tconst proxyURL = options.proxyUrl || getSystemProxyURI(requestURL);\n\n\tif (!proxyURL) {\n\t\treturn null;\n\t}\n\n\tconst proxyEndpoint = parseUrl(proxyURL);\n\n\tif (!/^https?:$/.test(proxyEndpoint.protocol || '')) {\n\t\treturn null;\n\t}\n\n\tconst opts = {\n\t\thost: proxyEndpoint.hostname || '',\n\t\tport: proxyEndpoint.port || (proxyEndpoint.protocol === 'https' ? '443' : '80'),\n\t\tauth: proxyEndpoint.auth,\n\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true,\n\t};\n\n\treturn requestURL.protocol === 'http:'\n\t\t? new (await import('http-proxy-agent'))(opts as any as Url)\n\t\t: new (await import('https-proxy-agent'))(opts);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { StorageScope } from 'vs/platform/storage/common/storage';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { isUUID, generateUuid } from 'vs/base/common/uuid';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\nexport async function getServiceMachineId(environmentService: IEnvironmentService, fileService: IFileService, storageService: {\n\tget: (key: string, scope: StorageScope, fallbackValue?: string | undefined) => string | undefined,\n\tstore: (key: string, value: string, scope: StorageScope) => void\n} | undefined): Promise<string> {\n\tlet uuid: string | null = storageService ? storageService.get('storage.serviceMachineId', StorageScope.GLOBAL) || null : null;\n\tif (uuid) {\n\t\treturn uuid;\n\t}\n\ttry {\n\t\tconst contents = await fileService.readFile(environmentService.serviceMachineIdResource);\n\t\tconst value = contents.value.toString();\n\t\tuuid = isUUID(value) ? value : null;\n\t} catch (e) {\n\t\tuuid = null;\n\t}\n\n\tif (!uuid) {\n\t\tuuid = generateUuid();\n\t\ttry {\n\t\t\tawait fileService.writeFile(environmentService.serviceMachineIdResource, VSBuffer.fromString(uuid));\n\t\t} catch (error) {\n\t\t\t//noop\n\t\t}\n\t}\n\tif (storageService) {\n\t\tstorageService.store('storage.serviceMachineId', uuid, StorageScope.GLOBAL);\n\t}\n\treturn uuid;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IStateService = createDecorator<IStateService>('stateService');\n\nexport interface IStateService {\n\treadonly _serviceBrand: undefined;\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void;\n\tremoveItem(key: string): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { INativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { writeFileSync, readFile } from 'vs/base/node/pfs';\nimport { isUndefined, isUndefinedOrNull } from 'vs/base/common/types';\nimport { IStateService } from 'vs/platform/state/node/state';\nimport { ILogService } from 'vs/platform/log/common/log';\n\ntype StorageDatabase = { [key: string]: any; };\n\nexport class FileStorage {\n\n\tprivate _database: StorageDatabase | null = null;\n\tprivate lastFlushedSerializedDatabase: string | null = null;\n\n\tconstructor(private dbPath: string, private onError: (error: Error) => void) { }\n\n\tprivate get database(): StorageDatabase {\n\t\tif (!this._database) {\n\t\t\tthis._database = this.loadSync();\n\t\t}\n\n\t\treturn this._database;\n\t}\n\n\tasync init(): Promise<void> {\n\t\tif (this._database) {\n\t\t\treturn; // return if database was already loaded\n\t\t}\n\n\t\tconst database = await this.loadAsync();\n\n\t\tif (this._database) {\n\t\t\treturn; // return if database was already loaded\n\t\t}\n\n\t\tthis._database = database;\n\t}\n\n\tprivate loadSync(): StorageDatabase {\n\t\ttry {\n\t\t\tthis.lastFlushedSerializedDatabase = fs.readFileSync(this.dbPath).toString();\n\n\t\t\treturn JSON.parse(this.lastFlushedSerializedDatabase);\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tprivate async loadAsync(): Promise<StorageDatabase> {\n\t\ttry {\n\t\t\tthis.lastFlushedSerializedDatabase = (await readFile(this.dbPath)).toString();\n\n\t\t\treturn JSON.parse(this.lastFlushedSerializedDatabase);\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined {\n\t\tconst res = this.database[key];\n\t\tif (isUndefinedOrNull(res)) {\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void {\n\n\t\t// Remove an item when it is undefined or null\n\t\tif (isUndefinedOrNull(data)) {\n\t\t\treturn this.removeItem(key);\n\t\t}\n\n\t\t// Shortcut for primitives that did not change\n\t\tif (typeof data === 'string' || typeof data === 'number' || typeof data === 'boolean') {\n\t\t\tif (this.database[key] === data) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.database[key] = data;\n\t\tthis.saveSync();\n\t}\n\n\tremoveItem(key: string): void {\n\n\t\t// Only update if the key is actually present (not undefined)\n\t\tif (!isUndefined(this.database[key])) {\n\t\t\tthis.database[key] = undefined;\n\t\t\tthis.saveSync();\n\t\t}\n\t}\n\n\tprivate saveSync(): void {\n\t\tconst serializedDatabase = JSON.stringify(this.database, null, 4);\n\t\tif (serializedDatabase === this.lastFlushedSerializedDatabase) {\n\t\t\treturn; // return early if the database has not changed\n\t\t}\n\n\t\ttry {\n\t\t\twriteFileSync(this.dbPath, serializedDatabase); // permission issue can happen here\n\t\t\tthis.lastFlushedSerializedDatabase = serializedDatabase;\n\t\t} catch (error) {\n\t\t\tthis.onError(error);\n\t\t}\n\t}\n}\n\nexport class StateService implements IStateService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static readonly STATE_FILE = 'storage.json';\n\n\tprivate fileStorage: FileStorage;\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tthis.fileStorage = new FileStorage(path.join(environmentService.userDataPath, StateService.STATE_FILE), error => logService.error(error));\n\t}\n\n\tinit(): Promise<void> {\n\t\treturn this.fileStorage.init();\n\t}\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue: T | undefined): T | undefined;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined {\n\t\treturn this.fileStorage.getItem(key, defaultValue);\n\t}\n\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void {\n\t\tthis.fileStorage.setItem(key, data);\n\t}\n\n\tremoveItem(key: string): void {\n\t\tthis.fileStorage.removeItem(key);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { IWorkspaceInitializationPayload } from 'vs/platform/workspaces/common/workspaces';\n\nexport const IStorageService = createDecorator<IStorageService>('storageService');\n\nexport enum WillSaveStateReason {\n\tNONE = 0,\n\tSHUTDOWN = 1\n}\n\nexport interface IWillSaveStateEvent {\n\treason: WillSaveStateReason;\n}\n\nexport interface IStorageService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Emitted whenever data is updated or deleted.\n\t */\n\treadonly onDidChangeStorage: Event<IWorkspaceStorageChangeEvent>;\n\n\t/**\n\t * Emitted when the storage is about to persist. This is the right time\n\t * to persist data to ensure it is stored before the application shuts\n\t * down.\n\t *\n\t * The will save state event allows to optionally ask for the reason of\n\t * saving the state, e.g. to find out if the state is saved due to a\n\t * shutdown.\n\t *\n\t * Note: this event may be fired many times, not only on shutdown to prevent\n\t * loss of state in situations where the shutdown is not sufficient to\n\t * persist the data properly.\n\t */\n\treadonly onWillSaveState: Event<IWillSaveStateEvent>;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided defaultValue if the element is null or undefined.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided defaultValue if the element is null or undefined. The element\n\t * will be converted to a boolean.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided defaultValue if the element is null or undefined. The element\n\t * will be converted to a number using parseInt with a base of 10.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined;\n\n\t/**\n\t * Store a value under the given key to storage. The value will be converted to a string.\n\t * Storing either undefined or null will remove the entry under the key.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope): void;\n\n\t/**\n\t * Delete an element stored under the provided key from storage.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tremove(key: string, scope: StorageScope): void;\n\n\t/**\n\t * Log the contents of the storage to the console.\n\t */\n\tlogStorage(): void;\n\n\t/**\n\t * Migrate the storage contents to another workspace.\n\t */\n\tmigrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void>;\n\n\t/**\n\t * Wether the storage for the given scope was created during this session or\n\t * existed before.\n\t *\n\t * Note: currently only implemented for `WORKSPACE` scope.\n\t */\n\tisNew(scope: StorageScope.WORKSPACE): boolean;\n\n\t/**\n\t * Allows to flush state, e.g. in cases where a shutdown is\n\t * imminent. This will send out the onWillSaveState to ask\n\t * everyone for latest state.\n\t */\n\tflush(): void;\n}\n\nexport const enum StorageScope {\n\n\t/**\n\t * The stored data will be scoped to all workspaces.\n\t */\n\tGLOBAL,\n\n\t/**\n\t * The stored data will be scoped to the current workspace.\n\t */\n\tWORKSPACE\n}\n\nexport interface IWorkspaceStorageChangeEvent {\n\treadonly key: string;\n\treadonly scope: StorageScope;\n}\n\nexport class InMemoryStorageService extends Disposable implements IStorageService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeStorage = this._register(new Emitter<IWorkspaceStorageChangeEvent>());\n\treadonly onDidChangeStorage = this._onDidChangeStorage.event;\n\n\tprotected readonly _onWillSaveState = this._register(new Emitter<IWillSaveStateEvent>());\n\treadonly onWillSaveState = this._onWillSaveState.event;\n\n\tprivate readonly globalCache = new Map<string, string>();\n\tprivate readonly workspaceCache = new Map<string, string>();\n\n\tprivate getCache(scope: StorageScope): Map<string, string> {\n\t\treturn scope === StorageScope.GLOBAL ? this.globalCache : this.workspaceCache;\n\t}\n\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined {\n\t\tconst value = this.getCache(scope).get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined {\n\t\tconst value = this.getCache(scope).get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value === 'true';\n\t}\n\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined {\n\t\tconst value = this.getCache(scope).get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn parseInt(value, 10);\n\t}\n\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope): Promise<void> {\n\n\t\t// We remove the key for undefined/null values\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn this.remove(key, scope);\n\t\t}\n\n\t\t// Otherwise, convert to String and store\n\t\tconst valueStr = String(value);\n\n\t\t// Return early if value already set\n\t\tconst currentValue = this.getCache(scope).get(key);\n\t\tif (currentValue === valueStr) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\t// Update in cache\n\t\tthis.getCache(scope).set(key, valueStr);\n\n\t\t// Events\n\t\tthis._onDidChangeStorage.fire({ scope, key });\n\n\t\treturn Promise.resolve();\n\t}\n\n\tremove(key: string, scope: StorageScope): Promise<void> {\n\t\tconst wasDeleted = this.getCache(scope).delete(key);\n\t\tif (!wasDeleted) {\n\t\t\treturn Promise.resolve(); // Return early if value already deleted\n\t\t}\n\n\t\t// Events\n\t\tthis._onDidChangeStorage.fire({ scope, key });\n\n\t\treturn Promise.resolve();\n\t}\n\n\tlogStorage(): void {\n\t\tlogStorage(this.globalCache, this.workspaceCache, 'inMemory', 'inMemory');\n\t}\n\n\tasync migrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void> {\n\t\t// not supported\n\t}\n\n\tflush(): void {\n\t\tthis._onWillSaveState.fire({ reason: WillSaveStateReason.NONE });\n\t}\n\n\tisNew(): boolean {\n\t\treturn true; // always new when in-memory\n\t}\n}\n\nexport async function logStorage(global: Map<string, string>, workspace: Map<string, string>, globalPath: string, workspacePath: string): Promise<void> {\n\tconst safeParse = (value: string) => {\n\t\ttry {\n\t\t\treturn JSON.parse(value);\n\t\t} catch (error) {\n\t\t\treturn value;\n\t\t}\n\t};\n\n\tconst globalItems = new Map<string, string>();\n\tconst globalItemsParsed = new Map<string, string>();\n\tglobal.forEach((value, key) => {\n\t\tglobalItems.set(key, value);\n\t\tglobalItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconst workspaceItems = new Map<string, string>();\n\tconst workspaceItemsParsed = new Map<string, string>();\n\tworkspace.forEach((value, key) => {\n\t\tworkspaceItems.set(key, value);\n\t\tworkspaceItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconsole.group(`Storage: Global (path: ${globalPath})`);\n\tlet globalValues: { key: string, value: string }[] = [];\n\tglobalItems.forEach((value, key) => {\n\t\tglobalValues.push({ key, value });\n\t});\n\tconsole.table(globalValues);\n\tconsole.groupEnd();\n\n\tconsole.log(globalItemsParsed);\n\n\tconsole.group(`Storage: Workspace (path: ${workspacePath})`);\n\tlet workspaceValues: { key: string, value: string }[] = [];\n\tworkspaceItems.forEach((value, key) => {\n\t\tworkspaceValues.push({ key, value });\n\t});\n\tconsole.table(workspaceValues);\n\tconsole.groupEnd();\n\n\tconsole.log(workspaceItemsParsed);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { binarySearch } from 'vs/base/common/arrays';\nimport * as Errors from 'vs/base/common/errors';\nimport { toDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { safeStringify } from 'vs/base/common/objects';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\ntype ErrorEventFragment = {\n\tcallstack: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tmsg?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tfile?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tline?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\tcolumn?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\tuncaught_error_name?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tuncaught_error_msg?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tcount?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n};\nexport interface ErrorEvent {\n\tcallstack: string;\n\tmsg?: string;\n\tfile?: string;\n\tline?: number;\n\tcolumn?: number;\n\tuncaught_error_name?: string;\n\tuncaught_error_msg?: string;\n\tcount?: number;\n}\n\nexport namespace ErrorEvent {\n\texport function compare(a: ErrorEvent, b: ErrorEvent) {\n\t\tif (a.callstack < b.callstack) {\n\t\t\treturn -1;\n\t\t} else if (a.callstack > b.callstack) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n}\n\nexport default abstract class BaseErrorTelemetry {\n\n\tpublic static ERROR_FLUSH_TIMEOUT: number = 5 * 1000;\n\n\tprivate _telemetryService: ITelemetryService;\n\tprivate _flushDelay: number;\n\tprivate _flushHandle: any = -1;\n\tprivate _buffer: ErrorEvent[] = [];\n\tprotected readonly _disposables = new DisposableStore();\n\n\tconstructor(telemetryService: ITelemetryService, flushDelay = BaseErrorTelemetry.ERROR_FLUSH_TIMEOUT) {\n\t\tthis._telemetryService = telemetryService;\n\t\tthis._flushDelay = flushDelay;\n\n\t\t// (1) check for unexpected but handled errors\n\t\tconst unbind = Errors.errorHandler.addListener((err) => this._onErrorEvent(err));\n\t\tthis._disposables.add(toDisposable(unbind));\n\n\t\t// (2) install implementation-specific error listeners\n\t\tthis.installErrorListeners();\n\t}\n\n\tdispose() {\n\t\tclearTimeout(this._flushHandle);\n\t\tthis._flushBuffer();\n\t\tthis._disposables.dispose();\n\t}\n\n\tprotected installErrorListeners(): void {\n\t\t// to override\n\t}\n\n\tprivate _onErrorEvent(err: any): void {\n\n\t\tif (!err) {\n\t\t\treturn;\n\t\t}\n\n\t\t// unwrap nested errors from loader\n\t\tif (err.detail && err.detail.stack) {\n\t\t\terr = err.detail;\n\t\t}\n\n\t\t// work around behavior in workerServer.ts that breaks up Error.stack\n\t\tlet callstack = Array.isArray(err.stack) ? err.stack.join('\\n') : err.stack;\n\t\tlet msg = err.message ? err.message : safeStringify(err);\n\n\t\t// errors without a stack are not useful telemetry\n\t\tif (!callstack) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._enqueue({ msg, callstack });\n\t}\n\n\tprotected _enqueue(e: ErrorEvent): void {\n\n\t\tconst idx = binarySearch(this._buffer, e, ErrorEvent.compare);\n\t\tif (idx < 0) {\n\t\t\te.count = 1;\n\t\t\tthis._buffer.splice(~idx, 0, e);\n\t\t} else {\n\t\t\tif (!this._buffer[idx].count) {\n\t\t\t\tthis._buffer[idx].count = 0;\n\t\t\t}\n\t\t\tthis._buffer[idx].count! += 1;\n\t\t}\n\n\t\tif (this._flushHandle === -1) {\n\t\t\tthis._flushHandle = setTimeout(() => {\n\t\t\t\tthis._flushBuffer();\n\t\t\t\tthis._flushHandle = -1;\n\t\t\t}, this._flushDelay);\n\t\t}\n\t}\n\n\tprivate _flushBuffer(): void {\n\t\tfor (let error of this._buffer) {\n\t\t\ttype UnhandledErrorClassification = {} & ErrorEventFragment;\n\t\t\tthis._telemetryService.publicLogError2<ErrorEvent, UnhandledErrorClassification>('UnhandledError', error);\n\t\t}\n\t\tthis._buffer.length = 0;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toDisposable } from 'vs/base/common/lifecycle';\nimport { globals } from 'vs/base/common/platform';\nimport BaseErrorTelemetry, { ErrorEvent } from '../common/errorTelemetry';\n\nexport default class ErrorTelemetry extends BaseErrorTelemetry {\n\tprotected installErrorListeners(): void {\n\t\tlet oldOnError: Function;\n\t\tlet that = this;\n\t\tif (typeof globals.onerror === 'function') {\n\t\t\toldOnError = globals.onerror;\n\t\t}\n\t\tglobals.onerror = function (message: string, filename: string, line: number, column?: number, e?: any) {\n\t\t\tthat._onUncaughtError(message, filename, line, column, e);\n\t\t\tif (oldOnError) {\n\t\t\t\toldOnError.apply(this, arguments);\n\t\t\t}\n\t\t};\n\t\tthis._disposables.add(toDisposable(() => {\n\t\t\tif (oldOnError) {\n\t\t\t\tglobals.onerror = oldOnError;\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _onUncaughtError(msg: string, file: string, line: number, column?: number, err?: any): void {\n\t\tlet data: ErrorEvent = {\n\t\t\tcallstack: msg,\n\t\t\tmsg,\n\t\t\tfile,\n\t\t\tline,\n\t\t\tcolumn\n\t\t};\n\n\t\tif (err) {\n\t\t\tlet { name, message, stack } = err;\n\t\t\tdata.uncaught_error_name = name;\n\t\t\tif (message) {\n\t\t\t\tdata.uncaught_error_msg = message;\n\t\t\t}\n\t\t\tif (stack) {\n\t\t\t\tdata.callstack = Array.isArray(err.stack)\n\t\t\t\t\t? err.stack = err.stack.join('\\n')\n\t\t\t\t\t: err.stack;\n\t\t\t}\n\t\t}\n\n\t\tthis._enqueue(data);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\n\nexport const ITelemetryService = createDecorator<ITelemetryService>('telemetryService');\n\nexport interface ITelemetryInfo {\n\tsessionId: string;\n\tmachineId: string;\n\tinstanceId: string;\n\tmsftInternal?: boolean;\n}\n\nexport interface ITelemetryData {\n\tfrom?: string;\n\ttarget?: string;\n\t[key: string]: any;\n}\n\nexport interface ITelemetryService {\n\n\t/**\n\t * Whether error telemetry will get sent. If false, `publicLogError` will no-op.\n\t */\n\treadonly sendErrorTelemetry: boolean;\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Sends a telemetry event that has been privacy approved.\n\t * Do not call this unless you have been given approval.\n\t */\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tpublicLogError(errorEventName: string, data?: ITelemetryData): Promise<void>;\n\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<void>;\n\n\tsetEnabled(value: boolean): void;\n\n\tgetTelemetryInfo(): Promise<ITelemetryInfo>;\n\n\tsetExperimentProperty(name: string, value: string): void;\n\n\tisOptedIn: boolean;\n}\n\n// Keys\nexport const instanceStorageKey = 'telemetry.instanceId';\nexport const currentSessionDateStorageKey = 'telemetry.currentSessionDate';\nexport const firstSessionDateStorageKey = 'telemetry.firstSessionDate';\nexport const lastSessionDateStorageKey = 'telemetry.lastSessionDate';\nexport const machineIdKey = 'telemetry.machineId';\nexport const crashReporterIdStorageKey = 'crashReporter.guid';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getErrorMessage, isPromiseCanceledError, canceled } from 'vs/base/common/errors';\nimport { StatisticType, IGalleryExtension, IExtensionGalleryService, IGalleryExtensionAsset, IQueryOptions, SortBy, SortOrder, IExtensionIdentifier, IReportedExtension, InstallOperation, ITranslation, IGalleryExtensionVersion, IGalleryExtensionAssets, isIExtensionIdentifier, DefaultIconPath } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { getGalleryExtensionId, getGalleryExtensionTelemetryData, adoptToGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { assign, getOrDefault } from 'vs/base/common/objects';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IPager } from 'vs/base/common/paging';\nimport { IRequestService, asJson, asText } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext, IHeaders } from 'vs/base/parts/request/common/request';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IStorageService, StorageScope } from 'vs/platform/storage/common/storage';\nimport { getServiceMachineId } from 'vs/platform/serviceMachineId/common/serviceMachineId';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\n\ninterface IRawGalleryExtensionFile {\n\tassetType: string;\n\tsource: string;\n}\n\ninterface IRawGalleryExtensionProperty {\n\tkey: string;\n\tvalue: string;\n}\n\ninterface IRawGalleryExtensionVersion {\n\tversion: string;\n\tlastUpdated: string;\n\tassetUri: string;\n\tfallbackAssetUri: string;\n\tfiles: IRawGalleryExtensionFile[];\n\tproperties?: IRawGalleryExtensionProperty[];\n}\n\ninterface IRawGalleryExtensionStatistics {\n\tstatisticName: string;\n\tvalue: number;\n}\n\ninterface IRawGalleryExtension {\n\textensionId: string;\n\textensionName: string;\n\tdisplayName: string;\n\tshortDescription: string;\n\tpublisher: { displayName: string, publisherId: string, publisherName: string; };\n\tversions: IRawGalleryExtensionVersion[];\n\tstatistics: IRawGalleryExtensionStatistics[];\n\tflags: string;\n}\n\ninterface IRawGalleryQueryResult {\n\tresults: {\n\t\textensions: IRawGalleryExtension[];\n\t\tresultMetadata: {\n\t\t\tmetadataType: string;\n\t\t\tmetadataItems: {\n\t\t\t\tname: string;\n\t\t\t\tcount: number;\n\t\t\t}[];\n\t\t}[]\n\t}[];\n}\n\nenum Flags {\n\tNone = 0x0,\n\tIncludeVersions = 0x1,\n\tIncludeFiles = 0x2,\n\tIncludeCategoryAndTags = 0x4,\n\tIncludeSharedAccounts = 0x8,\n\tIncludeVersionProperties = 0x10,\n\tExcludeNonValidated = 0x20,\n\tIncludeInstallationTargets = 0x40,\n\tIncludeAssetUri = 0x80,\n\tIncludeStatistics = 0x100,\n\tIncludeLatestVersionOnly = 0x200,\n\tUnpublished = 0x1000\n}\n\nfunction flagsToString(...flags: Flags[]): string {\n\treturn String(flags.reduce((r, f) => r | f, 0));\n}\n\nenum FilterType {\n\tTag = 1,\n\tExtensionId = 4,\n\tCategory = 5,\n\tExtensionName = 7,\n\tTarget = 8,\n\tFeatured = 9,\n\tSearchText = 10,\n\tExcludeWithFlags = 12\n}\n\nconst AssetType = {\n\tIcon: 'Microsoft.VisualStudio.Services.Icons.Default',\n\tDetails: 'Microsoft.VisualStudio.Services.Content.Details',\n\tChangelog: 'Microsoft.VisualStudio.Services.Content.Changelog',\n\tManifest: 'Microsoft.VisualStudio.Code.Manifest',\n\tVSIX: 'Microsoft.VisualStudio.Services.VSIXPackage',\n\tLicense: 'Microsoft.VisualStudio.Services.Content.License',\n\tRepository: 'Microsoft.VisualStudio.Services.Links.Source'\n};\n\nconst PropertyType = {\n\tDependency: 'Microsoft.VisualStudio.Code.ExtensionDependencies',\n\tExtensionPack: 'Microsoft.VisualStudio.Code.ExtensionPack',\n\tEngine: 'Microsoft.VisualStudio.Code.Engine',\n\tLocalizedLanguages: 'Microsoft.VisualStudio.Code.LocalizedLanguages'\n};\n\ninterface ICriterium {\n\tfilterType: FilterType;\n\tvalue?: string;\n}\n\nconst DefaultPageSize = 10;\n\ninterface IQueryState {\n\tpageNumber: number;\n\tpageSize: number;\n\tsortBy: SortBy;\n\tsortOrder: SortOrder;\n\tflags: Flags;\n\tcriteria: ICriterium[];\n\tassetTypes: string[];\n}\n\nconst DefaultQueryState: IQueryState = {\n\tpageNumber: 1,\n\tpageSize: DefaultPageSize,\n\tsortBy: SortBy.NoneOrRelevance,\n\tsortOrder: SortOrder.Default,\n\tflags: Flags.None,\n\tcriteria: [],\n\tassetTypes: []\n};\n\nclass Query {\n\n\tconstructor(private state = DefaultQueryState) { }\n\n\tget pageNumber(): number { return this.state.pageNumber; }\n\tget pageSize(): number { return this.state.pageSize; }\n\tget sortBy(): number { return this.state.sortBy; }\n\tget sortOrder(): number { return this.state.sortOrder; }\n\tget flags(): number { return this.state.flags; }\n\n\twithPage(pageNumber: number, pageSize: number = this.state.pageSize): Query {\n\t\treturn new Query(assign({}, this.state, { pageNumber, pageSize }));\n\t}\n\n\twithFilter(filterType: FilterType, ...values: string[]): Query {\n\t\tconst criteria = [\n\t\t\t...this.state.criteria,\n\t\t\t...values.length ? values.map(value => ({ filterType, value })) : [{ filterType }]\n\t\t];\n\n\t\treturn new Query(assign({}, this.state, { criteria }));\n\t}\n\n\twithSortBy(sortBy: SortBy): Query {\n\t\treturn new Query(assign({}, this.state, { sortBy }));\n\t}\n\n\twithSortOrder(sortOrder: SortOrder): Query {\n\t\treturn new Query(assign({}, this.state, { sortOrder }));\n\t}\n\n\twithFlags(...flags: Flags[]): Query {\n\t\treturn new Query(assign({}, this.state, { flags: flags.reduce((r, f) => r | f, 0) }));\n\t}\n\n\twithAssetTypes(...assetTypes: string[]): Query {\n\t\treturn new Query(assign({}, this.state, { assetTypes }));\n\t}\n\n\tget raw(): any {\n\t\tconst { criteria, pageNumber, pageSize, sortBy, sortOrder, flags, assetTypes } = this.state;\n\t\tconst filters = [{ criteria, pageNumber, pageSize, sortBy, sortOrder }];\n\t\treturn { filters, assetTypes, flags };\n\t}\n\n\tget searchText(): string {\n\t\tconst criterium = this.state.criteria.filter(criterium => criterium.filterType === FilterType.SearchText)[0];\n\t\treturn criterium && criterium.value ? criterium.value : '';\n\t}\n}\n\nfunction getStatistic(statistics: IRawGalleryExtensionStatistics[], name: string): number {\n\tconst result = (statistics || []).filter(s => s.statisticName === name)[0];\n\treturn result ? result.value : 0;\n}\n\nfunction getCoreTranslationAssets(version: IRawGalleryExtensionVersion): [string, IGalleryExtensionAsset][] {\n\tconst coreTranslationAssetPrefix = 'Microsoft.VisualStudio.Code.Translation.';\n\tconst result = version.files.filter(f => f.assetType.indexOf(coreTranslationAssetPrefix) === 0);\n\treturn result.reduce<[string, IGalleryExtensionAsset][]>((result, file) => {\n\t\tconst asset = getVersionAsset(version, file.assetType);\n\t\tif (asset) {\n\t\t\tresult.push([file.assetType.substring(coreTranslationAssetPrefix.length), asset]);\n\t\t}\n\t\treturn result;\n\t}, []);\n}\n\nfunction getRepositoryAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset | null {\n\tif (version.properties) {\n\t\tconst results = version.properties.filter(p => p.key === AssetType.Repository);\n\t\tconst gitRegExp = new RegExp('((git|ssh|http(s)?)|(git@[\\w.]+))(:(//)?)([\\w.@\\:/\\-~]+)(.git)(/)?');\n\n\t\tconst uri = results.filter(r => gitRegExp.test(r.value))[0];\n\t\treturn uri ? { uri: uri.value, fallbackUri: uri.value } : null;\n\t}\n\treturn getVersionAsset(version, AssetType.Repository);\n}\n\nfunction getDownloadAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\treturn {\n\t\turi: `${version.fallbackAssetUri}/${AssetType.VSIX}?redirect=true`,\n\t\tfallbackUri: `${version.fallbackAssetUri}/${AssetType.VSIX}`\n\t};\n}\n\nfunction getIconAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\tconst asset = getVersionAsset(version, AssetType.Icon);\n\tif (asset) {\n\t\treturn asset;\n\t}\n\tconst uri = DefaultIconPath;\n\treturn { uri, fallbackUri: uri };\n}\n\nfunction getVersionAsset(version: IRawGalleryExtensionVersion, type: string): IGalleryExtensionAsset | null {\n\tconst result = version.files.filter(f => f.assetType === type)[0];\n\treturn result ? { uri: `${version.assetUri}/${type}`, fallbackUri: `${version.fallbackAssetUri}/${type}` } : null;\n}\n\nfunction getExtensions(version: IRawGalleryExtensionVersion, property: string): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === property) : [];\n\tconst value = values.length > 0 && values[0].value;\n\treturn value ? value.split(',').map(v => adoptToGalleryExtensionId(v)) : [];\n}\n\nfunction getEngine(version: IRawGalleryExtensionVersion): string {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.Engine) : [];\n\treturn (values.length > 0 && values[0].value) || '';\n}\n\nfunction getLocalizedLanguages(version: IRawGalleryExtensionVersion): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.LocalizedLanguages) : [];\n\tconst value = (values.length > 0 && values[0].value) || '';\n\treturn value ? value.split(',') : [];\n}\n\nfunction getIsPreview(flags: string): boolean {\n\treturn flags.indexOf('preview') !== -1;\n}\n\nfunction toExtension(galleryExtension: IRawGalleryExtension, version: IRawGalleryExtensionVersion, index: number, query: Query, querySource?: string): IGalleryExtension {\n\tconst assets = <IGalleryExtensionAssets>{\n\t\tmanifest: getVersionAsset(version, AssetType.Manifest),\n\t\treadme: getVersionAsset(version, AssetType.Details),\n\t\tchangelog: getVersionAsset(version, AssetType.Changelog),\n\t\tlicense: getVersionAsset(version, AssetType.License),\n\t\trepository: getRepositoryAsset(version),\n\t\tdownload: getDownloadAsset(version),\n\t\ticon: getIconAsset(version),\n\t\tcoreTranslations: getCoreTranslationAssets(version)\n\t};\n\n\treturn {\n\t\tidentifier: {\n\t\t\tid: getGalleryExtensionId(galleryExtension.publisher.publisherName, galleryExtension.extensionName),\n\t\t\tuuid: galleryExtension.extensionId\n\t\t},\n\t\tname: galleryExtension.extensionName,\n\t\tversion: version.version,\n\t\tdate: version.lastUpdated,\n\t\tdisplayName: galleryExtension.displayName,\n\t\tpublisherId: galleryExtension.publisher.publisherId,\n\t\tpublisher: galleryExtension.publisher.publisherName,\n\t\tpublisherDisplayName: galleryExtension.publisher.displayName,\n\t\tdescription: galleryExtension.shortDescription || '',\n\t\tinstallCount: getStatistic(galleryExtension.statistics, 'install'),\n\t\trating: getStatistic(galleryExtension.statistics, 'averagerating'),\n\t\tratingCount: getStatistic(galleryExtension.statistics, 'ratingcount'),\n\t\tassetUri: URI.parse(version.assetUri),\n\t\tassetTypes: version.files.map(({ assetType }) => assetType),\n\t\tassets,\n\t\tproperties: {\n\t\t\tdependencies: getExtensions(version, PropertyType.Dependency),\n\t\t\textensionPack: getExtensions(version, PropertyType.ExtensionPack),\n\t\t\tengine: getEngine(version),\n\t\t\tlocalizedLanguages: getLocalizedLanguages(version)\n\t\t},\n\t\t/* __GDPR__FRAGMENT__\n\t\t\t\"GalleryExtensionTelemetryData2\" : {\n\t\t\t\t\"index\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"searchText\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"querySource\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\ttelemetryData: {\n\t\t\tindex: ((query.pageNumber - 1) * query.pageSize) + index,\n\t\t\tsearchText: query.searchText,\n\t\t\tquerySource\n\t\t},\n\t\tpreview: getIsPreview(galleryExtension.flags)\n\t};\n}\n\ninterface IRawExtensionsReport {\n\tmalicious: string[];\n\tslow: string[];\n}\n\nexport class ExtensionGalleryService implements IExtensionGalleryService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate extensionsGalleryUrl: string | undefined;\n\tprivate extensionsControlUrl: string | undefined;\n\n\tprivate readonly commonHeadersPromise: Promise<{ [key: string]: string; }>;\n\n\tconstructor(\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@optional(IStorageService) storageService: IStorageService,\n\t) {\n\t\tconst config = productService.extensionsGallery;\n\t\tthis.extensionsGalleryUrl = config && config.serviceUrl;\n\t\tthis.extensionsControlUrl = config && config.controlUrl;\n\t\tthis.commonHeadersPromise = resolveMarketplaceHeaders(productService.version, this.environmentService, this.fileService, storageService);\n\t}\n\n\tprivate api(path = ''): string {\n\t\treturn `${this.extensionsGalleryUrl}${path}`;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn !!this.extensionsGalleryUrl;\n\t}\n\n\tgetCompatibleExtension(arg1: IExtensionIdentifier | IGalleryExtension, version?: string): Promise<IGalleryExtension | null> {\n\t\tconst extension: IGalleryExtension | null = isIExtensionIdentifier(arg1) ? null : arg1;\n\t\tif (extension && extension.properties.engine && isEngineValid(extension.properties.engine, this.productService.version)) {\n\t\t\treturn Promise.resolve(extension);\n\t\t}\n\t\tconst { id, uuid } = extension ? extension.identifier : <IExtensionIdentifier>arg1;\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\n\t\tif (uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, id);\n\t\t}\n\n\t\treturn this.queryGallery(query, CancellationToken.None)\n\t\t\t.then(({ galleryExtensions }) => {\n\t\t\t\tconst [rawExtension] = galleryExtensions;\n\t\t\t\tif (!rawExtension || !rawExtension.versions.length) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (version) {\n\t\t\t\t\tconst versionAsset = rawExtension.versions.filter(v => v.version === version)[0];\n\t\t\t\t\tif (versionAsset) {\n\t\t\t\t\t\tconst extension = toExtension(rawExtension, versionAsset, 0, query);\n\t\t\t\t\t\tif (extension.properties.engine && isEngineValid(extension.properties.engine, this.productService.version)) {\n\t\t\t\t\t\t\treturn extension;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn this.getLastValidExtensionVersion(rawExtension, rawExtension.versions)\n\t\t\t\t\t.then(rawVersion => {\n\t\t\t\t\t\tif (rawVersion) {\n\t\t\t\t\t\t\treturn toExtension(rawExtension, rawVersion, 0, query);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tquery(token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tquery(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tquery(arg1: any, arg2?: any): Promise<IPager<IGalleryExtension>> {\n\t\tconst options: IQueryOptions = CancellationToken.isCancellationToken(arg1) ? {} : arg1;\n\t\tconst token: CancellationToken = CancellationToken.isCancellationToken(arg1) ? arg1 : arg2;\n\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.reject(new Error('No extension gallery service configured.'));\n\t\t}\n\n\t\tconst type = options.names ? 'ids' : (options.text ? 'text' : 'all');\n\t\tlet text = options.text || '';\n\t\tconst pageSize = getOrDefault(options, o => o.pageSize, 50);\n\n\t\ttype GalleryServiceQueryClassification = {\n\t\t\ttype: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\ttext: { classification: 'CustomerContent', purpose: 'FeatureInsight' };\n\t\t};\n\t\ttype GalleryServiceQueryEvent = {\n\t\t\ttype: string;\n\t\t\ttext: string;\n\t\t};\n\t\tthis.telemetryService.publicLog2<GalleryServiceQueryEvent, GalleryServiceQueryClassification>('galleryService:query', { type, text });\n\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeLatestVersionOnly, Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, pageSize)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\n\t\tif (text) {\n\t\t\t// Use category filter instead of \"category:themes\"\n\t\t\ttext = text.replace(/\\bcategory:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedCategory, category) => {\n\t\t\t\tquery = query.withFilter(FilterType.Category, category || quotedCategory);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use tag filter instead of \"tag:debuggers\"\n\t\t\ttext = text.replace(/\\btag:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedTag, tag) => {\n\t\t\t\tquery = query.withFilter(FilterType.Tag, tag || quotedTag);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use featured filter\n\t\t\ttext = text.replace(/\\bfeatured(\\s+|\\b|$)/g, () => {\n\t\t\t\tquery = query.withFilter(FilterType.Featured);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\ttext = text.trim();\n\n\t\t\tif (text) {\n\t\t\t\ttext = text.length < 200 ? text : text.substring(0, 200);\n\t\t\t\tquery = query.withFilter(FilterType.SearchText, text);\n\t\t\t}\n\n\t\t\tquery = query.withSortBy(SortBy.NoneOrRelevance);\n\t\t} else if (options.ids) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, ...options.ids);\n\t\t} else if (options.names) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, ...options.names);\n\t\t} else {\n\t\t\tquery = query.withSortBy(SortBy.InstallCount);\n\t\t}\n\n\t\tif (typeof options.sortBy === 'number') {\n\t\t\tquery = query.withSortBy(options.sortBy);\n\t\t}\n\n\t\tif (typeof options.sortOrder === 'number') {\n\t\t\tquery = query.withSortOrder(options.sortOrder);\n\t\t}\n\n\t\treturn this.queryGallery(query, token).then(({ galleryExtensions, total }) => {\n\t\t\tconst extensions = galleryExtensions.map((e, index) => toExtension(e, e.versions[0], index, query, options.source));\n\t\t\tconst pageSize = query.pageSize;\n\t\t\tconst getPage = (pageIndex: number, ct: CancellationToken) => {\n\t\t\t\tif (ct.isCancellationRequested) {\n\t\t\t\t\treturn Promise.reject(canceled());\n\t\t\t\t}\n\n\t\t\t\tconst nextPageQuery = query.withPage(pageIndex + 1);\n\t\t\t\treturn this.queryGallery(nextPageQuery, ct)\n\t\t\t\t\t.then(({ galleryExtensions }) => galleryExtensions.map((e, index) => toExtension(e, e.versions[0], index, nextPageQuery, options.source)));\n\t\t\t};\n\n\t\t\treturn { firstPage: extensions, total, pageSize, getPage } as IPager<IGalleryExtension>;\n\t\t});\n\t}\n\n\tprivate queryGallery(query: Query, token: CancellationToken): Promise<{ galleryExtensions: IRawGalleryExtension[], total: number; }> {\n\t\t// Always exclude non validated and unpublished extensions\n\t\tquery = query\n\t\t\t.withFlags(query.flags, Flags.ExcludeNonValidated)\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.reject(new Error('No extension gallery service configured.'));\n\t\t}\n\t\treturn this.commonHeadersPromise.then(commonHeaders => {\n\t\t\tconst data = JSON.stringify(query.raw);\n\t\t\tconst headers = assign({}, commonHeaders, {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Accept': 'application/json;api-version=3.0-preview.1',\n\t\t\t\t'Accept-Encoding': 'gzip',\n\t\t\t\t'Content-Length': data.length\n\t\t\t});\n\n\t\t\treturn this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.api('/extensionquery'),\n\t\t\t\tdata,\n\t\t\t\theaders\n\t\t\t}, token).then(context => {\n\n\t\t\t\tif (context.res.statusCode && context.res.statusCode >= 400 && context.res.statusCode < 500) {\n\t\t\t\t\treturn { galleryExtensions: [], total: 0 };\n\t\t\t\t}\n\n\t\t\t\treturn asJson<IRawGalleryQueryResult>(context).then(result => {\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tconst r = result.results[0];\n\t\t\t\t\t\tconst galleryExtensions = r.extensions;\n\t\t\t\t\t\tconst resultCount = r.resultMetadata && r.resultMetadata.filter(m => m.metadataType === 'ResultCount')[0];\n\t\t\t\t\t\tconst total = resultCount && resultCount.metadataItems.filter(i => i.name === 'TotalCount')[0].count || 0;\n\n\t\t\t\t\t\treturn { galleryExtensions, total };\n\t\t\t\t\t}\n\t\t\t\t\treturn { galleryExtensions: [], total: 0 };\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\treportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this.commonHeadersPromise.then(commonHeaders => {\n\t\t\tconst headers = { ...commonHeaders, Accept: '*/*;api-version=4.0-preview.1' };\n\n\t\t\treturn this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.api(`/publishers/${publisher}/extensions/${name}/${version}/stats?statType=${type}`),\n\t\t\t\theaders\n\t\t\t}, CancellationToken.None).then(undefined, () => undefined);\n\t\t});\n\t}\n\n\tdownload(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<void> {\n\t\tthis.logService.trace('ExtensionGalleryService#download', extension.identifier.id);\n\t\tconst data = getGalleryExtensionTelemetryData(extension);\n\t\tconst startTime = new Date().getTime();\n\t\t/* __GDPR__\n\t\t\t\"galleryService:downloadVSIX\" : {\n\t\t\t\t\"duration\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tconst log = (duration: number) => this.telemetryService.publicLog('galleryService:downloadVSIX', assign(data, { duration }));\n\n\t\tconst operationParam = operation === InstallOperation.Install ? 'install' : operation === InstallOperation.Update ? 'update' : '';\n\t\tconst downloadAsset = operationParam ? {\n\t\t\turi: `${extension.assets.download.uri}&${operationParam}=true`,\n\t\t\tfallbackUri: `${extension.assets.download.fallbackUri}?${operationParam}=true`\n\t\t} : extension.assets.download;\n\n\t\treturn this.getAsset(downloadAsset)\n\t\t\t.then(context => this.fileService.writeFile(location, context.stream))\n\t\t\t.then(() => log(new Date().getTime() - startTime));\n\t}\n\n\tgetReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.readme) {\n\t\t\treturn this.getAsset(extension.assets.readme, {}, token)\n\t\t\t\t.then(context => asText(context))\n\t\t\t\t.then(content => content || '');\n\t\t}\n\t\treturn Promise.resolve('');\n\t}\n\n\tgetManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null> {\n\t\tif (extension.assets.manifest) {\n\t\t\treturn this.getAsset(extension.assets.manifest, {}, token)\n\t\t\t\t.then(asText)\n\t\t\t\t.then(text => text ? JSON.parse(text) : null);\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tgetCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null> {\n\t\tconst asset = extension.assets.coreTranslations.filter(t => t[0] === languageId.toUpperCase())[0];\n\t\tif (asset) {\n\t\t\treturn this.getAsset(asset[1])\n\t\t\t\t.then(asText)\n\t\t\t\t.then(text => text ? JSON.parse(text) : null);\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tgetChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.changelog) {\n\t\t\treturn this.getAsset(extension.assets.changelog, {}, token)\n\t\t\t\t.then(context => asText(context))\n\t\t\t\t.then(content => content || '');\n\t\t}\n\t\treturn Promise.resolve('');\n\t}\n\n\tasync getAllVersions(extension: IGalleryExtension, compatible: boolean): Promise<IGalleryExtensionVersion[]> {\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeVersions, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\n\t\tif (extension.identifier.uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, extension.identifier.uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, extension.identifier.id);\n\t\t}\n\n\t\tconst result: IGalleryExtensionVersion[] = [];\n\t\tconst { galleryExtensions } = await this.queryGallery(query, CancellationToken.None);\n\t\tif (galleryExtensions.length) {\n\t\t\tif (compatible) {\n\t\t\t\tawait Promise.all(galleryExtensions[0].versions.map(async v => {\n\t\t\t\t\tlet engine: string | undefined;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tengine = await this.getEngine(v);\n\t\t\t\t\t} catch (error) { /* Ignore error and skip version */ }\n\t\t\t\t\tif (engine && isEngineValid(engine, this.productService.version)) {\n\t\t\t\t\t\tresult.push({ version: v!.version, date: v!.lastUpdated });\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tresult.push(...galleryExtensions[0].versions.map(v => ({ version: v.version, date: v.lastUpdated })));\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate getAsset(asset: IGalleryExtensionAsset, options: IRequestOptions = {}, token: CancellationToken = CancellationToken.None): Promise<IRequestContext> {\n\t\treturn this.commonHeadersPromise.then(commonHeaders => {\n\t\t\tconst baseOptions = { type: 'GET' };\n\t\t\tconst headers = assign({}, commonHeaders, options.headers || {});\n\t\t\toptions = assign({}, options, baseOptions, { headers });\n\n\t\t\tconst url = asset.uri;\n\t\t\tconst fallbackUrl = asset.fallbackUri;\n\t\t\tconst firstOptions = assign({}, options, { url });\n\n\t\t\treturn this.requestService.request(firstOptions, token)\n\t\t\t\t.then(context => {\n\t\t\t\t\tif (context.res.statusCode === 200) {\n\t\t\t\t\t\treturn Promise.resolve(context);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn asText(context)\n\t\t\t\t\t\t.then(message => Promise.reject(new Error(`Expected 200, got back ${context.res.statusCode} instead.\\n\\n${message}`)));\n\t\t\t\t})\n\t\t\t\t.then(undefined, err => {\n\t\t\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst message = getErrorMessage(err);\n\t\t\t\t\ttype GalleryServiceCDNFallbackClassification = {\n\t\t\t\t\t\turl: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\t\t\tmessage: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\t\t};\n\t\t\t\t\ttype GalleryServiceCDNFallbackEvent = {\n\t\t\t\t\t\turl: string;\n\t\t\t\t\t\tmessage: string;\n\t\t\t\t\t};\n\t\t\t\t\tthis.telemetryService.publicLog2<GalleryServiceCDNFallbackEvent, GalleryServiceCDNFallbackClassification>('galleryService:cdnFallback', { url, message });\n\n\t\t\t\t\tconst fallbackOptions = assign({}, options, { url: fallbackUrl });\n\t\t\t\t\treturn this.requestService.request(fallbackOptions, token);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tprivate getLastValidExtensionVersion(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion | null> {\n\t\tconst version = this.getLastValidExtensionVersionFromProperties(extension, versions);\n\t\tif (version) {\n\t\t\treturn version;\n\t\t}\n\t\treturn this.getLastValidExtensionVersionRecursively(extension, versions);\n\t}\n\n\tprivate getLastValidExtensionVersionFromProperties(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion> | null {\n\t\tfor (const version of versions) {\n\t\t\tconst engine = getEngine(version);\n\t\t\tif (!engine) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (isEngineValid(engine, this.productService.version)) {\n\t\t\t\treturn Promise.resolve(version);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate getEngine(version: IRawGalleryExtensionVersion): Promise<string> {\n\t\tconst engine = getEngine(version);\n\t\tif (engine) {\n\t\t\treturn Promise.resolve(engine);\n\t\t}\n\n\t\tconst manifest = getVersionAsset(version, AssetType.Manifest);\n\t\tif (!manifest) {\n\t\t\treturn Promise.reject('Manifest was not found');\n\t\t}\n\n\t\tconst headers = { 'Accept-Encoding': 'gzip' };\n\t\treturn this.getAsset(manifest, { headers })\n\t\t\t.then(context => asJson<IExtensionManifest>(context))\n\t\t\t.then(manifest => manifest ? manifest.engines.vscode : Promise.reject<string>('Error while reading manifest'));\n\t}\n\n\tprivate getLastValidExtensionVersionRecursively(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion | null> {\n\t\tif (!versions.length) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst version = versions[0];\n\t\treturn this.getEngine(version)\n\t\t\t.then(engine => {\n\t\t\t\tif (!isEngineValid(engine, this.productService.version)) {\n\t\t\t\t\treturn this.getLastValidExtensionVersionRecursively(extension, versions.slice(1));\n\t\t\t\t}\n\n\t\t\t\tversion.properties = version.properties || [];\n\t\t\t\tversion.properties.push({ key: PropertyType.Engine, value: engine });\n\t\t\t\treturn version;\n\t\t\t});\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn Promise.reject(new Error('No extension gallery service configured.'));\n\t\t}\n\n\t\tif (!this.extensionsControlUrl) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\treturn this.requestService.request({ type: 'GET', url: this.extensionsControlUrl }, CancellationToken.None).then(context => {\n\t\t\tif (context.res.statusCode !== 200) {\n\t\t\t\treturn Promise.reject(new Error('Could not get extensions report.'));\n\t\t\t}\n\n\t\t\treturn asJson<IRawExtensionsReport>(context).then(result => {\n\t\t\t\tconst map = new Map<string, IReportedExtension>();\n\n\t\t\t\tif (result) {\n\t\t\t\t\tfor (const id of result.malicious) {\n\t\t\t\t\t\tconst ext = map.get(id) || { id: { id }, malicious: true, slow: false };\n\t\t\t\t\t\text.malicious = true;\n\t\t\t\t\t\tmap.set(id, ext);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [...map.values()];\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport async function resolveMarketplaceHeaders(version: string, environmentService: IEnvironmentService, fileService: IFileService, storageService: {\n\tget: (key: string, scope: StorageScope) => string | undefined,\n\tstore: (key: string, value: string, scope: StorageScope) => void\n} | undefined): Promise<{ [key: string]: string; }> {\n\tconst headers: IHeaders = {\n\t\t'X-Market-Client-Id': `VSCode ${version}`,\n\t\t'User-Agent': `VSCode ${version}`\n\t};\n\tconst uuid = await getServiceMachineId(environmentService, fileService, storageService);\n\theaders['X-Market-User-Id'] = uuid;\n\treturn headers;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ITelemetryAppender } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { cloneAndChange, mixin } from 'vs/base/common/objects';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\n\nexport interface ITelemetryServiceConfig {\n\tappender: ITelemetryAppender;\n\tsendErrorTelemetry?: boolean;\n\tcommonProperties?: Promise<{ [name: string]: any }>;\n\tpiiPaths?: string[];\n}\n\nexport class TelemetryService implements ITelemetryService {\n\n\tstatic readonly IDLE_START_EVENT_NAME = 'UserIdleStart';\n\tstatic readonly IDLE_STOP_EVENT_NAME = 'UserIdleStop';\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _appender: ITelemetryAppender;\n\tprivate _commonProperties: Promise<{ [name: string]: any; }>;\n\tprivate _experimentProperties: { [name: string]: string } = {};\n\tprivate _piiPaths: string[];\n\tprivate _userOptIn: boolean;\n\tprivate _enabled: boolean;\n\tpublic readonly sendErrorTelemetry: boolean;\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate _cleanupPatterns: RegExp[] = [];\n\n\tconstructor(\n\t\tconfig: ITelemetryServiceConfig,\n\t\t@optional(IConfigurationService) private _configurationService: IConfigurationService\n\t) {\n\t\tthis._appender = config.appender;\n\t\tthis._commonProperties = config.commonProperties || Promise.resolve({});\n\t\tthis._piiPaths = config.piiPaths || [];\n\t\tthis._userOptIn = true;\n\t\tthis._enabled = true;\n\t\tthis.sendErrorTelemetry = !!config.sendErrorTelemetry;\n\n\t\t// static cleanup pattern for: `file:///DANGEROUS/PATH/resources/app/Useful/Information`\n\t\tthis._cleanupPatterns = [/file:\\/\\/\\/.*?\\/resources\\/app\\//gi];\n\n\t\tfor (let piiPath of this._piiPaths) {\n\t\t\tthis._cleanupPatterns.push(new RegExp(escapeRegExpCharacters(piiPath), 'gi'));\n\t\t}\n\n\t\tif (this._configurationService) {\n\t\t\tthis._updateUserOptIn();\n\t\t\tthis._configurationService.onDidChangeConfiguration(this._updateUserOptIn, this, this._disposables);\n\t\t\ttype OptInClassification = {\n\t\t\t\toptIn: { classification: 'SystemMetaData', purpose: 'BusinessInsight', isMeasurement: true };\n\t\t\t};\n\t\t\ttype OptInEvent = {\n\t\t\t\toptIn: boolean;\n\t\t\t};\n\t\t\tthis.publicLog2<OptInEvent, OptInClassification>('optInStatus', { optIn: this._userOptIn });\n\n\t\t\tthis._commonProperties.then(values => {\n\t\t\t\tconst isHashedId = /^[a-f0-9]+$/i.test(values['common.machineId']);\n\n\t\t\t\ttype MachineIdFallbackClassification = {\n\t\t\t\t\tusingFallbackGuid: { classification: 'SystemMetaData', purpose: 'BusinessInsight', isMeasurement: true };\n\t\t\t\t};\n\t\t\t\tthis.publicLog2<{ usingFallbackGuid: boolean }, MachineIdFallbackClassification>('machineIdFallback', { usingFallbackGuid: !isHashedId });\n\t\t\t});\n\t\t}\n\t}\n\n\tsetExperimentProperty(name: string, value: string): void {\n\t\tthis._experimentProperties[name] = value;\n\t}\n\n\tsetEnabled(value: boolean): void {\n\t\tthis._enabled = value;\n\t}\n\n\tprivate _updateUserOptIn(): void {\n\t\tconst config = this._configurationService.getValue<any>(TELEMETRY_SECTION_ID);\n\t\tthis._userOptIn = config ? config.enableTelemetry : this._userOptIn;\n\t}\n\n\tget isOptedIn(): boolean {\n\t\treturn this._userOptIn && this._enabled;\n\t}\n\n\tasync getTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\tconst values = await this._commonProperties;\n\n\t\t// well known properties\n\t\tlet sessionId = values['sessionID'];\n\t\tlet instanceId = values['common.instanceId'];\n\t\tlet machineId = values['common.machineId'];\n\t\tlet msftInternal = values['common.msftInternal'];\n\n\t\treturn { sessionId, instanceId, machineId, msftInternal };\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<any> {\n\t\t// don't send events when the user is optout\n\t\tif (!this.isOptedIn) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this._commonProperties.then(values => {\n\n\t\t\t// (first) add common properties\n\t\t\tdata = mixin(data, values);\n\n\t\t\t// (next) add experiment properties\n\t\t\tdata = mixin(data, this._experimentProperties);\n\n\t\t\t// (last) remove all PII from data\n\t\t\tdata = cloneAndChange(data, value => {\n\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\treturn this._cleanupInfo(value, anonymizeFilePaths);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\n\t\t\tthis._appender.log(eventName, data);\n\n\t\t}, err => {\n\t\t\t// unsure what to do now...\n\t\t\tconsole.error(err);\n\t\t});\n\t}\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<any> {\n\t\treturn this.publicLog(eventName, data as ITelemetryData, anonymizeFilePaths);\n\t}\n\n\tpublicLogError(errorEventName: string, data?: ITelemetryData): Promise<any> {\n\t\tif (!this.sendErrorTelemetry) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\t// Send error event and anonymize paths\n\t\treturn this.publicLog(errorEventName, data, true);\n\t}\n\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<any> {\n\t\treturn this.publicLogError(eventName, data as ITelemetryData);\n\t}\n\n\tprivate _cleanupInfo(stack: string, anonymizeFilePaths?: boolean): string {\n\t\tlet updatedStack = stack;\n\n\t\tif (anonymizeFilePaths) {\n\t\t\tconst cleanUpIndexes: [number, number][] = [];\n\t\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst result = regexp.exec(stack);\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcleanUpIndexes.push([result.index, regexp.lastIndex]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst nodeModulesRegex = /^[\\\\\\/]?(node_modules|node_modules\\.asar)[\\\\\\/]/;\n\t\t\tconst fileRegex = /(file:\\/\\/)?([a-zA-Z]:(\\\\\\\\|\\\\|\\/)|(\\\\\\\\|\\\\|\\/))?([\\w-\\._]+(\\\\\\\\|\\\\|\\/))+[\\w-\\._]*/g;\n\t\t\tlet lastIndex = 0;\n\t\t\tupdatedStack = '';\n\n\t\t\twhile (true) {\n\t\t\t\tconst result = fileRegex.exec(stack);\n\t\t\t\tif (!result) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// Anoynimize user file paths that do not need to be retained or cleaned up.\n\t\t\t\tif (!nodeModulesRegex.test(result[0]) && cleanUpIndexes.every(([x, y]) => result.index < x || result.index >= y)) {\n\t\t\t\t\tupdatedStack += stack.substring(lastIndex, result.index) + '<REDACTED: user-file-path>';\n\t\t\t\t\tlastIndex = fileRegex.lastIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastIndex < stack.length) {\n\t\t\t\tupdatedStack += stack.substr(lastIndex);\n\t\t\t}\n\t\t}\n\n\t\t// sanitize with configured cleanup patterns\n\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\tupdatedStack = updatedStack.replace(regexp, '');\n\t\t}\n\t\treturn updatedStack;\n\t}\n}\n\n\nconst TELEMETRY_SECTION_ID = 'telemetry';\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t'id': TELEMETRY_SECTION_ID,\n\t'order': 110,\n\t'type': 'object',\n\t'title': localize('telemetryConfigurationTitle', \"Telemetry\"),\n\t'properties': {\n\t\t'telemetry.enableTelemetry': {\n\t\t\t'type': 'boolean',\n\t\t\t'description': localize('telemetry.enableTelemetry', \"Enable usage data and errors to be sent to a Microsoft online service.\"),\n\t\t\t'default': true,\n\t\t\t'tags': ['usesOnlineServices']\n\t\t}\n\t}\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, ConfigurationTarget, ConfigurationTargetToString } from 'vs/platform/configuration/common/configuration';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\nimport { safeStringify } from 'vs/base/common/objects';\nimport { isObject } from 'vs/base/common/types';\n\nexport const NullTelemetryService = new class implements ITelemetryService {\n\tdeclare readonly _serviceBrand: undefined;\n\treadonly sendErrorTelemetry = false;\n\n\tpublicLog(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLog(eventName, data as ITelemetryData);\n\t}\n\tpublicLogError(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLogError(eventName, data as ITelemetryData);\n\t}\n\n\tsetExperimentProperty() { }\n\tsetEnabled() { }\n\tisOptedIn = true;\n\tgetTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn Promise.resolve({\n\t\t\tinstanceId: 'someValue.instanceId',\n\t\t\tsessionId: 'someValue.sessionId',\n\t\t\tmachineId: 'someValue.machineId'\n\t\t});\n\t}\n};\n\nexport interface ITelemetryAppender {\n\tlog(eventName: string, data: any): void;\n\tflush(): Promise<any>;\n}\n\nexport function combinedAppender(...appenders: ITelemetryAppender[]): ITelemetryAppender {\n\treturn {\n\t\tlog: (e, d) => appenders.forEach(a => a.log(e, d)),\n\t\tflush: () => Promise.all(appenders.map(a => a.flush()))\n\t};\n}\n\nexport const NullAppender: ITelemetryAppender = { log: () => null, flush: () => Promise.resolve(null) };\n\n\nexport class LogAppender implements ITelemetryAppender {\n\n\tprivate commonPropertiesRegex = /^sessionID$|^version$|^timestamp$|^commitHash$|^common\\./;\n\tconstructor(@ILogService private readonly _logService: ILogService) { }\n\n\tflush(): Promise<any> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tlog(eventName: string, data: any): void {\n\t\tconst strippedData: { [key: string]: any } = {};\n\t\tObject.keys(data).forEach(key => {\n\t\t\tif (!this.commonPropertiesRegex.test(key)) {\n\t\t\t\tstrippedData[key] = data[key];\n\t\t\t}\n\t\t});\n\t\tthis._logService.trace(`telemetry/${eventName}`, strippedData);\n\t}\n}\n\n/* __GDPR__FRAGMENT__\n\t\"URIDescriptor\" : {\n\t\t\"mimeType\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"scheme\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"ext\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"path\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n*/\nexport interface URIDescriptor {\n\tmimeType?: string;\n\tscheme?: string;\n\text?: string;\n\tpath?: string;\n}\n\nexport function configurationTelemetry(telemetryService: ITelemetryService, configurationService: IConfigurationService): IDisposable {\n\treturn configurationService.onDidChangeConfiguration(event => {\n\t\tif (event.source !== ConfigurationTarget.DEFAULT) {\n\t\t\ttype UpdateConfigurationClassification = {\n\t\t\t\tconfigurationSource: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\tconfigurationKeys: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t};\n\t\t\ttype UpdateConfigurationEvent = {\n\t\t\t\tconfigurationSource: string;\n\t\t\t\tconfigurationKeys: string[];\n\t\t\t};\n\t\t\ttelemetryService.publicLog2<UpdateConfigurationEvent, UpdateConfigurationClassification>('updateConfiguration', {\n\t\t\t\tconfigurationSource: ConfigurationTargetToString(event.source),\n\t\t\t\tconfigurationKeys: flattenKeys(event.sourceConfig)\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport interface Properties {\n\t[key: string]: string;\n}\n\nexport interface Measurements {\n\t[key: string]: number;\n}\n\nexport function validateTelemetryData(data?: any): { properties: Properties, measurements: Measurements } {\n\n\tconst properties: Properties = Object.create(null);\n\tconst measurements: Measurements = Object.create(null);\n\n\tconst flat = Object.create(null);\n\tflatten(data, flat);\n\n\tfor (let prop in flat) {\n\t\t// enforce property names less than 150 char, take the last 150 char\n\t\tprop = prop.length > 150 ? prop.substr(prop.length - 149) : prop;\n\t\tconst value = flat[prop];\n\n\t\tif (typeof value === 'number') {\n\t\t\tmeasurements[prop] = value;\n\n\t\t} else if (typeof value === 'boolean') {\n\t\t\tmeasurements[prop] = value ? 1 : 0;\n\n\t\t} else if (typeof value === 'string') {\n\t\t\t//enforce property value to be less than 1024 char, take the first 1024 char\n\t\t\tproperties[prop] = value.substring(0, 1023);\n\n\t\t} else if (typeof value !== 'undefined' && value !== null) {\n\t\t\tproperties[prop] = value;\n\t\t}\n\t}\n\n\treturn {\n\t\tproperties,\n\t\tmeasurements\n\t};\n}\n\nexport function cleanRemoteAuthority(remoteAuthority?: string): string {\n\tif (!remoteAuthority) {\n\t\treturn 'none';\n\t}\n\n\tlet ret = 'other';\n\tconst allowedAuthorities = ['ssh-remote', 'dev-container', 'attached-container', 'wsl'];\n\tallowedAuthorities.forEach((res: string) => {\n\t\tif (remoteAuthority!.indexOf(`${res}+`) === 0) {\n\t\t\tret = res;\n\t\t}\n\t});\n\n\treturn ret;\n}\n\nfunction flatten(obj: any, result: { [key: string]: any }, order: number = 0, prefix?: string): void {\n\tif (!obj) {\n\t\treturn;\n\t}\n\n\tfor (let item of Object.getOwnPropertyNames(obj)) {\n\t\tconst value = obj[item];\n\t\tconst index = prefix ? prefix + item : item;\n\n\t\tif (Array.isArray(value)) {\n\t\t\tresult[index] = safeStringify(value);\n\n\t\t} else if (value instanceof Date) {\n\t\t\t// TODO unsure why this is here and not in _getData\n\t\t\tresult[index] = value.toISOString();\n\n\t\t} else if (isObject(value)) {\n\t\t\tif (order < 2) {\n\t\t\t\tflatten(value, result, order + 1, index + '.');\n\t\t\t} else {\n\t\t\t\tresult[index] = safeStringify(value);\n\t\t\t}\n\t\t} else {\n\t\t\tresult[index] = value;\n\t\t}\n\t}\n}\n\nfunction flattenKeys(value: Object | undefined): string[] {\n\tif (!value) {\n\t\treturn [];\n\t}\n\tconst result: string[] = [];\n\tflatKeys(result, '', value);\n\treturn result;\n}\n\nfunction flatKeys(result: string[], prefix: string, value: { [key: string]: any } | undefined): void {\n\tif (value && typeof value === 'object' && !Array.isArray(value)) {\n\t\tObject.keys(value)\n\t\t\t.forEach(key => flatKeys(result, prefix ? `${prefix}.${key}` : key, value[key]));\n\t} else {\n\t\tresult.push(prefix);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as appInsights from 'applicationinsights';\nimport { mixin } from 'vs/base/common/objects';\nimport { ITelemetryAppender, validateTelemetryData } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nfunction getClient(aiKey: string): appInsights.TelemetryClient {\n\n\tlet client: appInsights.TelemetryClient;\n\tif (appInsights.defaultClient) {\n\t\tclient = new appInsights.TelemetryClient(aiKey);\n\t\tclient.channel.setUseDiskRetryCaching(true);\n\t} else {\n\t\tappInsights.setup(aiKey)\n\t\t\t.setAutoCollectRequests(false)\n\t\t\t.setAutoCollectPerformance(false)\n\t\t\t.setAutoCollectExceptions(false)\n\t\t\t.setAutoCollectDependencies(false)\n\t\t\t.setAutoDependencyCorrelation(false)\n\t\t\t.setAutoCollectConsole(false)\n\t\t\t.setInternalLogging(false, false)\n\t\t\t.setUseDiskRetryCaching(true)\n\t\t\t.start();\n\t\tclient = appInsights.defaultClient;\n\t}\n\n\tif (aiKey.indexOf('AIF-') === 0) {\n\t\tclient.config.endpointUrl = 'https://vortex.data.microsoft.com/collect/v1';\n\t}\n\treturn client;\n}\n\n\nexport class AppInsightsAppender implements ITelemetryAppender {\n\n\tprivate _aiClient?: appInsights.TelemetryClient;\n\n\tconstructor(\n\t\tprivate _eventPrefix: string,\n\t\tprivate _defaultData: { [key: string]: any } | null,\n\t\taiKeyOrClientFactory: string | (() => appInsights.TelemetryClient), // allow factory function for testing\n\t\t@ILogService private _logService?: ILogService\n\t) {\n\t\tif (!this._defaultData) {\n\t\t\tthis._defaultData = Object.create(null);\n\t\t}\n\n\t\tif (typeof aiKeyOrClientFactory === 'string') {\n\t\t\tthis._aiClient = getClient(aiKeyOrClientFactory);\n\t\t} else if (typeof aiKeyOrClientFactory === 'function') {\n\t\t\tthis._aiClient = aiKeyOrClientFactory();\n\t\t}\n\t}\n\n\tlog(eventName: string, data?: any): void {\n\t\tif (!this._aiClient) {\n\t\t\treturn;\n\t\t}\n\t\tdata = mixin(data, this._defaultData);\n\t\tdata = validateTelemetryData(data);\n\n\t\tif (this._logService) {\n\t\t\tthis._logService.trace(`telemetry/${eventName}`, data);\n\t\t}\n\t\tthis._aiClient.trackEvent({\n\t\t\tname: this._eventPrefix + '/' + eventName,\n\t\t\tproperties: data.properties,\n\t\t\tmeasurements: data.measurements\n\t\t});\n\t}\n\n\tflush(): Promise<any> {\n\t\tif (this._aiClient) {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tthis._aiClient!.flush({\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\t// all data flushed\n\t\t\t\t\t\tthis._aiClient = undefined;\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Platform from 'vs/base/common/platform';\nimport * as os from 'os';\nimport * as uuid from 'vs/base/common/uuid';\nimport { readFile } from 'vs/base/node/pfs';\n\nexport async function resolveCommonProperties(\n\tcommit: string | undefined,\n\tversion: string | undefined,\n\tmachineId: string | undefined,\n\tmsftInternalDomains: string[] | undefined,\n\tinstallSourcePath: string,\n\tproduct?: string\n): Promise<{ [name: string]: string | boolean | undefined; }> {\n\tconst result: { [name: string]: string | boolean | undefined; } = Object.create(null);\n\n\t// __GDPR__COMMON__ \"common.machineId\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.machineId'] = machineId;\n\t// __GDPR__COMMON__ \"sessionID\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['sessionID'] = uuid.generateUuid() + Date.now();\n\t// __GDPR__COMMON__ \"commitHash\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['commitHash'] = commit;\n\t// __GDPR__COMMON__ \"version\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['version'] = version;\n\t// __GDPR__COMMON__ \"common.platformVersion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platformVersion'] = (os.release() || '').replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, '$1$2$3');\n\t// __GDPR__COMMON__ \"common.platform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platform'] = Platform.PlatformToString(Platform.platform);\n\t// __GDPR__COMMON__ \"common.nodePlatform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodePlatform'] = process.platform;\n\t// __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodeArch'] = process.arch;\n\t// __GDPR__COMMON__ \"common.product\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.product'] = product || 'desktop';\n\n\tconst msftInternal = verifyMicrosoftInternalDomain(msftInternalDomains || []);\n\tif (msftInternal) {\n\t\t// __GDPR__COMMON__ \"common.msftInternal\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\tresult['common.msftInternal'] = msftInternal;\n\t}\n\n\t// dynamic properties which value differs on each call\n\tlet seq = 0;\n\tconst startTime = Date.now();\n\tObject.defineProperties(result, {\n\t\t// __GDPR__COMMON__ \"timestamp\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t'timestamp': {\n\t\t\tget: () => new Date(),\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.timesincesessionstart\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.timesincesessionstart': {\n\t\t\tget: () => Date.now() - startTime,\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.sequence\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.sequence': {\n\t\t\tget: () => seq++,\n\t\t\tenumerable: true\n\t\t}\n\t});\n\n\tif (process.platform === 'linux' && process.env.SNAP && process.env.SNAP_REVISION) {\n\t\t// __GDPR__COMMON__ \"common.snap\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.snap'] = 'true';\n\t}\n\n\ttry {\n\t\tconst contents = await readFile(installSourcePath, 'utf8');\n\n\t\t// __GDPR__COMMON__ \"common.source\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.source'] = contents.slice(0, 30);\n\t} catch (error) {\n\t\t// ignore error\n\t}\n\n\treturn result;\n}\n\nfunction verifyMicrosoftInternalDomain(domainList: readonly string[]): boolean {\n\tif (!process || !process.env || !process.env['USERDNSDOMAIN']) {\n\t\treturn false;\n\t}\n\n\tconst domain = process.env['USERDNSDOMAIN']!.toLowerCase();\n\treturn domainList.some(msftDomain => domain === msftDomain);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nimport { readdirSync } from 'vs/base/node/pfs';\nimport { statSync, readFileSync } from 'fs';\nimport { join } from 'vs/base/common/path';\n\nexport function buildTelemetryMessage(appRoot: string, extensionsPath?: string): string {\n\tconst mergedTelemetry = Object.create(null);\n\t// Simple function to merge the telemetry into one json object\n\tconst mergeTelemetry = (contents: string, dirName: string) => {\n\t\tconst telemetryData = JSON.parse(contents);\n\t\tmergedTelemetry[dirName] = telemetryData;\n\t};\n\tif (extensionsPath) {\n\t\t// Gets all the directories inside the extension directory\n\t\tconst dirs = readdirSync(extensionsPath).filter(files => {\n\t\t\t// This handles case where broken symbolic links can cause statSync to throw and error\n\t\t\ttry {\n\t\t\t\treturn statSync(join(extensionsPath, files)).isDirectory();\n\t\t\t} catch {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\tconst telemetryJsonFolders: string[] = [];\n\t\tdirs.forEach((dir) => {\n\t\t\tconst files = readdirSync(join(extensionsPath, dir)).filter(file => file === 'telemetry.json');\n\t\t\t// We know it contains a telemetry.json file so we add it to the list of folders which have one\n\t\t\tif (files.length === 1) {\n\t\t\t\ttelemetryJsonFolders.push(dir);\n\t\t\t}\n\t\t});\n\t\ttelemetryJsonFolders.forEach((folder) => {\n\t\t\tconst contents = readFileSync(join(extensionsPath, folder, 'telemetry.json')).toString();\n\t\t\tmergeTelemetry(contents, folder);\n\t\t});\n\t}\n\tlet contents = readFileSync(join(appRoot, 'telemetry-core.json')).toString();\n\tmergeTelemetry(contents, 'vscode-core');\n\tcontents = readFileSync(join(appRoot, 'telemetry-extensions.json')).toString();\n\tmergeTelemetry(contents, 'vscode-extensions');\n\treturn JSON.stringify(mergedTelemetry, null, 4);\n}","import { ReadWriteConnection } from '@coder/node-browser';\nimport { Event } from 'vs/base/common/event';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const INodeProxyService = createDecorator<INodeProxyService>('nodeProxyService');\n\nexport interface INodeProxyService extends ReadWriteConnection {\n\t_serviceBrand: any;\n\tsend(message: string): void;\n\tonMessage: Event<string>;\n\tonUp: Event<void>;\n\tonClose: Event<void>;\n\tonDown: Event<void>;\n}\n\nexport class NodeProxyChannel implements IServerChannel {\n\tconstructor(private service: INodeProxyService) {}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onMessage': return this.service.onMessage;\n\t\t}\n\t\tthrow new Error(`Invalid listen ${event}`);\n\t}\n\n\tasync call(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'send': return this.service.send(args[0]);\n\t\t}\n\t\tthrow new Error(`Invalid call ${command}`);\n\t}\n}\n\nexport class NodeProxyChannelClient {\n\t_serviceBrand: any;\n\n\tpublic readonly onMessage: Event<string>;\n\n\tconstructor(private readonly channel: IChannel) {\n\t\tthis.onMessage = this.channel.listen<string>('onMessage');\n\t}\n\n\tpublic send(data: string): void {\n\t\tthis.channel.call('send', [data]);\n\t}\n}\n","import { ITelemetryData } from 'vs/base/common/actions';\nimport { Event } from 'vs/base/common/event';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { ClassifiedEvent, GDPRClassification, StrictPropertyCheck } from 'vs/platform/telemetry/common/gdprTypings';\nimport { ITelemetryInfo, ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\nexport class TelemetryChannel implements IServerChannel {\n\tconstructor(private service: ITelemetryService) {}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Invalid listen ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'publicLog': return this.service.publicLog(args[0], args[1], args[2]);\n\t\t\tcase 'publicLog2': return this.service.publicLog2(args[0], args[1], args[2]);\n\t\t\tcase 'publicLogError': return this.service.publicLogError(args[0], args[1]);\n\t\t\tcase 'publicLogError2': return this.service.publicLogError2(args[0], args[1]);\n\t\t\tcase 'setEnabled': return Promise.resolve(this.service.setEnabled(args[0]));\n\t\t\tcase 'getTelemetryInfo': return this.service.getTelemetryInfo();\n\t\t\tcase 'setExperimentProperty': return Promise.resolve(this.service.setExperimentProperty(args[0], args[1]));\n\t\t}\n\t\tthrow new Error(`Invalid call ${command}`);\n\t}\n}\n\nexport class TelemetryChannelClient implements ITelemetryService {\n\t_serviceBrand: any;\n\n\t// These don't matter; telemetry is sent to the Node side which decides\n\t// whether to send the telemetry event.\n\tpublic isOptedIn = true;\n\tpublic sendErrorTelemetry = true;\n\n\tconstructor(private readonly channel: IChannel) {}\n\n\tpublic publicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void> {\n\t\treturn this.channel.call('publicLog', [eventName, data, anonymizeFilePaths]);\n\t}\n\n\tpublic publicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<void> {\n\t\treturn this.channel.call('publicLog2', [eventName, data, anonymizeFilePaths]);\n\t}\n\n\tpublic publicLogError(errorEventName: string, data?: ITelemetryData): Promise<void> {\n\t\treturn this.channel.call('publicLogError', [errorEventName, data]);\n\t}\n\n\tpublic publicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<void> {\n\t\treturn this.channel.call('publicLogError2', [eventName, data]);\n\t}\n\n\tpublic setEnabled(value: boolean): void {\n\t\tthis.channel.call('setEnable', [value]);\n\t}\n\n\tpublic getTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn this.channel.call('getTelemetryInfo');\n\t}\n\n\tpublic setExperimentProperty(name: string, value: string): void {\n\t\tthis.channel.call('setExperimentProperty', [name, value]);\n\t}\n}\n","import * as appInsights from 'applicationinsights';\nimport * as https from 'https';\nimport * as http from 'http';\nimport * as os from 'os';\n\nclass Channel {\n\tpublic get _sender() {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic get _buffer() {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic setUseDiskRetryCaching(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic send(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic triggerSend(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n}\n\nexport class TelemetryClient  {\n\tpublic context: any = undefined;\n\tpublic commonProperties: any = undefined;\n\tpublic config: any = {};\n\n\tpublic channel: any = new Channel();\n\n\tpublic addTelemetryProcessor(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic clearTelemetryProcessors(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic runTelemetryProcessors(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackTrace(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackMetric(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackException(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackRequest(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackDependency(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic track(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpRequestSync(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpRequest(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpDependency(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackEvent(options: appInsights.Contracts.EventTelemetry): void {\n\t\tif (!options.properties) {\n\t\t\toptions.properties = {};\n\t\t}\n\t\tif (!options.measurements) {\n\t\t\toptions.measurements = {};\n\t\t}\n\n\t\ttry {\n\t\t\tconst cpus = os.cpus();\n\t\t\toptions.measurements.cores = cpus.length;\n\t\t\toptions.properties['common.cpuModel'] = cpus[0].model;\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\toptions.measurements.memoryFree = os.freemem();\n\t\t\toptions.measurements.memoryTotal = os.totalmem();\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\toptions.properties['common.shell'] = os.userInfo().shell;\n\t\t\toptions.properties['common.release'] = os.release();\n\t\t\toptions.properties['common.arch'] = os.arch();\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\tconst url = process.env.TELEMETRY_URL || 'https://v1.telemetry.coder.com/track';\n\t\t\tconst request = (/^http:/.test(url) ? http : https).request(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t});\n\t\t\trequest.on('error', () => { /* We don't care. */ });\n\t\t\trequest.write(JSON.stringify(options));\n\t\t\trequest.end();\n\t\t} catch (error) {}\n\t}\n\n\tpublic flush(options: { callback: (v: string) => void }): void {\n\t\tif (options.callback) {\n\t\t\toptions.callback('');\n\t\t}\n\t}\n}\n","import { logger as baseLogger } from '@coder/logger';\nexport const logger = baseLogger.named('vscode');\n","import * as fs from 'fs';\nimport * as path from 'path';\nimport * as util from 'util';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport * as lp from 'vs/base/node/languagePacks';\nimport product from 'vs/platform/product/common/product';\nimport { Translations } from 'vs/workbench/services/extensions/common/extensionPoints';\n\nconst configurations = new Map<string, Promise<lp.NLSConfiguration>>();\nconst metadataPath = path.join(getPathFromAmdModule(require, ''), 'nls.metadata.json');\n\nexport const isInternalConfiguration = (config: lp.NLSConfiguration): config is lp.InternalNLSConfiguration => {\n\treturn config && !!(<lp.InternalNLSConfiguration>config)._languagePackId;\n};\n\nconst DefaultConfiguration = {\n\tlocale: 'en',\n\tavailableLanguages: {},\n};\n\nexport const getNlsConfiguration = async (locale: string, userDataPath: string): Promise<lp.NLSConfiguration> => {\n\tconst id = `${locale}: ${userDataPath}`;\n\tif (!configurations.has(id)) {\n\t\tconfigurations.set(id, new Promise(async (resolve) =>  {\n\t\t\tconst config = product.commit && await util.promisify(fs.exists)(metadataPath)\n\t\t\t\t? await lp.getNLSConfiguration(product.commit, userDataPath, metadataPath, locale)\n\t\t\t\t: DefaultConfiguration;\n\t\t\tif (isInternalConfiguration(config)) {\n\t\t\t\tconfig._languagePackSupport = true;\n\t\t\t}\n\t\t\t// If the configuration has no results keep trying since code-server\n\t\t\t// doesn't restart when a language is installed so this result would\n\t\t\t// persist (the plugin might not be installed yet or something).\n\t\t\tif (config.locale !== 'en' && config.locale !== 'en-us' && Object.keys(config.availableLanguages).length === 0) {\n\t\t\t\tconfigurations.delete(id);\n\t\t\t}\n\t\t\tresolve(config);\n\t\t}));\n\t}\n\treturn configurations.get(id)!;\n};\n\nexport const getTranslations = async (locale: string, userDataPath: string): Promise<Translations> => {\n\tconst config = await getNlsConfiguration(locale, userDataPath);\n\tif (isInternalConfiguration(config)) {\n\t\ttry {\n\t\t\treturn JSON.parse(await util.promisify(fs.readFile)(config._translationsConfigFile, 'utf8'));\n\t\t} catch (error) { /* Nothing yet. */}\n\t}\n\treturn {};\n};\n\nexport const getLocaleFromConfig = async (userDataPath: string): Promise<string> => {\n\tconst files = ['locale.json', 'argv.json'];\n\tfor (let i = 0; i < files.length; ++i) {\n\t\ttry {\n\t\t\tconst localeConfigUri = path.join(userDataPath, 'User', files[i]);\n\t\t\tconst content = stripComments(await util.promisify(fs.readFile)(localeConfigUri, 'utf8'));\n\t\t\treturn JSON.parse(content).locale;\n\t\t} catch (error) { /* Ignore. */ }\n\t}\n\treturn 'en';\n};\n\n// Taken from src/main.js in the main VS Code source.\nconst stripComments = (content: string): string => {\n\tconst regexp = /('(?:[^\\\\']*(?:\\\\.)?)*')|('(?:[^\\\\']*(?:\\\\.)?)*')|(\\/\\*(?:\\r?\\n|.)*?\\*\\/)|(\\/{2,}.*?(?:(?:\\r?\\n)|$))/g;\n\n\treturn content.replace(regexp, (match, _m1, _m2, m3, m4) => {\n\t\t// Only one of m1, m2, m3, m4 matches\n\t\tif (m3) {\n\t\t\t// A block comment. Replace with nothing\n\t\t\treturn '';\n\t\t} else if (m4) {\n\t\t\t// A line comment. If it ends in \\r?\\n then keep it.\n\t\t\tconst length_1 = m4.length;\n\t\t\tif (length_1 > 2 && m4[length_1 - 1] === '\\n') {\n\t\t\t\treturn m4[length_1 - 2] === '\\r' ? '\\r\\n' : '\\n';\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t} else {\n\t\t\t// We match a string\n\t\t\treturn match;\n\t\t}\n\t});\n};\n","import * as cp from 'child_process';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Emitter } from 'vs/base/common/event';\nimport { ISocket } from 'vs/base/parts/ipc/common/ipc.net';\nimport { NodeSocket } from 'vs/base/parts/ipc/node/ipc.net';\nimport { INativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { getNlsConfiguration } from 'vs/server/node/nls';\nimport { Protocol } from 'vs/server/node/protocol';\nimport { IExtHostReadyMessage } from 'vs/workbench/services/extensions/common/extensionHostProtocol';\n\nexport abstract class Connection {\n\tprivate readonly _onClose = new Emitter<void>();\n\tpublic readonly onClose = this._onClose.event;\n\tprivate disposed = false;\n\tprivate _offline: number | undefined;\n\n\tpublic constructor(protected protocol: Protocol, public readonly token: string) {}\n\n\tpublic get offline(): number | undefined {\n\t\treturn this._offline;\n\t}\n\n\tpublic reconnect(socket: ISocket, buffer: VSBuffer): void {\n\t\tthis._offline = undefined;\n\t\tthis.doReconnect(socket, buffer);\n\t}\n\n\tpublic dispose(): void {\n\t\tif (!this.disposed) {\n\t\t\tthis.disposed = true;\n\t\t\tthis.doDispose();\n\t\t\tthis._onClose.fire();\n\t\t}\n\t}\n\n\tprotected setOffline(): void {\n\t\tif (!this._offline) {\n\t\t\tthis._offline = Date.now();\n\t\t}\n\t}\n\n\t/**\n\t * Set up the connection on a new socket.\n\t */\n\tprotected abstract doReconnect(socket: ISocket, buffer: VSBuffer): void;\n\tprotected abstract doDispose(): void;\n}\n\n/**\n * Used for all the IPC channels.\n */\nexport class ManagementConnection extends Connection {\n\tpublic constructor(protected protocol: Protocol, token: string) {\n\t\tsuper(protocol, token);\n\t\tprotocol.onClose(() => this.dispose()); // Explicit close.\n\t\tprotocol.onSocketClose(() => this.setOffline()); // Might reconnect.\n\t}\n\n\tprotected doDispose(): void {\n\t\tthis.protocol.sendDisconnect();\n\t\tthis.protocol.dispose();\n\t\tthis.protocol.getUnderlyingSocket().destroy();\n\t}\n\n\tprotected doReconnect(socket: ISocket, buffer: VSBuffer): void {\n\t\tthis.protocol.beginAcceptReconnection(socket, buffer);\n\t\tthis.protocol.endAcceptReconnection();\n\t}\n}\n\nexport class ExtensionHostConnection extends Connection {\n\tprivate process?: cp.ChildProcess;\n\n\tpublic constructor(\n\t\tlocale:string, protocol: Protocol, buffer: VSBuffer, token: string,\n\t\tprivate readonly log: ILogService,\n\t\tprivate readonly environment: INativeEnvironmentService,\n\t) {\n\t\tsuper(protocol, token);\n\t\tthis.protocol.dispose();\n\t\tthis.spawn(locale, buffer).then((p) => this.process = p);\n\t\tthis.protocol.getUnderlyingSocket().pause();\n\t}\n\n\tprotected doDispose(): void {\n\t\tif (this.process) {\n\t\t\tthis.process.kill();\n\t\t}\n\t\tthis.protocol.getUnderlyingSocket().destroy();\n\t}\n\n\tprotected doReconnect(socket: ISocket, buffer: VSBuffer): void {\n\t\t// This is just to set the new socket.\n\t\tthis.protocol.beginAcceptReconnection(socket, null);\n\t\tthis.protocol.dispose();\n\t\tthis.sendInitMessage(buffer);\n\t}\n\n\tprivate sendInitMessage(buffer: VSBuffer): void {\n\t\tconst socket = this.protocol.getUnderlyingSocket();\n\t\tsocket.pause();\n\t\tthis.process!.send({ // Process must be set at this point.\n\t\t\ttype: 'VSCODE_EXTHOST_IPC_SOCKET',\n\t\t\tinitialDataChunk: (buffer.buffer as Buffer).toString('base64'),\n\t\t\tskipWebSocketFrames: this.protocol.getSocket() instanceof NodeSocket,\n\t\t}, socket);\n\t}\n\n\tprivate async spawn(locale: string, buffer: VSBuffer): Promise<cp.ChildProcess> {\n\t\tconst config = await getNlsConfiguration(locale, this.environment.userDataPath);\n\t\tconst proc = cp.fork(\n\t\t\tgetPathFromAmdModule(require, 'bootstrap-fork'),\n\t\t\t[ '--type=extensionHost' ],\n\t\t\t{\n\t\t\t\tenv: {\n\t\t\t\t\t...process.env,\n\t\t\t\t\tAMD_ENTRYPOINT: 'vs/workbench/services/extensions/node/extensionHostProcess',\n\t\t\t\t\tPIPE_LOGGING: 'true',\n\t\t\t\t\tVERBOSE_LOGGING: 'true',\n\t\t\t\t\tVSCODE_EXTHOST_WILL_SEND_SOCKET: 'true',\n\t\t\t\t\tVSCODE_HANDLES_UNCAUGHT_ERRORS: 'true',\n\t\t\t\t\tVSCODE_LOG_STACK: 'false',\n\t\t\t\t\tVSCODE_LOG_LEVEL: process.env.LOG_LEVEL,\n\t\t\t\t\tVSCODE_NLS_CONFIG: JSON.stringify(config),\n\t\t\t\t},\n\t\t\t\tsilent: true,\n\t\t\t},\n\t\t);\n\n\t\tproc.on('error', () => this.dispose());\n\t\tproc.on('exit', () => this.dispose());\n\t\tif (proc.stdout && proc.stderr) {\n\t\t\tproc.stdout.setEncoding('utf8').on('data', (d) => this.log.info('Extension host stdout', d));\n\t\t\tproc.stderr.setEncoding('utf8').on('data', (d) => this.log.error('Extension host stderr', d));\n\t\t}\n\t\tproc.on('message', (event) => {\n\t\t\tif (event && event.type === '__$console') {\n\t\t\t\tconst severity = (<any>this.log)[event.severity] ? event.severity : 'info';\n\t\t\t\t(<any>this.log)[severity]('Extension host', event.arguments);\n\t\t\t}\n\t\t\tif (event && event.type === 'VSCODE_EXTHOST_DISCONNECTED') {\n\t\t\t\tthis.setOffline();\n\t\t\t}\n\t\t});\n\n\t\tconst listen = (message: IExtHostReadyMessage) => {\n\t\t\tif (message.type === 'VSCODE_EXTHOST_IPC_READY') {\n\t\t\t\tproc.removeListener('message', listen);\n\t\t\t\tthis.sendInitMessage(buffer);\n\t\t\t}\n\t\t};\n\n\t\treturn proc.on('message', listen);\n\t}\n}\n","import * as net from 'net';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { PersistentProtocol } from 'vs/base/parts/ipc/common/ipc.net';\nimport { NodeSocket, WebSocketNodeSocket } from 'vs/base/parts/ipc/node/ipc.net';\nimport { AuthRequest, ConnectionTypeRequest, HandshakeMessage } from 'vs/platform/remote/common/remoteAgentConnection';\n\nexport interface SocketOptions {\n\treadonly reconnectionToken: string;\n\treadonly reconnection: boolean;\n\treadonly skipWebSocketFrames: boolean;\n}\n\nexport class Protocol extends PersistentProtocol {\n\tpublic constructor(socket: net.Socket, public readonly options: SocketOptions) {\n\t\tsuper(\n\t\t\toptions.skipWebSocketFrames\n\t\t\t\t? new NodeSocket(socket)\n\t\t\t\t: new WebSocketNodeSocket(new NodeSocket(socket)),\n\t\t);\n\t}\n\n\tpublic getUnderlyingSocket(): net.Socket {\n\t\tconst socket = this.getSocket();\n\t\treturn socket instanceof NodeSocket\n\t\t\t? socket.socket\n\t\t\t: (socket as WebSocketNodeSocket).socket.socket;\n\t}\n\n\t/**\n\t * Perform a handshake to get a connection request.\n\t */\n\tpublic handshake(): Promise<ConnectionTypeRequest> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst handler = this.onControlMessage((rawMessage) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst message = JSON.parse(rawMessage.toString());\n\t\t\t\t\tswitch (message.type) {\n\t\t\t\t\t\tcase 'auth': return this.authenticate(message);\n\t\t\t\t\t\tcase 'connectionType':\n\t\t\t\t\t\t\thandler.dispose();\n\t\t\t\t\t\t\treturn resolve(message);\n\t\t\t\t\t\tdefault: throw new Error('Unrecognized message type');\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\thandler.dispose();\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * TODO: This ignores the authentication process entirely for now.\n\t */\n\tprivate authenticate(_message: AuthRequest): void {\n\t\tthis.sendMessage({ type: 'sign', data: '' });\n\t}\n\n\t/**\n\t * TODO: implement.\n\t */\n\tpublic tunnel(): void {\n\t\tthrow new Error('Tunnel is not implemented yet');\n\t}\n\n\t/**\n\t * Send a handshake message. In the case of the extension host, it just sends\n\t * back a debug port.\n\t */\n\tpublic sendMessage(message: HandshakeMessage | { debugPort?: number } ): void {\n\t\tthis.sendControl(VSBuffer.fromString(JSON.stringify(message)));\n\t}\n}\n","import { URITransformer } from 'vs/base/common/uriIpc';\n\nexport const getUriTransformer = (remoteAuthority: string): URITransformer => {\n\treturn new URITransformer(remoteAuthority);\n};\n\n/**\n * Encode a path for opening via the folder or workspace query parameter. This\n * preserves slashes so it can be edited by hand more easily.\n */\nexport const encodePath = (path: string): string => {\n\treturn path.split(\"/\").map((p) => encodeURIComponent(p)).join(\"/\");\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Severity } from 'vs/platform/notification/common/notification';\n\nexport interface Translations {\n\t[id: string]: string;\n}\n\nexport namespace Translations {\n\texport function equals(a: Translations, b: Translations): boolean {\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t}\n\t\tlet aKeys = Object.keys(a);\n\t\tlet bKeys: Set<string> = new Set<string>();\n\t\tfor (let key of Object.keys(b)) {\n\t\t\tbKeys.add(key);\n\t\t}\n\t\tif (aKeys.length !== bKeys.size) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (let key of aKeys) {\n\t\t\tif (a[key] !== b[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbKeys.delete(key);\n\t\t}\n\t\treturn bKeys.size === 0;\n\t}\n}\n\nexport interface ILog {\n\terror(source: string, message: string): void;\n\twarn(source: string, message: string): void;\n\tinfo(source: string, message: string): void;\n}\n\nexport class Logger implements ILog {\n\n\tprivate readonly _messageHandler: (severity: Severity, source: string, message: string) => void;\n\n\tconstructor(\n\t\tmessageHandler: (severity: Severity, source: string, message: string) => void\n\t) {\n\t\tthis._messageHandler = messageHandler;\n\t}\n\n\tpublic error(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Error, source, message);\n\t}\n\n\tpublic warn(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Warning, source, message);\n\t}\n\n\tpublic info(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Info, source, message);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport * as semver from 'semver-umd';\nimport * as json from 'vs/base/common/json';\nimport * as arrays from 'vs/base/common/arrays';\nimport { getParseErrorMessage } from 'vs/base/common/jsonErrorMessages';\nimport * as types from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport * as pfs from 'vs/base/node/pfs';\nimport { getGalleryExtensionId, groupByExtension, ExtensionIdentifierWithVersion } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { isValidExtensionVersion } from 'vs/platform/extensions/common/extensionValidator';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { Translations, ILog } from 'vs/workbench/services/extensions/common/extensionPoints';\n\nconst MANIFEST_FILE = 'package.json';\n\nexport interface NlsConfiguration {\n\treadonly devMode: boolean;\n\treadonly locale: string | undefined;\n\treadonly pseudo: boolean;\n\treadonly translations: Translations;\n}\n\nabstract class ExtensionManifestHandler {\n\n\tprotected readonly _ourVersion: string;\n\tprotected readonly _log: ILog;\n\tprotected readonly _absoluteFolderPath: string;\n\tprotected readonly _isBuiltin: boolean;\n\tprotected readonly _isUnderDevelopment: boolean;\n\tprotected readonly _absoluteManifestPath: string;\n\n\tconstructor(ourVersion: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean) {\n\t\tthis._ourVersion = ourVersion;\n\t\tthis._log = log;\n\t\tthis._absoluteFolderPath = absoluteFolderPath;\n\t\tthis._isBuiltin = isBuiltin;\n\t\tthis._isUnderDevelopment = isUnderDevelopment;\n\t\tthis._absoluteManifestPath = path.join(absoluteFolderPath, MANIFEST_FILE);\n\t}\n}\n\nclass ExtensionManifestParser extends ExtensionManifestHandler {\n\n\tpublic parse(): Promise<IExtensionDescription> {\n\t\treturn pfs.readFile(this._absoluteManifestPath).then((manifestContents) => {\n\t\t\tconst errors: json.ParseError[] = [];\n\t\t\tconst manifest = json.parse(manifestContents.toString(), errors);\n\t\t\tif (errors.length === 0 && json.getNodeType(manifest) === 'object') {\n\t\t\t\tif (manifest.__metadata) {\n\t\t\t\t\tmanifest.uuid = manifest.__metadata.id;\n\t\t\t\t}\n\t\t\t\tdelete manifest.__metadata;\n\t\t\t\treturn manifest;\n\t\t\t} else {\n\t\t\t\terrors.forEach(e => {\n\t\t\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonParseFail', \"Failed to parse {0}: [{1}, {2}] {3}.\", this._absoluteManifestPath, e.offset, e.length, getParseErrorMessage(e.error)));\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn null;\n\t\t}, (err) => {\n\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('fileReadFail', \"Cannot read file {0}: {1}.\", this._absoluteManifestPath, err.message));\n\t\t\treturn null;\n\t\t});\n\t}\n}\n\nclass ExtensionManifestNLSReplacer extends ExtensionManifestHandler {\n\n\tprivate readonly _nlsConfig: NlsConfiguration;\n\n\tconstructor(ourVersion: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean, nlsConfig: NlsConfiguration) {\n\t\tsuper(ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\tthis._nlsConfig = nlsConfig;\n\t}\n\n\tpublic replaceNLS(extensionDescription: IExtensionDescription): Promise<IExtensionDescription> {\n\t\tinterface MessageBag {\n\t\t\t[key: string]: string;\n\t\t}\n\n\t\tinterface TranslationBundle {\n\t\t\tcontents: {\n\t\t\t\tpackage: MessageBag;\n\t\t\t};\n\t\t}\n\n\t\tinterface LocalizedMessages {\n\t\t\tvalues: MessageBag | undefined;\n\t\t\tdefault: string | null;\n\t\t}\n\n\t\tconst reportErrors = (localized: string | null, errors: json.ParseError[]): void => {\n\t\t\terrors.forEach((error) => {\n\t\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonsParseReportErrors', \"Failed to parse {0}: {1}.\", localized, getParseErrorMessage(error.error)));\n\t\t\t});\n\t\t};\n\t\tconst reportInvalidFormat = (localized: string | null): void => {\n\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonInvalidFormat', \"Invalid format {0}: JSON object expected.\", localized));\n\t\t};\n\n\t\tlet extension = path.extname(this._absoluteManifestPath);\n\t\tlet basename = this._absoluteManifestPath.substr(0, this._absoluteManifestPath.length - extension.length);\n\n\t\tconst translationId = `${extensionDescription.publisher}.${extensionDescription.name}`;\n\t\tlet translationPath = this._nlsConfig.translations[translationId];\n\t\tlet localizedMessages: Promise<LocalizedMessages | undefined>;\n\t\tif (translationPath) {\n\t\t\tlocalizedMessages = pfs.readFile(translationPath, 'utf8').then<LocalizedMessages, LocalizedMessages>((content) => {\n\t\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t\tlet translationBundle: TranslationBundle = json.parse(content, errors);\n\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\treportErrors(translationPath, errors);\n\t\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t\t} else if (json.getNodeType(translationBundle) !== 'object') {\n\t\t\t\t\treportInvalidFormat(translationPath);\n\t\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t\t} else {\n\t\t\t\t\tlet values = translationBundle.contents ? translationBundle.contents.package : undefined;\n\t\t\t\t\treturn { values: values, default: `${basename}.nls.json` };\n\t\t\t\t}\n\t\t\t}, (error) => {\n\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t});\n\t\t} else {\n\t\t\tlocalizedMessages = pfs.fileExists(basename + '.nls' + extension).then<LocalizedMessages | undefined, LocalizedMessages | undefined>(exists => {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn ExtensionManifestNLSReplacer.findMessageBundles(this._nlsConfig, basename).then((messageBundle) => {\n\t\t\t\t\tif (!messageBundle.localized) {\n\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t}\n\t\t\t\t\treturn pfs.readFile(messageBundle.localized, 'utf8').then(messageBundleContent => {\n\t\t\t\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t\t\t\tlet messages: MessageBag = json.parse(messageBundleContent, errors);\n\t\t\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\t\t\treportErrors(messageBundle.localized, errors);\n\t\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t\t} else if (json.getNodeType(messages) !== 'object') {\n\t\t\t\t\t\t\treportInvalidFormat(messageBundle.localized);\n\t\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn { values: messages, default: messageBundle.original };\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t});\n\t\t\t\t}, (err) => {\n\t\t\t\t\treturn undefined;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn localizedMessages.then((localizedMessages) => {\n\t\t\tif (localizedMessages === undefined) {\n\t\t\t\treturn extensionDescription;\n\t\t\t}\n\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t// resolveOriginalMessageBundle returns null if localizedMessages.default === undefined;\n\t\t\treturn ExtensionManifestNLSReplacer.resolveOriginalMessageBundle(localizedMessages.default, errors).then((defaults) => {\n\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\treportErrors(localizedMessages.default, errors);\n\t\t\t\t\treturn extensionDescription;\n\t\t\t\t} else if (json.getNodeType(localizedMessages) !== 'object') {\n\t\t\t\t\treportInvalidFormat(localizedMessages.default);\n\t\t\t\t\treturn extensionDescription;\n\t\t\t\t}\n\t\t\t\tconst localized = localizedMessages.values || Object.create(null);\n\t\t\t\tExtensionManifestNLSReplacer._replaceNLStrings(this._nlsConfig, extensionDescription, localized, defaults, this._log, this._absoluteFolderPath);\n\t\t\t\treturn extensionDescription;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn extensionDescription;\n\t\t});\n\t}\n\n\t/**\n\t * Parses original message bundle, returns null if the original message bundle is null.\n\t */\n\tprivate static resolveOriginalMessageBundle(originalMessageBundle: string | null, errors: json.ParseError[]) {\n\t\treturn new Promise<{ [key: string]: string; } | null>((c, e) => {\n\t\t\tif (originalMessageBundle) {\n\t\t\t\tpfs.readFile(originalMessageBundle).then(originalBundleContent => {\n\t\t\t\t\tc(json.parse(originalBundleContent.toString(), errors));\n\t\t\t\t}, (err) => {\n\t\t\t\t\tc(null);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tc(null);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Finds localized message bundle and the original (unlocalized) one.\n\t * If the localized file is not present, returns null for the original and marks original as localized.\n\t */\n\tprivate static findMessageBundles(nlsConfig: NlsConfiguration, basename: string): Promise<{ localized: string; original: string | null; }> {\n\t\treturn new Promise<{ localized: string; original: string | null; }>((c, e) => {\n\t\t\tfunction loop(basename: string, locale: string): void {\n\t\t\t\tlet toCheck = `${basename}.nls.${locale}.json`;\n\t\t\t\tpfs.fileExists(toCheck).then(exists => {\n\t\t\t\t\tif (exists) {\n\t\t\t\t\t\tc({ localized: toCheck, original: `${basename}.nls.json` });\n\t\t\t\t\t}\n\t\t\t\t\tlet index = locale.lastIndexOf('-');\n\t\t\t\t\tif (index === -1) {\n\t\t\t\t\t\tc({ localized: `${basename}.nls.json`, original: null });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlocale = locale.substring(0, index);\n\t\t\t\t\t\tloop(basename, locale);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (nlsConfig.devMode || nlsConfig.pseudo || !nlsConfig.locale) {\n\t\t\t\treturn c({ localized: basename + '.nls.json', original: null });\n\t\t\t}\n\t\t\tloop(basename, nlsConfig.locale);\n\t\t});\n\t}\n\n\t/**\n\t * This routine makes the following assumptions:\n\t * The root element is an object literal\n\t */\n\tprivate static _replaceNLStrings<T extends object>(nlsConfig: NlsConfiguration, literal: T, messages: { [key: string]: string; }, originalMessages: { [key: string]: string } | null, log: ILog, messageScope: string): void {\n\t\tfunction processEntry(obj: any, key: string | number, command?: boolean) {\n\t\t\tlet value = obj[key];\n\t\t\tif (types.isString(value)) {\n\t\t\t\tlet str = <string>value;\n\t\t\t\tlet length = str.length;\n\t\t\t\tif (length > 1 && str[0] === '%' && str[length - 1] === '%') {\n\t\t\t\t\tlet messageKey = str.substr(1, length - 2);\n\t\t\t\t\tlet message = messages[messageKey];\n\t\t\t\t\t// If the messages come from a language pack they might miss some keys\n\t\t\t\t\t// Fill them from the original messages.\n\t\t\t\t\tif (message === undefined && originalMessages) {\n\t\t\t\t\t\tmessage = originalMessages[messageKey];\n\t\t\t\t\t}\n\t\t\t\t\tif (message) {\n\t\t\t\t\t\tif (nlsConfig.pseudo) {\n\t\t\t\t\t\t\t// FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n\t\t\t\t\t\t\tmessage = '\\uFF3B' + message.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tobj[key] = command && (key === 'title' || key === 'category') && originalMessages ? { value: message, original: originalMessages[messageKey] } : message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlog.warn(messageScope, nls.localize('missingNLSKey', \"Couldn't find message for key {0}.\", messageKey));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (types.isObject(value)) {\n\t\t\t\tfor (let k in value) {\n\t\t\t\t\tif (value.hasOwnProperty(k)) {\n\t\t\t\t\t\tk === 'commands' ? processEntry(value, k, true) : processEntry(value, k, command);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (types.isArray(value)) {\n\t\t\t\tfor (let i = 0; i < value.length; i++) {\n\t\t\t\t\tprocessEntry(value, i, command);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let key in literal) {\n\t\t\tif (literal.hasOwnProperty(key)) {\n\t\t\t\tprocessEntry(literal, key);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Relax the readonly properties here, it is the one place where we check and normalize values\nexport interface IRelaxedExtensionDescription {\n\tid: string;\n\tuuid?: string;\n\tidentifier: ExtensionIdentifier;\n\tname: string;\n\tversion: string;\n\tpublisher: string;\n\tisBuiltin: boolean;\n\tisUnderDevelopment: boolean;\n\textensionLocation: URI;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n\tenableProposedApi?: boolean;\n}\n\nclass ExtensionManifestValidator extends ExtensionManifestHandler {\n\tvalidate(_extensionDescription: IExtensionDescription): IExtensionDescription | null {\n\t\tlet extensionDescription = <IRelaxedExtensionDescription>_extensionDescription;\n\t\textensionDescription.isBuiltin = this._isBuiltin;\n\t\textensionDescription.isUnderDevelopment = this._isUnderDevelopment;\n\n\t\tlet notices: string[] = [];\n\t\tif (!ExtensionManifestValidator.isValidExtensionDescription(this._ourVersion, this._absoluteFolderPath, extensionDescription, notices)) {\n\t\t\tnotices.forEach((error) => {\n\t\t\t\tthis._log.error(this._absoluteFolderPath, error);\n\t\t\t});\n\t\t\treturn null;\n\t\t}\n\n\t\t// in this case the notices are warnings\n\t\tnotices.forEach((error) => {\n\t\t\tthis._log.warn(this._absoluteFolderPath, error);\n\t\t});\n\n\t\t// allow publisher to be undefined to make the initial extension authoring experience smoother\n\t\tif (!extensionDescription.publisher) {\n\t\t\textensionDescription.publisher = 'undefined_publisher';\n\t\t}\n\n\t\t// id := `publisher.name`\n\t\textensionDescription.id = `${extensionDescription.publisher}.${extensionDescription.name}`;\n\t\textensionDescription.identifier = new ExtensionIdentifier(extensionDescription.id);\n\n\t\textensionDescription.extensionLocation = URI.file(this._absoluteFolderPath);\n\n\t\treturn extensionDescription;\n\t}\n\n\tprivate static isValidExtensionDescription(version: string, extensionFolderPath: string, extensionDescription: IExtensionDescription, notices: string[]): boolean {\n\n\t\tif (!ExtensionManifestValidator.baseIsValidExtensionDescription(extensionFolderPath, extensionDescription, notices)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!semver.valid(extensionDescription.version)) {\n\t\t\tnotices.push(nls.localize('notSemver', \"Extension version is not semver compatible.\"));\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isValidExtensionVersion(version, extensionDescription, notices);\n\t}\n\n\tprivate static baseIsValidExtensionDescription(extensionFolderPath: string, extensionDescription: IExtensionDescription, notices: string[]): boolean {\n\t\tif (!extensionDescription) {\n\t\t\tnotices.push(nls.localize('extensionDescription.empty', \"Got empty extension description\"));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.publisher !== 'undefined' && typeof extensionDescription.publisher !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.publisher', \"property publisher must be of type `string`.\"));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.name !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.name', \"property `{0}` is mandatory and must be of type `string`\", 'name'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.version !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.version', \"property `{0}` is mandatory and must be of type `string`\", 'version'));\n\t\t\treturn false;\n\t\t}\n\t\tif (!extensionDescription.engines) {\n\t\t\tnotices.push(nls.localize('extensionDescription.engines', \"property `{0}` is mandatory and must be of type `object`\", 'engines'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.engines.vscode !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.engines.vscode', \"property `{0}` is mandatory and must be of type `string`\", 'engines.vscode'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.extensionDependencies !== 'undefined') {\n\t\t\tif (!ExtensionManifestValidator._isStringArray(extensionDescription.extensionDependencies)) {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.extensionDependencies', \"property `{0}` can be omitted or must be of type `string[]`\", 'extensionDependencies'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionDescription.activationEvents !== 'undefined') {\n\t\t\tif (!ExtensionManifestValidator._isStringArray(extensionDescription.activationEvents)) {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.activationEvents1', \"property `{0}` can be omitted or must be of type `string[]`\", 'activationEvents'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (typeof extensionDescription.main === 'undefined' && typeof extensionDescription.browser === 'undefined') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.activationEvents2', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'main'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionDescription.main !== 'undefined') {\n\t\t\tif (typeof extensionDescription.main !== 'string') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.main1', \"property `{0}` can be omitted or must be of type `string`\", 'main'));\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tconst normalizedAbsolutePath = path.join(extensionFolderPath, extensionDescription.main);\n\t\t\t\tif (!normalizedAbsolutePath.startsWith(extensionFolderPath)) {\n\t\t\t\t\tnotices.push(nls.localize('extensionDescription.main2', \"Expected `main` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.\", normalizedAbsolutePath, extensionFolderPath));\n\t\t\t\t\t// not a failure case\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof extensionDescription.activationEvents === 'undefined') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.main3', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'main'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionDescription.browser !== 'undefined') {\n\t\t\tif (typeof extensionDescription.browser !== 'string') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.browser1', \"property `{0}` can be omitted or must be of type `string`\", 'browser'));\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tconst normalizedAbsolutePath = path.join(extensionFolderPath, extensionDescription.browser);\n\t\t\t\tif (!normalizedAbsolutePath.startsWith(extensionFolderPath)) {\n\t\t\t\t\tnotices.push(nls.localize('extensionDescription.browser2', \"Expected `browser` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.\", normalizedAbsolutePath, extensionFolderPath));\n\t\t\t\t\t// not a failure case\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof extensionDescription.activationEvents === 'undefined') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.browser3', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'browser'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _isStringArray(arr: string[]): boolean {\n\t\tif (!Array.isArray(arr)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\tif (typeof arr[i] !== 'string') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class ExtensionScannerInput {\n\n\tpublic mtime: number | undefined;\n\n\tconstructor(\n\t\tpublic readonly ourVersion: string,\n\t\tpublic readonly commit: string | undefined,\n\t\tpublic readonly locale: string | undefined,\n\t\tpublic readonly devMode: boolean,\n\t\tpublic readonly absoluteFolderPath: string,\n\t\tpublic readonly isBuiltin: boolean,\n\t\tpublic readonly isUnderDevelopment: boolean,\n\t\tpublic readonly tanslations: Translations\n\t) {\n\t\t// Keep empty!! (JSON.parse)\n\t}\n\n\tpublic static createNLSConfig(input: ExtensionScannerInput): NlsConfiguration {\n\t\treturn {\n\t\t\tdevMode: input.devMode,\n\t\t\tlocale: input.locale,\n\t\t\tpseudo: input.locale === 'pseudo',\n\t\t\ttranslations: input.tanslations\n\t\t};\n\t}\n\n\tpublic static equals(a: ExtensionScannerInput, b: ExtensionScannerInput): boolean {\n\t\treturn (\n\t\t\ta.ourVersion === b.ourVersion\n\t\t\t&& a.commit === b.commit\n\t\t\t&& a.locale === b.locale\n\t\t\t&& a.devMode === b.devMode\n\t\t\t&& a.absoluteFolderPath === b.absoluteFolderPath\n\t\t\t&& a.isBuiltin === b.isBuiltin\n\t\t\t&& a.isUnderDevelopment === b.isUnderDevelopment\n\t\t\t&& a.mtime === b.mtime\n\t\t\t&& Translations.equals(a.tanslations, b.tanslations)\n\t\t);\n\t}\n}\n\nexport interface IExtensionReference {\n\tname: string;\n\tpath: string;\n}\n\nexport interface IExtensionResolver {\n\tresolveExtensions(): Promise<IExtensionReference[]>;\n}\n\nclass DefaultExtensionResolver implements IExtensionResolver {\n\n\tconstructor(private root: string) { }\n\n\tresolveExtensions(): Promise<IExtensionReference[]> {\n\t\treturn pfs.readDirsInDir(this.root)\n\t\t\t.then(folders => folders.map(name => ({ name, path: path.join(this.root, name) })));\n\t}\n}\n\nexport class ExtensionScanner {\n\n\t/**\n\t * Read the extension defined in `absoluteFolderPath`\n\t */\n\tprivate static scanExtension(version: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean, nlsConfig: NlsConfiguration): Promise<IExtensionDescription | null> {\n\t\tabsoluteFolderPath = path.normalize(absoluteFolderPath);\n\n\t\tlet parser = new ExtensionManifestParser(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\treturn parser.parse().then<IExtensionDescription | null>((extensionDescription) => {\n\t\t\tif (extensionDescription === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet nlsReplacer = new ExtensionManifestNLSReplacer(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig);\n\t\t\treturn nlsReplacer.replaceNLS(extensionDescription);\n\t\t}).then((extensionDescription) => {\n\t\t\tif (extensionDescription === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet validator = new ExtensionManifestValidator(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\t\treturn validator.validate(extensionDescription);\n\t\t});\n\t}\n\n\t/**\n\t * Scan a list of extensions defined in `absoluteFolderPath`\n\t */\n\tpublic static async scanExtensions(input: ExtensionScannerInput, log: ILog, resolver: IExtensionResolver | null = null): Promise<IExtensionDescription[]> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\n\t\tif (!resolver) {\n\t\t\tresolver = new DefaultExtensionResolver(absoluteFolderPath);\n\t\t}\n\n\t\ttry {\n\t\t\tlet obsolete: { [folderName: string]: boolean; } = {};\n\t\t\tif (!isBuiltin) {\n\t\t\t\ttry {\n\t\t\t\t\tconst obsoleteFileContents = await pfs.readFile(path.join(absoluteFolderPath, '.obsolete'), 'utf8');\n\t\t\t\t\tobsolete = JSON.parse(obsoleteFileContents);\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Don't care\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet refs = await resolver.resolveExtensions();\n\n\t\t\t// Ensure the same extension order\n\t\t\trefs.sort((a, b) => a.name < b.name ? -1 : 1);\n\n\t\t\tif (!isBuiltin) {\n\t\t\t\trefs = refs.filter(ref => ref.name.indexOf('.') !== 0); // Do not consider user extension folder starting with `.`\n\t\t\t}\n\n\t\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\t\tlet _extensionDescriptions = await Promise.all(refs.map(r => this.scanExtension(input.ourVersion, log, r.path, isBuiltin, isUnderDevelopment, nlsConfig)));\n\t\t\tlet extensionDescriptions = arrays.coalesce(_extensionDescriptions);\n\t\t\textensionDescriptions = extensionDescriptions.filter(item => item !== null && !obsolete[new ExtensionIdentifierWithVersion({ id: getGalleryExtensionId(item.publisher, item.name) }, item.version).key()]);\n\n\t\t\tif (!isBuiltin) {\n\t\t\t\t// Filter out outdated extensions\n\t\t\t\tconst byExtension: IExtensionDescription[][] = groupByExtension(extensionDescriptions, e => ({ id: e.identifier.value, uuid: e.uuid }));\n\t\t\t\textensionDescriptions = byExtension.map(p => p.sort((a, b) => semver.rcompare(a.version, b.version))[0]);\n\t\t\t}\n\n\t\t\textensionDescriptions.sort((a, b) => {\n\t\t\t\tif (a.extensionLocation.fsPath < b.extensionLocation.fsPath) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn 1;\n\t\t\t});\n\t\t\treturn extensionDescriptions;\n\t\t} catch (err) {\n\t\t\tlog.error(absoluteFolderPath, err);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Combination of scanExtension and scanExtensions: If an extension manifest is found at root, we load just this extension,\n\t * otherwise we assume the folder contains multiple extensions.\n\t */\n\tpublic static scanOneOrMultipleExtensions(input: ExtensionScannerInput, log: ILog): Promise<IExtensionDescription[]> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\n\t\treturn pfs.fileExists(path.join(absoluteFolderPath, MANIFEST_FILE)).then((exists) => {\n\t\t\tif (exists) {\n\t\t\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\t\t\treturn this.scanExtension(input.ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig).then((extensionDescription) => {\n\t\t\t\t\tif (extensionDescription === null) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t\treturn [extensionDescription];\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn this.scanExtensions(input, log);\n\t\t}, (err) => {\n\t\t\tlog.error(absoluteFolderPath, err);\n\t\t\treturn [];\n\t\t});\n\t}\n\n\tpublic static scanSingleExtension(input: ExtensionScannerInput, log: ILog): Promise<IExtensionDescription | null> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\treturn this.scanExtension(input.ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig);\n\t}\n\n\tpublic static mergeBuiltinExtensions(builtinExtensions: Promise<IExtensionDescription[]>, extraBuiltinExtensions: Promise<IExtensionDescription[]>): Promise<IExtensionDescription[]> {\n\t\treturn Promise.all([builtinExtensions, extraBuiltinExtensions]).then(([builtinExtensions, extraBuiltinExtensions]) => {\n\t\t\tlet resultMap: { [id: string]: IExtensionDescription; } = Object.create(null);\n\t\t\tfor (let i = 0, len = builtinExtensions.length; i < len; i++) {\n\t\t\t\tresultMap[ExtensionIdentifier.toKey(builtinExtensions[i].identifier)] = builtinExtensions[i];\n\t\t\t}\n\t\t\t// Overwrite with extensions found in extra\n\t\t\tfor (let i = 0, len = extraBuiltinExtensions.length; i < len; i++) {\n\t\t\t\tresultMap[ExtensionIdentifier.toKey(extraBuiltinExtensions[i].identifier)] = extraBuiltinExtensions[i];\n\t\t\t}\n\n\t\t\tlet resultArr = Object.keys(resultMap).map((id) => resultMap[id]);\n\t\t\tresultArr.sort((a, b) => {\n\t\t\t\tconst aLastSegment = path.basename(a.extensionLocation.fsPath);\n\t\t\t\tconst bLastSegment = path.basename(b.extensionLocation.fsPath);\n\t\t\t\tif (aLastSegment < bLastSegment) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (aLastSegment > bLastSegment) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t\treturn resultArr;\n\t\t});\n\t}\n}\n","import { Server } from '@coder/node-browser';\nimport * as path from 'path';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { OS } from 'vs/base/common/platform';\nimport { ReadableStreamEventPayload } from 'vs/base/common/stream';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { transformOutgoingURIs } from 'vs/base/common/uriIpc';\nimport { IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { INativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { FileDeleteOptions, FileOpenOptions, FileOverwriteOptions, FileReadStreamOptions, FileType, FileWriteOptions, IStat, IWatchOptions } from 'vs/platform/files/common/files';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport product from 'vs/platform/product/common/product';\nimport { IRemoteAgentEnvironment, RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { ITelemetryData, ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { INodeProxyService } from 'vs/server/common/nodeProxy';\nimport { getTranslations } from 'vs/server/node/nls';\nimport { getUriTransformer } from 'vs/server/node/util';\nimport { IFileChangeDto } from 'vs/workbench/api/common/extHost.protocol';\nimport { ExtensionScanner, ExtensionScannerInput } from 'vs/workbench/services/extensions/node/extensionPoints';\n\n/**\n * Extend the file provider to allow unwatching.\n */\nclass Watcher extends DiskFileSystemProvider {\n\tpublic readonly watches = new Map<number, IDisposable>();\n\n\tpublic dispose(): void {\n\t\tthis.watches.forEach((w) => w.dispose());\n\t\tthis.watches.clear();\n\t\tsuper.dispose();\n\t}\n\n\tpublic _watch(req: number, resource: URI, opts: IWatchOptions): void {\n\t\tthis.watches.set(req, this.watch(resource, opts));\n\t}\n\n\tpublic unwatch(req: number): void {\n\t\tthis.watches.get(req)!.dispose();\n\t\tthis.watches.delete(req);\n\t}\n}\n\nexport class FileProviderChannel implements IServerChannel<RemoteAgentConnectionContext>, IDisposable {\n\tprivate readonly provider: DiskFileSystemProvider;\n\tprivate readonly watchers = new Map<string, Watcher>();\n\n\tpublic constructor(\n\t\tprivate readonly environmentService: INativeEnvironmentService,\n\t\tprivate readonly logService: ILogService,\n\t) {\n\t\tthis.provider = new DiskFileSystemProvider(this.logService);\n\t}\n\n\tpublic listen(context: RemoteAgentConnectionContext, event: string, args?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'filechange': return this.filechange(context, args[0]);\n\t\t\tcase 'readFileStream': return this.readFileStream(args[0], args[1]);\n\t\t}\n\n\t\tthrow new Error(`Invalid listen '${event}'`);\n\t}\n\n\tprivate filechange(context: RemoteAgentConnectionContext, session: string): Event<IFileChangeDto[]> {\n\t\tconst emitter = new Emitter<IFileChangeDto[]>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst provider = new Watcher(this.logService);\n\t\t\t\tthis.watchers.set(session, provider);\n\t\t\t\tconst transformer = getUriTransformer(context.remoteAuthority);\n\t\t\t\tprovider.onDidChangeFile((events) => {\n\t\t\t\t\temitter.fire(events.map((event) => ({\n\t\t\t\t\t\t...event,\n\t\t\t\t\t\tresource: transformer.transformOutgoing(event.resource),\n\t\t\t\t\t})));\n\t\t\t\t});\n\t\t\t\tprovider.onDidErrorOccur((event) => this.logService.error(event));\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.watchers.get(session)!.dispose();\n\t\t\t\tthis.watchers.delete(session);\n\t\t\t},\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate readFileStream(resource: UriComponents, opts: FileReadStreamOptions): Event<ReadableStreamEventPayload<VSBuffer>> {\n\t\tconst cts = new CancellationTokenSource();\n\t\tconst fileStream = this.provider.readFileStream(this.transform(resource), opts, cts.token);\n\t\tconst emitter = new Emitter<ReadableStreamEventPayload<VSBuffer>>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tfileStream.on('data', (data) => emitter.fire(VSBuffer.wrap(data)));\n\t\t\t\tfileStream.on('error', (error) => emitter.fire(error));\n\t\t\t\tfileStream.on('end', () => emitter.fire('end'));\n\t\t\t},\n\t\t\tonLastListenerRemove: () => cts.cancel(),\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tpublic call(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'stat': return this.stat(args[0]);\n\t\t\tcase 'open': return this.open(args[0], args[1]);\n\t\t\tcase 'close': return this.close(args[0]);\n\t\t\tcase 'read': return this.read(args[0], args[1], args[2]);\n\t\t\tcase 'readFile': return this.readFile(args[0]);\n\t\t\tcase 'write': return this.write(args[0], args[1], args[2], args[3], args[4]);\n\t\t\tcase 'writeFile': return this.writeFile(args[0], args[1], args[2]);\n\t\t\tcase 'delete': return this.delete(args[0], args[1]);\n\t\t\tcase 'mkdir': return this.mkdir(args[0]);\n\t\t\tcase 'readdir': return this.readdir(args[0]);\n\t\t\tcase 'rename': return this.rename(args[0], args[1], args[2]);\n\t\t\tcase 'copy': return this.copy(args[0], args[1], args[2]);\n\t\t\tcase 'watch': return this.watch(args[0], args[1], args[2], args[3]);\n\t\t\tcase 'unwatch': return this.unwatch(args[0], args[1]);\n\t\t}\n\n\t\tthrow new Error(`Invalid call '${command}'`);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.watchers.forEach((w) => w.dispose());\n\t\tthis.watchers.clear();\n\t}\n\n\tprivate async stat(resource: UriComponents): Promise<IStat> {\n\t\treturn this.provider.stat(this.transform(resource));\n\t}\n\n\tprivate async open(resource: UriComponents, opts: FileOpenOptions): Promise<number> {\n\t\treturn this.provider.open(this.transform(resource), opts);\n\t}\n\n\tprivate async close(fd: number): Promise<void> {\n\t\treturn this.provider.close(fd);\n\t}\n\n\tprivate async read(fd: number, pos: number, length: number): Promise<[VSBuffer, number]> {\n\t\tconst buffer = VSBuffer.alloc(length);\n\t\tconst bytesRead = await this.provider.read(fd, pos, buffer.buffer, 0, length);\n\t\treturn [buffer, bytesRead];\n\t}\n\n\tprivate async readFile(resource: UriComponents): Promise<VSBuffer> {\n\t\treturn VSBuffer.wrap(await this.provider.readFile(this.transform(resource)));\n\t}\n\n\tprivate write(fd: number, pos: number, buffer: VSBuffer, offset: number, length: number): Promise<number> {\n\t\treturn this.provider.write(fd, pos, buffer.buffer, offset, length);\n\t}\n\n\tprivate writeFile(resource: UriComponents, buffer: VSBuffer, opts: FileWriteOptions): Promise<void> {\n\t\treturn this.provider.writeFile(this.transform(resource), buffer.buffer, opts);\n\t}\n\n\tprivate async delete(resource: UriComponents, opts: FileDeleteOptions): Promise<void> {\n\t\treturn this.provider.delete(this.transform(resource), opts);\n\t}\n\n\tprivate async mkdir(resource: UriComponents): Promise<void> {\n\t\treturn this.provider.mkdir(this.transform(resource));\n\t}\n\n\tprivate async readdir(resource: UriComponents): Promise<[string, FileType][]> {\n\t\treturn this.provider.readdir(this.transform(resource));\n\t}\n\n\tprivate async rename(resource: UriComponents, target: UriComponents, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.provider.rename(this.transform(resource), URI.from(target), opts);\n\t}\n\n\tprivate copy(resource: UriComponents, target: UriComponents, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.provider.copy(this.transform(resource), URI.from(target), opts);\n\t}\n\n\tprivate async watch(session: string, req: number, resource: UriComponents, opts: IWatchOptions): Promise<void> {\n\t\tthis.watchers.get(session)!._watch(req, this.transform(resource), opts);\n\t}\n\n\tprivate async unwatch(session: string, req: number): Promise<void> {\n\t\tthis.watchers.get(session)!.unwatch(req);\n\t}\n\n\tprivate transform(resource: UriComponents): URI {\n\t\t// Used for walkthrough content.\n\t\tif (/^\\/static[^/]*\\//.test(resource.path)) {\n\t\t\treturn URI.file(this.environmentService.appRoot + resource.path.replace(/^\\/static[^/]*\\//, '/'));\n\t\t// Used by the webview service worker to load resources.\n\t\t} else if (resource.path === '/vscode-resource' && resource.query) {\n\t\t\ttry {\n\t\t\t\tconst query = JSON.parse(resource.query);\n\t\t\t\tif (query.requestResourcePath) {\n\t\t\t\t\treturn URI.file(query.requestResourcePath);\n\t\t\t\t}\n\t\t\t} catch (error) { /* Carry on. */ }\n\t\t}\n\t\treturn URI.from(resource);\n\t}\n}\n\n// See ../../workbench/services/remote/common/remoteAgentEnvironmentChannel.ts\nexport class ExtensionEnvironmentChannel implements IServerChannel {\n\tpublic constructor(\n\t\tprivate readonly environment: INativeEnvironmentService,\n\t\tprivate readonly log: ILogService,\n\t\tprivate readonly telemetry: ITelemetryService,\n\t\tprivate readonly connectionToken: string,\n\t) {}\n\n\tpublic listen(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Invalid listen '${event}'`);\n\t}\n\n\tpublic async call(context: any, command: string, args: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getEnvironmentData':\n\t\t\t\treturn transformOutgoingURIs(\n\t\t\t\t\tawait this.getEnvironmentData(),\n\t\t\t\t\tgetUriTransformer(context.remoteAuthority),\n\t\t\t\t);\n\t\t\tcase 'scanExtensions':\n\t\t\t\treturn transformOutgoingURIs(\n\t\t\t\t\tawait this.scanExtensions(args.language),\n\t\t\t\t\tgetUriTransformer(context.remoteAuthority),\n\t\t\t\t);\n\t\t\tcase 'getDiagnosticInfo': return this.getDiagnosticInfo();\n\t\t\tcase 'disableTelemetry': return this.disableTelemetry();\n\t\t\tcase 'logTelemetry': return this.logTelemetry(args[0], args[1]);\n\t\t\tcase 'flushTelemetry': return this.flushTelemetry();\n\t\t}\n\t\tthrow new Error(`Invalid call '${command}'`);\n\t}\n\n\tprivate async getEnvironmentData(): Promise<IRemoteAgentEnvironment> {\n\t\treturn {\n\t\t\tpid: process.pid,\n\t\t\tconnectionToken: this.connectionToken,\n\t\t\tappRoot: URI.file(this.environment.appRoot),\n\t\t\tsettingsPath: this.environment.settingsResource,\n\t\t\tlogsPath: URI.file(this.environment.logsPath),\n\t\t\textensionsPath: URI.file(this.environment.extensionsPath!),\n\t\t\textensionHostLogsPath: URI.file(path.join(this.environment.logsPath, 'extension-host')),\n\t\t\tglobalStorageHome: this.environment.globalStorageHome,\n\t\t\tworkspaceStorageHome: this.environment.workspaceStorageHome,\n\t\t\tuserHome: this.environment.userHome,\n\t\t\tos: OS,\n\t\t};\n\t}\n\n\tprivate async scanExtensions(language: string): Promise<IExtensionDescription[]> {\n\t\tconst translations = await getTranslations(language, this.environment.userDataPath);\n\n\t\tconst scanMultiple = (isBuiltin: boolean, isUnderDevelopment: boolean, paths: string[]): Promise<IExtensionDescription[][]> => {\n\t\t\treturn Promise.all(paths.map((path) => {\n\t\t\t\treturn ExtensionScanner.scanExtensions(new ExtensionScannerInput(\n\t\t\t\t\tproduct.version,\n\t\t\t\t\tproduct.commit,\n\t\t\t\t\tlanguage,\n\t\t\t\t\t!!process.env.VSCODE_DEV,\n\t\t\t\t\tpath,\n\t\t\t\t\tisBuiltin,\n\t\t\t\t\tisUnderDevelopment,\n\t\t\t\t\ttranslations,\n\t\t\t\t), this.log);\n\t\t\t}));\n\t\t};\n\n\t\tconst scanBuiltin = async (): Promise<IExtensionDescription[][]> => {\n\t\t\treturn scanMultiple(true, false, [this.environment.builtinExtensionsPath, ...this.environment.extraBuiltinExtensionPaths]);\n\t\t};\n\n\t\tconst scanInstalled = async (): Promise<IExtensionDescription[][]> => {\n\t\t\treturn scanMultiple(false, true, [this.environment.extensionsPath!, ...this.environment.extraExtensionPaths]);\n\t\t};\n\n\t\treturn Promise.all([scanBuiltin(), scanInstalled()]).then((allExtensions) => {\n\t\t\tconst uniqueExtensions = new Map<string, IExtensionDescription>();\n\t\t\tallExtensions.forEach((multipleExtensions) => {\n\t\t\t\tmultipleExtensions.forEach((extensions) => {\n\t\t\t\t\textensions.forEach((extension) => {\n\t\t\t\t\t\tconst id = ExtensionIdentifier.toKey(extension.identifier);\n\t\t\t\t\t\tif (uniqueExtensions.has(id)) {\n\t\t\t\t\t\t\tconst oldPath = uniqueExtensions.get(id)!.extensionLocation.fsPath;\n\t\t\t\t\t\t\tconst newPath = extension.extensionLocation.fsPath;\n\t\t\t\t\t\t\tthis.log.warn(`${oldPath} has been overridden ${newPath}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuniqueExtensions.set(id, {\n\t\t\t\t\t\t\t...extension,\n\t\t\t\t\t\t\t// Force extensions that should run on the client due to latency\n\t\t\t\t\t\t\t// issues.\n\t\t\t\t\t\t\textensionKind: extension.identifier.value === 'vscodevim.vim'\n\t\t\t\t\t\t\t\t? [ 'web' ]\n\t\t\t\t\t\t\t\t: extension.extensionKind,\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn Array.from(uniqueExtensions.values());\n\t\t});\n\t}\n\n\tprivate getDiagnosticInfo(): Promise<IDiagnosticInfo> {\n\t\tthrow new Error('not implemented');\n\t}\n\n\tprivate async disableTelemetry(): Promise<void> {\n\t\tthis.telemetry.setEnabled(false);\n\t}\n\n\tprivate async logTelemetry(eventName: string, data: ITelemetryData): Promise<void> {\n\t\tthis.telemetry.publicLog(eventName, data);\n\t}\n\n\tprivate async flushTelemetry(): Promise<void> {\n\t\t// We always send immediately at the moment.\n\t}\n}\n\nexport class NodeProxyService implements INodeProxyService {\n\tpublic _serviceBrand = undefined;\n\n\tpublic readonly server: Server;\n\n\tprivate readonly _onMessage = new Emitter<string>();\n\tpublic readonly onMessage = this._onMessage.event;\n\tprivate readonly _$onMessage = new Emitter<string>();\n\tpublic readonly $onMessage = this._$onMessage.event;\n\tpublic readonly _onDown = new Emitter<void>();\n\tpublic readonly onDown = this._onDown.event;\n\tpublic readonly _onUp = new Emitter<void>();\n\tpublic readonly onUp = this._onUp.event;\n\n\t// Unused because the server connection will never permanently close.\n\tprivate readonly _onClose = new Emitter<void>();\n\tpublic readonly onClose = this._onClose.event;\n\n\tpublic constructor() {\n\t\t// TODO: down/up\n\t\tthis.server = new Server({\n\t\t\tonMessage: this.$onMessage,\n\t\t\tonClose: this.onClose,\n\t\t\tonDown: this.onDown,\n\t\t\tonUp: this.onUp,\n\t\t\tsend: (message: string): void => {\n\t\t\t\tthis._onMessage.fire(message);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic send(message: string): void {\n\t\tthis._$onMessage.fire(message);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { FileChangeType, FileDeleteOptions, FileOverwriteOptions, FileSystemProviderCapabilities, FileType, IFileChange, IStat, IWatchOptions, FileOpenOptions, IFileSystemProviderWithFileReadWriteCapability, FileWriteOptions, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithFileFolderCopyCapability, FileReadStreamOptions, IFileSystemProviderWithOpenReadWriteCloseCapability } from 'vs/platform/files/common/files';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { newWriteableStream, ReadableStreamEvents, ReadableStreamEventPayload } from 'vs/base/common/stream';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\n\nexport const REMOTE_FILE_SYSTEM_CHANNEL_NAME = 'remotefilesystem';\n\nexport interface IFileChangeDto {\n\tresource: UriComponents;\n\ttype: FileChangeType;\n}\n\nexport class RemoteFileSystemProvider extends Disposable implements\n\tIFileSystemProviderWithFileReadWriteCapability,\n\tIFileSystemProviderWithOpenReadWriteCloseCapability,\n\tIFileSystemProviderWithFileReadStreamCapability,\n\tIFileSystemProviderWithFileFolderCopyCapability {\n\n\tprivate readonly session: string = generateUuid();\n\tprivate readonly channel: IChannel;\n\n\tprivate readonly _onDidChange = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChange.event;\n\n\tprivate _onDidWatchErrorOccur = this._register(new Emitter<string>());\n\treadonly onDidErrorOccur = this._onDidWatchErrorOccur.event;\n\n\tprivate readonly _onDidChangeCapabilities = this._register(new Emitter<void>());\n\treadonly onDidChangeCapabilities = this._onDidChangeCapabilities.event;\n\n\tprivate _capabilities!: FileSystemProviderCapabilities;\n\tget capabilities(): FileSystemProviderCapabilities { return this._capabilities; }\n\n\tconstructor(remoteAgentService: IRemoteAgentService) {\n\t\tsuper();\n\n\t\tconst connection = remoteAgentService.getConnection()!;\n\t\tthis.channel = connection.getChannel<IChannel>(REMOTE_FILE_SYSTEM_CHANNEL_NAME);\n\n\t\t// Initially assume case sensitivity until remote environment is resolved\n\t\tthis.setCaseSensitive(true);\n\t\t(async () => {\n\t\t\tconst remoteAgentEnvironment = await remoteAgentService.getEnvironment();\n\t\t\tthis.setCaseSensitive(remoteAgentEnvironment?.os === OperatingSystem.Linux);\n\t\t})();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.channel.listen<IFileChangeDto[] | string>('filechange', [this.session])(eventsOrError => {\n\t\t\tif (Array.isArray(eventsOrError)) {\n\t\t\t\tconst events = eventsOrError;\n\t\t\t\tthis._onDidChange.fire(events.map(event => ({ resource: URI.revive(event.resource), type: event.type })));\n\t\t\t} else {\n\t\t\t\tconst error = eventsOrError;\n\t\t\t\tthis._onDidWatchErrorOccur.fire(error);\n\t\t\t}\n\t\t}));\n\t}\n\n\tsetCaseSensitive(isCaseSensitive: boolean) {\n\t\tlet capabilities = (\n\t\t\tFileSystemProviderCapabilities.FileReadWrite\n\t\t\t| FileSystemProviderCapabilities.FileOpenReadWriteClose\n\t\t\t| FileSystemProviderCapabilities.FileReadStream\n\t\t\t| FileSystemProviderCapabilities.FileFolderCopy\n\t\t);\n\n\t\tif (isCaseSensitive) {\n\t\t\tcapabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t}\n\n\t\tthis._capabilities = capabilities;\n\t\tthis._onDidChangeCapabilities.fire(undefined);\n\t}\n\n\t// --- forwarding calls\n\n\tstat(resource: URI): Promise<IStat> {\n\t\treturn this.channel.call('stat', [resource]);\n\t}\n\n\topen(resource: URI, opts: FileOpenOptions): Promise<number> {\n\t\treturn this.channel.call('open', [resource, opts]);\n\t}\n\n\tclose(fd: number): Promise<void> {\n\t\treturn this.channel.call('close', [fd]);\n\t}\n\n\tasync read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst [bytes, bytesRead]: [VSBuffer, number] = await this.channel.call('read', [fd, pos, length]);\n\n\t\t// copy back the data that was written into the buffer on the remote\n\t\t// side. we need to do this because buffers are not referenced by\n\t\t// pointer, but only by value and as such cannot be directly written\n\t\t// to from the other process.\n\t\tdata.set(bytes.buffer.slice(0, bytesRead), offset);\n\n\t\treturn bytesRead;\n\t}\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\tconst buff = <VSBuffer>await this.channel.call('readFile', [resource]);\n\n\t\treturn buff.buffer;\n\t}\n\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tconst stream = newWriteableStream<Uint8Array>(data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\n\t\t// Reading as file stream goes through an event to the remote side\n\t\tconst listener = this.channel.listen<ReadableStreamEventPayload<VSBuffer>>('readFileStream', [resource, opts])(dataOrErrorOrEnd => {\n\n\t\t\t// data\n\t\t\tif (dataOrErrorOrEnd instanceof VSBuffer) {\n\t\t\t\tstream.write(dataOrErrorOrEnd.buffer);\n\t\t\t}\n\n\t\t\t// end or error\n\t\t\telse {\n\t\t\t\tif (dataOrErrorOrEnd === 'end') {\n\t\t\t\t\tstream.end();\n\t\t\t\t} else {\n\n\t\t\t\t\t// Since we receive data through a IPC channel, it is likely\n\t\t\t\t\t// that the error was not serialized, or only partially. To\n\t\t\t\t\t// ensure our API use is correct, we convert the data to an\n\t\t\t\t\t// error here to forward it properly.\n\t\t\t\t\tlet error = dataOrErrorOrEnd;\n\t\t\t\t\tif (!(error instanceof Error)) {\n\t\t\t\t\t\terror = new Error(toErrorMessage(error));\n\t\t\t\t\t}\n\n\t\t\t\t\tstream.end(error);\n\t\t\t\t}\n\n\t\t\t\t// Signal to the remote side that we no longer listen\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\t// Support cancellation\n\t\ttoken.onCancellationRequested(() => {\n\n\t\t\t// Ensure to end the stream properly with an error\n\t\t\t// to indicate the cancellation.\n\t\t\tstream.end(canceled());\n\n\t\t\t// Ensure to dispose the listener upon cancellation. This will\n\t\t\t// bubble through the remote side as event and allows to stop\n\t\t\t// reading the file.\n\t\t\tlistener.dispose();\n\t\t});\n\n\t\treturn stream;\n\t}\n\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\treturn this.channel.call('write', [fd, pos, VSBuffer.wrap(data), offset, length]);\n\t}\n\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\treturn this.channel.call('writeFile', [resource, VSBuffer.wrap(content), opts]);\n\t}\n\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\treturn this.channel.call('delete', [resource, opts]);\n\t}\n\n\tmkdir(resource: URI): Promise<void> {\n\t\treturn this.channel.call('mkdir', [resource]);\n\t}\n\n\treaddir(resource: URI): Promise<[string, FileType][]> {\n\t\treturn this.channel.call('readdir', [resource]);\n\t}\n\n\trename(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.channel.call('rename', [resource, target, opts]);\n\t}\n\n\tcopy(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.channel.call('copy', [resource, target, opts]);\n\t}\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tconst req = Math.random();\n\t\tthis.channel.call('watch', [this.session, req, resource, opts]);\n\n\t\treturn toDisposable(() => this.channel.call('unwatch', [this.session, req]));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { RemoteAgentConnectionContext, IRemoteAgentEnvironment } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IDiagnosticInfoOptions, IDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { Event } from 'vs/base/common/event';\nimport { PersistenConnectionEvent as PersistentConnectionEvent, ISocketFactory } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\n\nexport const RemoteExtensionLogFileName = 'remoteagent';\n\nexport const IRemoteAgentService = createDecorator<IRemoteAgentService>('remoteAgentService');\n\nexport interface IRemoteAgentService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly socketFactory: ISocketFactory;\n\n\tgetConnection(): IRemoteAgentConnection | null;\n\t/**\n\t * Get the remote environment. In case of an error, returns `null`.\n\t */\n\tgetEnvironment(): Promise<IRemoteAgentEnvironment | null>;\n\t/**\n\t * Get the remote environment. Can return an error.\n\t */\n\tgetRawEnvironment(): Promise<IRemoteAgentEnvironment | null>;\n\t/**\n\t * Scan remote extensions.\n\t */\n\tscanExtensions(skipExtensions?: ExtensionIdentifier[]): Promise<IExtensionDescription[]>;\n\tgetDiagnosticInfo(options: IDiagnosticInfoOptions): Promise<IDiagnosticInfo | undefined>;\n\tdisableTelemetry(): Promise<void>;\n\tlogTelemetry(eventName: string, data?: ITelemetryData): Promise<void>;\n\tflushTelemetry(): Promise<void>;\n}\n\nexport interface IRemoteAgentConnection {\n\treadonly remoteAuthority: string;\n\n\treadonly onReconnecting: Event<void>;\n\treadonly onDidStateChange: Event<PersistentConnectionEvent>;\n\n\tgetChannel<T extends IChannel>(channelName: string): T;\n\twithChannel<T extends IChannel, R>(channelName: string, callback: (channel: T) => Promise<R>): Promise<R>;\n\tregisterChannel<T extends IServerChannel<RemoteAgentConnectionContext>>(channelName: string, channel: T): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport { createWriteStream, WriteStream } from 'fs';\nimport { Readable } from 'stream';\nimport { Sequencer, createCancelablePromise } from 'vs/base/common/async';\nimport { mkdirp, rimraf } from 'vs/base/node/pfs';\nimport { open as _openZip, Entry, ZipFile } from 'yauzl';\nimport * as yazl from 'yazl';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport interface IExtractOptions {\n\toverwrite?: boolean;\n\n\t/**\n\t * Source path within the ZIP archive. Only the files contained in this\n\t * path will be extracted.\n\t */\n\tsourcePath?: string;\n}\n\ninterface IOptions {\n\tsourcePathRegex: RegExp;\n}\n\nexport type ExtractErrorType = 'CorruptZip' | 'Incomplete';\n\nexport class ExtractError extends Error {\n\n\treadonly type?: ExtractErrorType;\n\treadonly cause: Error;\n\n\tconstructor(type: ExtractErrorType | undefined, cause: Error) {\n\t\tlet message = cause.message;\n\n\t\tswitch (type) {\n\t\t\tcase 'CorruptZip': message = `Corrupt ZIP: ${message}`; break;\n\t\t}\n\n\t\tsuper(message);\n\t\tthis.type = type;\n\t\tthis.cause = cause;\n\t}\n}\n\nfunction modeFromEntry(entry: Entry) {\n\tconst attr = entry.externalFileAttributes >> 16 || 33188;\n\n\treturn [448 /* S_IRWXU */, 56 /* S_IRWXG */, 7 /* S_IRWXO */]\n\t\t.map(mask => attr & mask)\n\t\t.reduce((a, b) => a + b, attr & 61440 /* S_IFMT */);\n}\n\nfunction toExtractError(err: Error): ExtractError {\n\tif (err instanceof ExtractError) {\n\t\treturn err;\n\t}\n\n\tlet type: ExtractErrorType | undefined = undefined;\n\n\tif (/end of central directory record signature not found/.test(err.message)) {\n\t\ttype = 'CorruptZip';\n\t}\n\n\treturn new ExtractError(type, err);\n}\n\nfunction extractEntry(stream: Readable, fileName: string, mode: number, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tconst dirName = path.dirname(fileName);\n\tconst targetDirName = path.join(targetPath, dirName);\n\tif (targetDirName.indexOf(targetPath) !== 0) {\n\t\treturn Promise.reject(new Error(nls.localize('invalid file', \"Error extracting {0}. Invalid file.\", fileName)));\n\t}\n\tconst targetFileName = path.join(targetPath, fileName);\n\n\tlet istream: WriteStream;\n\n\ttoken.onCancellationRequested(() => {\n\t\tif (istream) {\n\t\t\tistream.destroy();\n\t\t}\n\t});\n\n\treturn Promise.resolve(mkdirp(targetDirName)).then(() => new Promise<void>((c, e) => {\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tistream = createWriteStream(targetFileName, { mode });\n\t\t\tistream.once('close', () => c());\n\t\t\tistream.once('error', e);\n\t\t\tstream.once('error', e);\n\t\t\tstream.pipe(istream);\n\t\t} catch (error) {\n\t\t\te(error);\n\t\t}\n\t}));\n}\n\nfunction extractZip(zipfile: ZipFile, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tlet last = createCancelablePromise<void>(() => Promise.resolve());\n\tlet extractedEntriesCount = 0;\n\n\ttoken.onCancellationRequested(() => {\n\t\tlast.cancel();\n\t\tzipfile.close();\n\t});\n\n\treturn new Promise((c, e) => {\n\t\tconst throttler = new Sequencer();\n\n\t\tconst readNextEntry = (token: CancellationToken) => {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\textractedEntriesCount++;\n\t\t\tzipfile.readEntry();\n\t\t};\n\n\t\tzipfile.once('error', e);\n\t\tzipfile.once('close', () => last.then(() => {\n\t\t\tif (token.isCancellationRequested || zipfile.entryCount === extractedEntriesCount) {\n\t\t\t\tc();\n\t\t\t} else {\n\t\t\t\te(new ExtractError('Incomplete', new Error(nls.localize('incompleteExtract', \"Incomplete. Found {0} of {1} entries\", extractedEntriesCount, zipfile.entryCount))));\n\t\t\t}\n\t\t}, e));\n\t\tzipfile.readEntry();\n\t\tzipfile.on('entry', (entry: Entry) => {\n\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!options.sourcePathRegex.test(entry.fileName)) {\n\t\t\t\treadNextEntry(token);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst fileName = entry.fileName.replace(options.sourcePathRegex, '');\n\n\t\t\t// directory file names end with '/'\n\t\t\tif (/\\/$/.test(fileName)) {\n\t\t\t\tconst targetFileName = path.join(targetPath, fileName);\n\t\t\t\tlast = createCancelablePromise(token => mkdirp(targetFileName).then(() => readNextEntry(token)).then(undefined, e));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst stream = openZipStream(zipfile, entry);\n\t\t\tconst mode = modeFromEntry(entry);\n\n\t\t\tlast = createCancelablePromise(token => throttler.queue(() => stream.then(stream => extractEntry(stream, fileName, mode, targetPath, options, token).then(() => readNextEntry(token)))).then(null, e));\n\t\t});\n\t});\n}\n\nfunction openZip(zipFile: string, lazy: boolean = false): Promise<ZipFile> {\n\treturn new Promise((resolve, reject) => {\n\t\t_openZip(zipFile, lazy ? { lazyEntries: true } : undefined!, (error?: Error, zipfile?: ZipFile) => {\n\t\t\tif (error) {\n\t\t\t\treject(toExtractError(error));\n\t\t\t} else {\n\t\t\t\tresolve(zipfile);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction openZipStream(zipFile: ZipFile, entry: Entry): Promise<Readable> {\n\treturn new Promise((resolve, reject) => {\n\t\tzipFile.openReadStream(entry, (error?: Error, stream?: Readable) => {\n\t\t\tif (error) {\n\t\t\t\treject(toExtractError(error));\n\t\t\t} else {\n\t\t\t\tresolve(stream);\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport interface IFile {\n\tpath: string;\n\tcontents?: Buffer | string;\n\tlocalPath?: string;\n}\n\nexport function zip(zipPath: string, files: IFile[]): Promise<string> {\n\treturn new Promise<string>((c, e) => {\n\t\tconst zip = new yazl.ZipFile();\n\t\tfiles.forEach(f => {\n\t\t\tif (f.contents) {\n\t\t\t\tzip.addBuffer(typeof f.contents === 'string' ? Buffer.from(f.contents, 'utf8') : f.contents, f.path);\n\t\t\t} else if (f.localPath) {\n\t\t\t\tzip.addFile(f.localPath, f.path);\n\t\t\t}\n\t\t});\n\t\tzip.end();\n\n\t\tconst zipStream = createWriteStream(zipPath);\n\t\tzip.outputStream.pipe(zipStream);\n\n\t\tzip.outputStream.once('error', e);\n\t\tzipStream.once('error', e);\n\t\tzipStream.once('finish', () => c(zipPath));\n\t});\n}\n\nexport function extract(zipPath: string, targetPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> {\n\tconst sourcePathRegex = new RegExp(options.sourcePath ? `^${options.sourcePath}` : '');\n\n\tlet promise = openZip(zipPath, true);\n\n\tif (options.overwrite) {\n\t\tpromise = promise.then(zipfile => rimraf(targetPath).then(() => zipfile));\n\t}\n\n\treturn promise.then(zipfile => extractZip(zipfile, targetPath, { sourcePathRegex }, token));\n}\n\nfunction read(zipPath: string, filePath: string): Promise<Readable> {\n\treturn openZip(zipPath).then(zipfile => {\n\t\treturn new Promise<Readable>((c, e) => {\n\t\t\tzipfile.on('entry', (entry: Entry) => {\n\t\t\t\tif (entry.fileName === filePath) {\n\t\t\t\t\topenZipStream(zipfile, entry).then(stream => c(stream), err => e(err));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tzipfile.once('close', () => e(new Error(nls.localize('notFound', \"{0} not found inside zip.\", filePath))));\n\t\t});\n\t});\n}\n\nexport function buffer(zipPath: string, filePath: string): Promise<Buffer> {\n\treturn read(zipPath, filePath).then(stream => {\n\t\treturn new Promise<Buffer>((c, e) => {\n\t\t\tconst buffers: Buffer[] = [];\n\t\t\tstream.once('error', e);\n\t\t\tstream.on('data', (b: Buffer) => buffers.push(b));\n\t\t\tstream.on('end', () => c(Buffer.concat(buffers)));\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buffer } from 'vs/base/node/zip';\nimport { localize } from 'vs/nls';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nexport function getManifest(vsix: string): Promise<IExtensionManifest> {\n\treturn buffer(vsix, 'extension/package.json')\n\t\t.then(buffer => {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString('utf8'));\n\t\t\t} catch (err) {\n\t\t\t\tthrow new Error(localize('invalidManifest', \"VSIX invalid: package.json is not a JSON file.\"));\n\t\t\t}\n\t\t});\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as semver from 'semver-umd';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport * as pfs from 'vs/base/node/pfs';\nimport * as path from 'vs/base/common/path';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ILocalExtension, IGalleryMetadata, ExtensionManagementError } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionType, IExtensionManifest, IExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { areSameExtensions, ExtensionIdentifierWithVersion, groupByExtension, getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { Limiter, Queue } from 'vs/base/common/async';\nimport { URI } from 'vs/base/common/uri';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { INativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport { localizeManifest } from 'vs/platform/extensionManagement/common/extensionNls';\nimport { localize } from 'vs/nls';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { CancellationToken } from 'vscode';\nimport { extract, ExtractError } from 'vs/base/node/zip';\nimport { isWindows } from 'vs/base/common/platform';\nimport { flatten } from 'vs/base/common/arrays';\nimport { assign } from 'vs/base/common/objects';\n\nconst ERROR_SCANNING_SYS_EXTENSIONS = 'scanningSystem';\nconst ERROR_SCANNING_USER_EXTENSIONS = 'scanningUser';\nconst INSTALL_ERROR_EXTRACTING = 'extracting';\nconst INSTALL_ERROR_DELETING = 'deleting';\nconst INSTALL_ERROR_RENAMING = 'renaming';\n\nexport type IMetadata = Partial<IGalleryMetadata & { isMachineScoped: boolean; }>;\n\nexport class ExtensionsScanner extends Disposable {\n\n\tprivate readonly systemExtensionsPath: string;\n\tprivate readonly extensionsPath: string;\n\tprivate readonly uninstalledPath: string;\n\tprivate readonly uninstalledFileLimiter: Queue<any>;\n\n\tconstructor(\n\t\tprivate readonly beforeRemovingExtension: (e: ILocalExtension) => Promise<void>,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@IProductService private readonly productService: IProductService,\n\t) {\n\t\tsuper();\n\t\tthis.systemExtensionsPath = environmentService.builtinExtensionsPath;\n\t\tthis.extensionsPath = environmentService.extensionsPath!;\n\t\tthis.uninstalledPath = path.join(this.extensionsPath, '.obsolete');\n\t\tthis.uninstalledFileLimiter = new Queue();\n\t}\n\n\tasync cleanUp(): Promise<void> {\n\t\tawait this.removeUninstalledExtensions();\n\t\tawait this.removeOutdatedExtensions();\n\t}\n\n\tasync scanExtensions(type: ExtensionType | null): Promise<ILocalExtension[]> {\n\t\tconst promises: Promise<ILocalExtension[]>[] = [];\n\n\t\tif (type === null || type === ExtensionType.System) {\n\t\t\tpromises.push(this.scanSystemExtensions().then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ERROR_SCANNING_SYS_EXTENSIONS))));\n\t\t}\n\n\t\tif (type === null || type === ExtensionType.User) {\n\t\t\tpromises.push(this.scanUserExtensions(true).then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ERROR_SCANNING_USER_EXTENSIONS))));\n\t\t}\n\n\t\treturn Promise.all<ILocalExtension[]>(promises).then(flatten, errors => Promise.reject(this.joinErrors(errors)));\n\t}\n\n\tasync scanUserExtensions(excludeOutdated: boolean): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning user extensions');\n\t\tlet [uninstalled, extensions] = await Promise.all([this.getUninstalledExtensions(), this.scanAllUserExtensions()]);\n\t\textensions = extensions.filter(e => !uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\tif (excludeOutdated) {\n\t\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\t\textensions = byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version))[0]);\n\t\t}\n\t\tthis.logService.trace('Scanned user extensions:', extensions.length);\n\t\treturn extensions;\n\t}\n\n\tasync scanAllUserExtensions(): Promise<ILocalExtension[]> {\n\t\treturn this.scanExtensionsInDirs(this.extensionsPath, this.environmentService.extraExtensionPaths, ExtensionType.User);\n\t}\n\n\tasync extractUserExtension(identifierWithVersion: ExtensionIdentifierWithVersion, zipPath: string, token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst { identifier } = identifierWithVersion;\n\t\tconst folderName = identifierWithVersion.key();\n\t\tconst tempPath = path.join(this.extensionsPath, `.${folderName}`);\n\t\tconst extensionPath = path.join(this.extensionsPath, folderName);\n\n\t\ttry {\n\t\t\tawait pfs.rimraf(extensionPath);\n\t\t} catch (error) {\n\t\t\ttry {\n\t\t\t\tawait pfs.rimraf(extensionPath);\n\t\t\t} catch (e) { /* ignore */ }\n\t\t\tthrow new ExtensionManagementError(localize('errorDeleting', \"Unable to delete the existing folder '{0}' while installing the extension '{1}'. Please delete the folder manually and try again\", extensionPath, identifier.id), INSTALL_ERROR_DELETING);\n\t\t}\n\n\t\tawait this.extractAtLocation(identifier, zipPath, tempPath, token);\n\t\ttry {\n\t\t\tawait this.rename(identifier, tempPath, extensionPath, Date.now() + (2 * 60 * 1000) /* Retry for 2 minutes */);\n\t\t\tthis.logService.info('Renamed to', extensionPath);\n\t\t} catch (error) {\n\t\t\tthis.logService.info('Rename failed. Deleting from extracted location', tempPath);\n\t\t\ttry {\n\t\t\t\tpfs.rimraf(tempPath);\n\t\t\t} catch (e) { /* ignore */ }\n\t\t\tthrow error;\n\t\t}\n\n\t\tlet local: ILocalExtension | null = null;\n\t\ttry {\n\t\t\tlocal = await this.scanExtension(folderName, this.extensionsPath, ExtensionType.User);\n\t\t} catch (e) { /*ignore */ }\n\n\t\tif (local) {\n\t\t\treturn local;\n\t\t}\n\t\tthrow new Error(localize('cannot read', \"Cannot read the extension from {0}\", this.extensionsPath));\n\t}\n\n\tasync saveMetadataForLocalExtension(local: ILocalExtension, metadata: IMetadata): Promise<ILocalExtension> {\n\t\tthis.setMetadata(local, metadata);\n\n\t\t// unset if false\n\t\tmetadata.isMachineScoped = metadata.isMachineScoped || undefined;\n\t\tconst manifestPath = path.join(local.location.fsPath, 'package.json');\n\t\tconst raw = await pfs.readFile(manifestPath, 'utf8');\n\t\tconst { manifest } = await this.parseManifest(raw);\n\t\tassign(manifest, { __metadata: metadata });\n\t\tawait pfs.writeFile(manifestPath, JSON.stringify(manifest, null, '\\t'));\n\t\treturn local;\n\t}\n\n\tgetUninstalledExtensions(): Promise<{ [id: string]: boolean; }> {\n\t\treturn this.withUninstalledExtensions(uninstalled => uninstalled);\n\t}\n\n\tasync withUninstalledExtensions<T>(fn: (uninstalled: { [id: string]: boolean; }) => T): Promise<T> {\n\t\treturn this.uninstalledFileLimiter.queue(async () => {\n\t\t\tlet result: T | null = null;\n\t\t\treturn pfs.readFile(this.uninstalledPath, 'utf8')\n\t\t\t\t.then(undefined, err => err.code === 'ENOENT' ? Promise.resolve('{}') : Promise.reject(err))\n\t\t\t\t.then<{ [id: string]: boolean }>(raw => { try { return JSON.parse(raw); } catch (e) { return {}; } })\n\t\t\t\t.then(uninstalled => { result = fn(uninstalled); return uninstalled; })\n\t\t\t\t.then(uninstalled => {\n\t\t\t\t\tif (Object.keys(uninstalled).length === 0) {\n\t\t\t\t\t\treturn pfs.rimraf(this.uninstalledPath);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst raw = JSON.stringify(uninstalled);\n\t\t\t\t\t\treturn pfs.writeFile(this.uninstalledPath, raw);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(() => result);\n\t\t});\n\t}\n\n\tasync removeExtension(extension: ILocalExtension, type: string): Promise<void> {\n\t\tthis.logService.trace(`Deleting ${type} extension from disk`, extension.identifier.id, extension.location.fsPath);\n\t\tawait pfs.rimraf(extension.location.fsPath);\n\t\tthis.logService.info('Deleted from disk', extension.identifier.id, extension.location.fsPath);\n\t}\n\n\tasync removeUninstalledExtension(extension: ILocalExtension): Promise<void> {\n\t\tawait this.removeExtension(extension, 'uninstalled');\n\t\tawait this.withUninstalledExtensions(uninstalled => delete uninstalled[new ExtensionIdentifierWithVersion(extension.identifier, extension.manifest.version).key()]);\n\t}\n\n\tprivate extractAtLocation(identifier: IExtensionIdentifier, zipPath: string, location: string, token: CancellationToken): Promise<void> {\n\t\tthis.logService.trace(`Started extracting the extension from ${zipPath} to ${location}`);\n\t\treturn pfs.rimraf(location)\n\t\t\t.then(\n\t\t\t\t() => extract(zipPath, location, { sourcePath: 'extension', overwrite: true }, token)\n\t\t\t\t\t.then(\n\t\t\t\t\t\t() => this.logService.info(`Extracted extension to ${location}:`, identifier.id),\n\t\t\t\t\t\te => pfs.rimraf(location).finally(() => { })\n\t\t\t\t\t\t\t.then(() => Promise.reject(new ExtensionManagementError(e.message, e instanceof ExtractError && e.type ? e.type : INSTALL_ERROR_EXTRACTING)))),\n\t\t\t\te => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, INSTALL_ERROR_DELETING)));\n\t}\n\n\tprivate rename(identifier: IExtensionIdentifier, extractPath: string, renamePath: string, retryUntil: number): Promise<void> {\n\t\treturn pfs.rename(extractPath, renamePath)\n\t\t\t.then(undefined, error => {\n\t\t\t\tif (isWindows && error && error.code === 'EPERM' && Date.now() < retryUntil) {\n\t\t\t\t\tthis.logService.info(`Failed renaming ${extractPath} to ${renamePath} with 'EPERM' error. Trying again...`, identifier.id);\n\t\t\t\t\treturn this.rename(identifier, extractPath, renamePath, retryUntil);\n\t\t\t\t}\n\t\t\t\treturn Promise.reject(new ExtensionManagementError(error.message || localize('renameError', \"Unknown error while renaming {0} to {1}\", extractPath, renamePath), error.code || INSTALL_ERROR_RENAMING));\n\t\t\t});\n\t}\n\n\tprivate async scanSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning system extensions');\n\t\tconst systemExtensionsPromise = this.scanDefaultSystemExtensions();\n\t\tif (this.environmentService.isBuilt) {\n\t\t\treturn systemExtensionsPromise;\n\t\t}\n\n\t\t// Scan other system extensions during development\n\t\tconst devSystemExtensionsPromise = this.scanDevSystemExtensions();\n\t\tconst [systemExtensions, devSystemExtensions] = await Promise.all([systemExtensionsPromise, devSystemExtensionsPromise]);\n\t\treturn [...systemExtensions, ...devSystemExtensions];\n\t}\n\n\tprivate async scanExtensionsInDir(dir: string, type: ExtensionType): Promise<ILocalExtension[]> {\n\t\tconst limiter = new Limiter<any>(10);\n\t\tconst extensionsFolders = await pfs.readdir(dir)\n\t\t\t.catch((error) => {\n\t\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\treturn <string[]>[];\n\t\t\t});\n\t\tconst extensions = await Promise.all<ILocalExtension>(extensionsFolders.map(extensionFolder => limiter.queue(() => this.scanExtension(extensionFolder, dir, type))));\n\t\treturn extensions.filter(e => e && e.identifier);\n\t}\n\n\tprivate async scanExtension(folderName: string, root: string, type: ExtensionType): Promise<ILocalExtension | null> {\n\t\tif (type === ExtensionType.User && folderName.indexOf('.') === 0) { // Do not consider user extension folder starting with `.`\n\t\t\treturn null;\n\t\t}\n\t\tconst extensionPath = path.join(root, folderName);\n\t\ttry {\n\t\t\tconst children = await pfs.readdir(extensionPath);\n\t\t\tconst { manifest, metadata } = await this.readManifest(extensionPath);\n\t\t\tconst readme = children.filter(child => /^readme(\\.txt|\\.md|)$/i.test(child))[0];\n\t\t\tconst readmeUrl = readme ? URI.file(path.join(extensionPath, readme)) : undefined;\n\t\t\tconst changelog = children.filter(child => /^changelog(\\.txt|\\.md|)$/i.test(child))[0];\n\t\t\tconst changelogUrl = changelog ? URI.file(path.join(extensionPath, changelog)) : undefined;\n\t\t\tconst identifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\t\tconst local = <ILocalExtension>{ type, identifier, manifest, location: URI.file(extensionPath), readmeUrl, changelogUrl, publisherDisplayName: null, publisherId: null, isMachineScoped: false };\n\t\t\tif (metadata) {\n\t\t\t\tthis.setMetadata(local, metadata);\n\t\t\t}\n\t\t\treturn local;\n\t\t} catch (e) {\n\t\t\tthis.logService.trace(e);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate async scanDefaultSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tconst result = await this.scanExtensionsInDirs(this.systemExtensionsPath, this.environmentService.extraBuiltinExtensionPaths, ExtensionType.System);\n\t\tthis.logService.trace('Scanned system extensions:', result.length);\n\t\treturn result;\n\t}\n\n\tprivate async scanDevSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tconst devSystemExtensionsList = this.getDevSystemExtensionsList();\n\t\tif (devSystemExtensionsList.length) {\n\t\t\tconst result = await this.scanExtensionsInDir(this.devSystemExtensionsPath, ExtensionType.System);\n\t\t\tthis.logService.trace('Scanned dev system extensions:', result.length);\n\t\t\treturn result.filter(r => devSystemExtensionsList.some(id => areSameExtensions(r.identifier, { id })));\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate setMetadata(local: ILocalExtension, metadata: IMetadata): void {\n\t\tlocal.publisherDisplayName = metadata.publisherDisplayName || null;\n\t\tlocal.publisherId = metadata.publisherId || null;\n\t\tlocal.identifier.uuid = metadata.id;\n\t\tlocal.isMachineScoped = !!metadata.isMachineScoped;\n\t}\n\n\tprivate async removeUninstalledExtensions(): Promise<void> {\n\t\tconst uninstalled = await this.getUninstalledExtensions();\n\t\tconst extensions = await this.scanAllUserExtensions(); // All user extensions\n\t\tconst installed: Set<string> = new Set<string>();\n\t\tfor (const e of extensions) {\n\t\t\tif (!uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]) {\n\t\t\t\tinstalled.add(e.identifier.id.toLowerCase());\n\t\t\t}\n\t\t}\n\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\tawait Promise.all(byExtension.map(async e => {\n\t\t\tconst latest = e.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version))[0];\n\t\t\tif (!installed.has(latest.identifier.id.toLowerCase())) {\n\t\t\t\tawait this.beforeRemovingExtension(latest);\n\t\t\t}\n\t\t}));\n\t\tconst toRemove: ILocalExtension[] = extensions.filter(e => uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\tawait Promise.all(toRemove.map(e => this.removeUninstalledExtension(e)));\n\t}\n\n\tprivate async removeOutdatedExtensions(): Promise<void> {\n\t\tconst extensions = await this.scanAllUserExtensions();\n\t\tconst toRemove: ILocalExtension[] = [];\n\n\t\t// Outdated extensions\n\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\ttoRemove.push(...flatten(byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version)).slice(1))));\n\n\t\tawait Promise.all(toRemove.map(extension => this.removeExtension(extension, 'outdated')));\n\t}\n\n\tprivate getDevSystemExtensionsList(): string[] {\n\t\treturn (this.productService.builtInExtensions || []).map(e => e.name);\n\t}\n\n\tprivate joinErrors(errorOrErrors: (Error | string) | (Array<Error | string>)): Error {\n\t\tconst errors = Array.isArray(errorOrErrors) ? errorOrErrors : [errorOrErrors];\n\t\tif (errors.length === 1) {\n\t\t\treturn errors[0] instanceof Error ? <Error>errors[0] : new Error(<string>errors[0]);\n\t\t}\n\t\treturn errors.reduce<Error>((previousValue: Error, currentValue: Error | string) => {\n\t\t\treturn new Error(`${previousValue.message}${previousValue.message ? ',' : ''}${currentValue instanceof Error ? currentValue.message : currentValue}`);\n\t\t}, new Error(''));\n\t}\n\n\tprivate _devSystemExtensionsPath: string | null = null;\n\tprivate get devSystemExtensionsPath(): string {\n\t\tif (!this._devSystemExtensionsPath) {\n\t\t\tthis._devSystemExtensionsPath = path.normalize(path.join(getPathFromAmdModule(require, ''), '..', '.build', 'builtInExtensions'));\n\t\t}\n\t\treturn this._devSystemExtensionsPath;\n\t}\n\n\tprivate async readManifest(extensionPath: string): Promise<{ manifest: IExtensionManifest; metadata: IMetadata | null; }> {\n\t\tconst promises = [\n\t\t\tpfs.readFile(path.join(extensionPath, 'package.json'), 'utf8')\n\t\t\t\t.then(raw => this.parseManifest(raw)),\n\t\t\tpfs.readFile(path.join(extensionPath, 'package.nls.json'), 'utf8')\n\t\t\t\t.then(undefined, err => err.code !== 'ENOENT' ? Promise.reject<string>(err) : '{}')\n\t\t\t\t.then(raw => JSON.parse(raw))\n\t\t];\n\n\t\tconst [{ manifest, metadata }, translations] = await Promise.all(promises);\n\t\treturn {\n\t\t\tmanifest: localizeManifest(manifest, translations),\n\t\t\tmetadata\n\t\t};\n\t}\n\n\tprivate parseManifest(raw: string): Promise<{ manifest: IExtensionManifest; metadata: IMetadata | null; }> {\n\t\treturn new Promise((c, e) => {\n\t\t\ttry {\n\t\t\t\tconst manifest = JSON.parse(raw);\n\t\t\t\tconst metadata = manifest.__metadata || null;\n\t\t\t\tdelete manifest.__metadata;\n\t\t\t\tc({ manifest, metadata });\n\t\t\t} catch (err) {\n\t\t\t\te(new Error(localize('invalidManifest', \"Extension invalid: package.json is not a JSON file.\")));\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async scanExtensionsInDirs(dir: string, dirs: string[], type: ExtensionType): Promise<ILocalExtension[]>{\n\t\tconst results = await Promise.all([dir, ...dirs].map((path) => this.scanExtensionsInDir(path, type)));\n\t\treturn results.reduce((flat, current) => flat.concat(current), []);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport * as pfs from 'vs/base/node/pfs';\nimport { assign } from 'vs/base/common/objects';\nimport { toDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { zip, IFile } from 'vs/base/node/zip';\nimport {\n\tIExtensionManagementService, IExtensionGalleryService, ILocalExtension,\n\tIGalleryExtension, IGalleryMetadata,\n\tInstallExtensionEvent, DidInstallExtensionEvent, DidUninstallExtensionEvent,\n\tStatisticType,\n\tIExtensionIdentifier,\n\tIReportedExtension,\n\tInstallOperation,\n\tINSTALL_ERROR_MALICIOUS,\n\tINSTALL_ERROR_INCOMPATIBLE,\n\tExtensionManagementError\n} from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, getGalleryExtensionId, getMaliciousExtensionsSet, getGalleryExtensionTelemetryData, getLocalExtensionTelemetryData, ExtensionIdentifierWithVersion } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { INativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { createCancelablePromise, CancelablePromise } from 'vs/base/common/async';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport * as semver from 'semver-umd';\nimport { URI } from 'vs/base/common/uri';\nimport product from 'vs/platform/product/common/product';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ExtensionsManifestCache } from 'vs/platform/extensionManagement/node/extensionsManifestCache';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { tmpdir } from 'os';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { optional, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { Schemas } from 'vs/base/common/network';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { getManifest } from 'vs/platform/extensionManagement/node/extensionManagementUtil';\nimport { IExtensionManifest, ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { ExtensionsDownloader } from 'vs/platform/extensionManagement/node/extensionDownloader';\nimport { ExtensionsScanner, IMetadata } from 'vs/platform/extensionManagement/node/extensionsScanner';\nimport { ExtensionsLifecycle } from 'vs/platform/extensionManagement/node/extensionLifecycle';\n\nconst INSTALL_ERROR_UNSET_UNINSTALLED = 'unsetUninstalled';\nconst INSTALL_ERROR_DOWNLOADING = 'downloading';\nconst INSTALL_ERROR_VALIDATING = 'validating';\nconst INSTALL_ERROR_LOCAL = 'local';\nconst ERROR_UNKNOWN = 'unknown';\n\ninterface InstallableExtension {\n\tzipPath: string;\n\tidentifierWithVersion: ExtensionIdentifierWithVersion;\n\tmetadata?: IMetadata;\n}\n\nexport class ExtensionManagementService extends Disposable implements IExtensionManagementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly extensionsScanner: ExtensionsScanner;\n\tprivate reportedExtensions: Promise<IReportedExtension[]> | undefined;\n\tprivate lastReportTimestamp = 0;\n\tprivate readonly installingExtensions: Map<string, CancelablePromise<ILocalExtension>> = new Map<string, CancelablePromise<ILocalExtension>>();\n\tprivate readonly uninstallingExtensions: Map<string, CancelablePromise<void>> = new Map<string, CancelablePromise<void>>();\n\tprivate readonly manifestCache: ExtensionsManifestCache;\n\tprivate readonly extensionsDownloader: ExtensionsDownloader;\n\n\tprivate readonly _onInstallExtension = this._register(new Emitter<InstallExtensionEvent>());\n\treadonly onInstallExtension: Event<InstallExtensionEvent> = this._onInstallExtension.event;\n\n\tprivate readonly _onDidInstallExtension = this._register(new Emitter<DidInstallExtensionEvent>());\n\treadonly onDidInstallExtension: Event<DidInstallExtensionEvent> = this._onDidInstallExtension.event;\n\n\tprivate readonly _onUninstallExtension = this._register(new Emitter<IExtensionIdentifier>());\n\treadonly onUninstallExtension: Event<IExtensionIdentifier> = this._onUninstallExtension.event;\n\n\tprivate _onDidUninstallExtension = this._register(new Emitter<DidUninstallExtensionEvent>());\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent> = this._onDidUninstallExtension.event;\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@optional(IDownloadService) private downloadService: IDownloadService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tconst extensionLifecycle = this._register(instantiationService.createInstance(ExtensionsLifecycle));\n\t\tthis.extensionsScanner = this._register(instantiationService.createInstance(ExtensionsScanner, extension => extensionLifecycle.postUninstall(extension)));\n\t\tthis.manifestCache = this._register(new ExtensionsManifestCache(environmentService, this));\n\t\tthis.extensionsDownloader = this._register(instantiationService.createInstance(ExtensionsDownloader));\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.installingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.uninstallingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.installingExtensions.clear();\n\t\t\tthis.uninstallingExtensions.clear();\n\t\t}));\n\t}\n\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\tthis.logService.trace('ExtensionManagementService#zip', extension.identifier.id);\n\t\treturn this.collectFiles(extension)\n\t\t\t.then(files => zip(path.join(tmpdir(), generateUuid()), files))\n\t\t\t.then<URI>(path => URI.file(path));\n\t}\n\n\tunzip(zipLocation: URI): Promise<IExtensionIdentifier> {\n\t\tthis.logService.trace('ExtensionManagementService#unzip', zipLocation.toString());\n\t\treturn this.install(zipLocation).then(local => local.identifier);\n\t}\n\n\tasync getManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\tconst downloadLocation = await this.downloadVsix(vsix);\n\t\tconst zipPath = path.resolve(downloadLocation.fsPath);\n\t\treturn getManifest(zipPath);\n\t}\n\n\tprivate collectFiles(extension: ILocalExtension): Promise<IFile[]> {\n\n\t\tconst collectFilesFromDirectory = async (dir: string): Promise<string[]> => {\n\t\t\tlet entries = await pfs.readdir(dir);\n\t\t\tentries = entries.map(e => path.join(dir, e));\n\t\t\tconst stats = await Promise.all(entries.map(e => pfs.stat(e)));\n\t\t\tlet promise: Promise<string[]> = Promise.resolve([]);\n\t\t\tstats.forEach((stat, index) => {\n\t\t\t\tconst entry = entries[index];\n\t\t\t\tif (stat.isFile()) {\n\t\t\t\t\tpromise = promise.then(result => ([...result, entry]));\n\t\t\t\t}\n\t\t\t\tif (stat.isDirectory()) {\n\t\t\t\t\tpromise = promise\n\t\t\t\t\t\t.then(result => collectFilesFromDirectory(entry)\n\t\t\t\t\t\t\t.then(files => ([...result, ...files])));\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\treturn collectFilesFromDirectory(extension.location.fsPath)\n\t\t\t.then(files => files.map(f => (<IFile>{ path: `extension/${path.relative(extension.location.fsPath, f)}`, localPath: f })));\n\n\t}\n\n\tinstall(vsix: URI, isMachineScoped?: boolean): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#install', vsix.toString());\n\t\treturn createCancelablePromise(token => {\n\t\t\treturn this.downloadVsix(vsix).then(downloadLocation => {\n\t\t\t\tconst zipPath = path.resolve(downloadLocation.fsPath);\n\n\t\t\t\treturn getManifest(zipPath)\n\t\t\t\t\t.then(manifest => {\n\t\t\t\t\t\tconst identifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\t\t\t\t\tlet operation: InstallOperation = InstallOperation.Install;\n\t\t\t\t\t\tif (manifest.engines && manifest.engines.vscode && !isEngineValid(manifest.engines.vscode, product.version)) {\n\t\t\t\t\t\t\treturn Promise.reject(new Error(nls.localize('incompatible', \"Unable to install extension '{0}' as it is not compatible with VS Code '{1}'.\", identifier.id, product.version)));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst identifierWithVersion = new ExtensionIdentifierWithVersion(identifier, manifest.version);\n\t\t\t\t\t\treturn this.getInstalled(ExtensionType.User)\n\t\t\t\t\t\t\t.then(installedExtensions => {\n\t\t\t\t\t\t\t\tconst existing = installedExtensions.filter(i => areSameExtensions(identifier, i.identifier))[0];\n\t\t\t\t\t\t\t\tif (existing) {\n\t\t\t\t\t\t\t\t\tisMachineScoped = isMachineScoped || existing.isMachineScoped;\n\t\t\t\t\t\t\t\t\toperation = InstallOperation.Update;\n\t\t\t\t\t\t\t\t\tif (identifierWithVersion.equals(new ExtensionIdentifierWithVersion(existing.identifier, existing.manifest.version))) {\n\t\t\t\t\t\t\t\t\t\treturn this.extensionsScanner.removeExtension(existing, 'existing').then(null, e => Promise.reject(new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", manifest.displayName || manifest.name))));\n\t\t\t\t\t\t\t\t\t} else if (semver.gt(existing.manifest.version, manifest.version)) {\n\t\t\t\t\t\t\t\t\t\treturn this.uninstallExtension(existing);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// Remove the extension with same version if it is already uninstalled.\n\t\t\t\t\t\t\t\t\t// Installing a VSIX extension shall replace the existing extension always.\n\t\t\t\t\t\t\t\t\treturn this.unsetUninstalledAndGetLocal(identifierWithVersion)\n\t\t\t\t\t\t\t\t\t\t.then(existing => {\n\t\t\t\t\t\t\t\t\t\t\tif (existing) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn this.extensionsScanner.removeExtension(existing, 'existing').then(null, e => Promise.reject(new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", manifest.displayName || manifest.name))));\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\tthis.logService.info('Installing the extension:', identifier.id);\n\t\t\t\t\t\t\t\tthis._onInstallExtension.fire({ identifier, zipPath });\n\t\t\t\t\t\t\t\treturn this.getGalleryMetadata(getGalleryExtensionId(manifest.publisher, manifest.name))\n\t\t\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t\t\tmetadata => this.installFromZipPath(identifierWithVersion, zipPath, { ...metadata, isMachineScoped }, operation, token),\n\t\t\t\t\t\t\t\t\t\t() => this.installFromZipPath(identifierWithVersion, zipPath, isMachineScoped ? { isMachineScoped } : undefined, operation, token))\n\t\t\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t\t\tlocal => { this.logService.info('Successfully installed the extension:', identifier.id); return local; },\n\t\t\t\t\t\t\t\t\t\te => {\n\t\t\t\t\t\t\t\t\t\t\tthis.logService.error('Failed to install the extension:', identifier.id, e.message);\n\t\t\t\t\t\t\t\t\t\t\treturn Promise.reject(e);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate downloadVsix(vsix: URI): Promise<URI> {\n\t\tif (vsix.scheme === Schemas.file) {\n\t\t\treturn Promise.resolve(vsix);\n\t\t}\n\t\tif (!this.downloadService) {\n\t\t\tthrow new Error('Download service is not available');\n\t\t}\n\t\tconst downloadedLocation = path.join(tmpdir(), generateUuid());\n\t\treturn this.downloadService.download(vsix, URI.file(downloadedLocation)).then(() => URI.file(downloadedLocation));\n\t}\n\n\tprivate installFromZipPath(identifierWithVersion: ExtensionIdentifierWithVersion, zipPath: string, metadata: IMetadata | undefined, operation: InstallOperation, token: CancellationToken): Promise<ILocalExtension> {\n\t\treturn this.toNonCancellablePromise(this.installExtension({ zipPath, identifierWithVersion, metadata }, token)\n\t\t\t.then(local => this.installDependenciesAndPackExtensions(local, undefined)\n\t\t\t\t.then(\n\t\t\t\t\t() => local,\n\t\t\t\t\terror => {\n\t\t\t\t\t\tif (isNonEmptyArray(local.manifest.extensionDependencies)) {\n\t\t\t\t\t\t\tthis.logService.warn(`Cannot install dependencies of extension:`, local.identifier.id, error.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (isNonEmptyArray(local.manifest.extensionPack)) {\n\t\t\t\t\t\t\tthis.logService.warn(`Cannot install packed extensions of extension:`, local.identifier.id, error.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn local;\n\t\t\t\t\t}))\n\t\t\t.then(\n\t\t\t\tlocal => { this._onDidInstallExtension.fire({ identifier: identifierWithVersion.identifier, zipPath, local, operation }); return local; },\n\t\t\t\terror => { this._onDidInstallExtension.fire({ identifier: identifierWithVersion.identifier, zipPath, operation, error }); return Promise.reject(error); }\n\t\t\t));\n\t}\n\n\tasync installFromGallery(extension: IGalleryExtension, isMachineScoped?: boolean): Promise<ILocalExtension> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn Promise.reject(new Error(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\")));\n\t\t}\n\t\tconst startTime = new Date().getTime();\n\n\t\tconst onDidInstallExtensionSuccess = (extension: IGalleryExtension, operation: InstallOperation, local: ILocalExtension) => {\n\t\t\tthis.logService.info(`Extensions installed successfully:`, extension.identifier.id);\n\t\t\tthis._onDidInstallExtension.fire({ identifier: extension.identifier, gallery: extension, local, operation });\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(operation), getGalleryExtensionTelemetryData(extension), new Date().getTime() - startTime, undefined);\n\t\t};\n\n\t\tconst onDidInstallExtensionFailure = (extension: IGalleryExtension, operation: InstallOperation, error: Error) => {\n\t\t\tconst errorCode = error && (<ExtensionManagementError>error).code ? (<ExtensionManagementError>error).code : ERROR_UNKNOWN;\n\t\t\tthis.logService.error(`Failed to install extension:`, extension.identifier.id, error ? error.message : errorCode);\n\t\t\tthis._onDidInstallExtension.fire({ identifier: extension.identifier, gallery: extension, operation, error: errorCode });\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(operation), getGalleryExtensionTelemetryData(extension), new Date().getTime() - startTime, error);\n\t\t\tif (error instanceof Error) {\n\t\t\t\terror.name = errorCode;\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\textension = await this.checkAndGetCompatibleVersion(extension);\n\t\t} catch (error) {\n\t\t\tonDidInstallExtensionFailure(extension, InstallOperation.Install, error);\n\t\t\treturn Promise.reject(error);\n\t\t}\n\n\t\tconst key = new ExtensionIdentifierWithVersion(extension.identifier, extension.version).key();\n\t\tlet cancellablePromise = this.installingExtensions.get(key);\n\t\tif (!cancellablePromise) {\n\n\t\t\tthis.logService.info('Installing extension:', extension.identifier.id);\n\t\t\tthis._onInstallExtension.fire({ identifier: extension.identifier, gallery: extension });\n\n\t\t\tlet operation: InstallOperation = InstallOperation.Install;\n\t\t\tlet cancellationToken: CancellationToken, successCallback: (local: ILocalExtension) => void, errorCallback: (e?: any) => any | null;\n\t\t\tcancellablePromise = createCancelablePromise(token => { cancellationToken = token; return new Promise((c, e) => { successCallback = c; errorCallback = e; }); });\n\t\t\tthis.installingExtensions.set(key, cancellablePromise);\n\t\t\ttry {\n\t\t\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\t\t\tconst existingExtension = installed.find(i => areSameExtensions(i.identifier, extension.identifier));\n\t\t\t\tif (existingExtension) {\n\t\t\t\t\toperation = InstallOperation.Update;\n\t\t\t\t}\n\n\t\t\t\tthis.downloadInstallableExtension(extension, operation)\n\t\t\t\t\t.then(installableExtension => {\n\t\t\t\t\t\tinstallableExtension.metadata.isMachineScoped = isMachineScoped || existingExtension?.isMachineScoped;\n\t\t\t\t\t\treturn this.installExtension(installableExtension, cancellationToken)\n\t\t\t\t\t\t\t.then(local => this.extensionsDownloader.delete(URI.file(installableExtension.zipPath)).finally(() => { }).then(() => local));\n\t\t\t\t\t})\n\t\t\t\t\t.then(local => this.installDependenciesAndPackExtensions(local, existingExtension)\n\t\t\t\t\t\t.then(() => local, error => this.uninstall(local).then(() => Promise.reject(error), () => Promise.reject(error))))\n\t\t\t\t\t.then(\n\t\t\t\t\t\tasync local => {\n\t\t\t\t\t\t\tif (existingExtension && semver.neq(existingExtension.manifest.version, extension.version)) {\n\t\t\t\t\t\t\t\tawait this.setUninstalled(existingExtension);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.installingExtensions.delete(key);\n\t\t\t\t\t\t\tonDidInstallExtensionSuccess(extension, operation, local);\n\t\t\t\t\t\t\tsuccessCallback(local);\n\t\t\t\t\t\t},\n\t\t\t\t\t\terror => {\n\t\t\t\t\t\t\tthis.installingExtensions.delete(key);\n\t\t\t\t\t\t\tonDidInstallExtensionFailure(extension, operation, error);\n\t\t\t\t\t\t\terrorCallback(error);\n\t\t\t\t\t\t});\n\n\t\t\t} catch (error) {\n\t\t\t\tthis.installingExtensions.delete(key);\n\t\t\t\tonDidInstallExtensionFailure(extension, operation, error);\n\t\t\t\treturn Promise.reject(error);\n\t\t\t}\n\n\t\t}\n\n\t\treturn cancellablePromise;\n\t}\n\n\tprivate async checkAndGetCompatibleVersion(extension: IGalleryExtension): Promise<IGalleryExtension> {\n\t\tif (await this.isMalicious(extension)) {\n\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('malicious extension', \"Can't install extension since it was reported to be problematic.\"), INSTALL_ERROR_MALICIOUS));\n\t\t}\n\n\t\tconst compatibleExtension = await this.galleryService.getCompatibleExtension(extension);\n\n\t\tif (!compatibleExtension) {\n\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('notFoundCompatibleDependency', \"Unable to install '{0}' extension because it is not compatible with the current version of VS Code (version {1}).\", extension.identifier.id, product.version), INSTALL_ERROR_INCOMPATIBLE));\n\t\t}\n\n\t\treturn compatibleExtension;\n\t}\n\n\treinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#reinstallFromGallery', extension.identifier.id);\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn Promise.reject(new Error(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\")));\n\t\t}\n\t\treturn this.findGalleryExtension(extension)\n\t\t\t.then(galleryExtension => {\n\t\t\t\tif (galleryExtension) {\n\t\t\t\t\treturn this.setUninstalled(extension)\n\t\t\t\t\t\t.then(() => this.extensionsScanner.removeUninstalledExtension(extension)\n\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t() => this.installFromGallery(galleryExtension).then(),\n\t\t\t\t\t\t\t\te => Promise.reject(new Error(nls.localize('removeError', \"Error while removing the extension: {0}. Please Quit and Start VS Code before trying again.\", toErrorMessage(e))))));\n\t\t\t\t}\n\t\t\t\treturn Promise.reject(new Error(nls.localize('Not a Marketplace extension', \"Only Marketplace Extensions can be reinstalled\")));\n\t\t\t});\n\t}\n\n\tprivate getTelemetryEvent(operation: InstallOperation): string {\n\t\treturn operation === InstallOperation.Update ? 'extensionGallery:update' : 'extensionGallery:install';\n\t}\n\n\tprivate isMalicious(extension: IGalleryExtension): Promise<boolean> {\n\t\treturn this.getExtensionsReport()\n\t\t\t.then(report => getMaliciousExtensionsSet(report).has(extension.identifier.id));\n\t}\n\n\tprivate downloadInstallableExtension(extension: IGalleryExtension, operation: InstallOperation): Promise<Required<InstallableExtension>> {\n\t\tconst metadata = <IGalleryMetadata>{\n\t\t\tid: extension.identifier.uuid,\n\t\t\tpublisherId: extension.publisherId,\n\t\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\t};\n\n\t\tthis.logService.trace('Started downloading extension:', extension.identifier.id);\n\t\treturn this.extensionsDownloader.downloadExtension(extension, operation)\n\t\t\t.then(\n\t\t\t\tzip => {\n\t\t\t\t\tconst zipPath = zip.fsPath;\n\t\t\t\t\tthis.logService.info('Downloaded extension:', extension.identifier.id, zipPath);\n\t\t\t\t\treturn getManifest(zipPath)\n\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\tmanifest => (<Required<InstallableExtension>>{ zipPath, identifierWithVersion: new ExtensionIdentifierWithVersion(extension.identifier, manifest.version), metadata }),\n\t\t\t\t\t\t\terror => Promise.reject(new ExtensionManagementError(this.joinErrors(error).message, INSTALL_ERROR_VALIDATING))\n\t\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\terror => Promise.reject(new ExtensionManagementError(this.joinErrors(error).message, INSTALL_ERROR_DOWNLOADING)));\n\t}\n\n\tprivate installExtension(installableExtension: InstallableExtension, token: CancellationToken): Promise<ILocalExtension> {\n\t\treturn this.unsetUninstalledAndGetLocal(installableExtension.identifierWithVersion)\n\t\t\t.then(\n\t\t\t\tlocal => {\n\t\t\t\t\tif (local) {\n\t\t\t\t\t\treturn local;\n\t\t\t\t\t}\n\t\t\t\t\treturn this.extractAndInstall(installableExtension, token);\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\tif (isMacintosh) {\n\t\t\t\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('quitCode', \"Unable to install the extension. Please Quit and Start VS Code before reinstalling.\"), INSTALL_ERROR_UNSET_UNINSTALLED));\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.reject(new ExtensionManagementError(nls.localize('exitCode', \"Unable to install the extension. Please Exit and Start VS Code before reinstalling.\"), INSTALL_ERROR_UNSET_UNINSTALLED));\n\t\t\t\t});\n\t}\n\n\tprivate unsetUninstalledAndGetLocal(identifierWithVersion: ExtensionIdentifierWithVersion): Promise<ILocalExtension | null> {\n\t\treturn this.isUninstalled(identifierWithVersion)\n\t\t\t.then<ILocalExtension | null>(isUninstalled => {\n\t\t\t\tif (isUninstalled) {\n\t\t\t\t\tthis.logService.trace('Removing the extension from uninstalled list:', identifierWithVersion.identifier.id);\n\t\t\t\t\t// If the same version of extension is marked as uninstalled, remove it from there and return the local.\n\t\t\t\t\treturn this.unsetUninstalled(identifierWithVersion)\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\tthis.logService.info('Removed the extension from uninstalled list:', identifierWithVersion.identifier.id);\n\t\t\t\t\t\t\treturn this.getInstalled(ExtensionType.User);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then(installed => installed.filter(i => new ExtensionIdentifierWithVersion(i.identifier, i.manifest.version).equals(identifierWithVersion))[0]);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t});\n\t}\n\n\tprivate async extractAndInstall({ zipPath, identifierWithVersion, metadata }: InstallableExtension, token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst { identifier } = identifierWithVersion;\n\t\tlet local = await this.extensionsScanner.extractUserExtension(identifierWithVersion, zipPath, token);\n\t\tthis.logService.info('Installation completed.', identifier.id);\n\t\tif (metadata) {\n\t\t\tlocal = await this.extensionsScanner.saveMetadataForLocalExtension(local, metadata);\n\t\t}\n\t\treturn local;\n\t}\n\n\tprivate async installDependenciesAndPackExtensions(installed: ILocalExtension, existing: ILocalExtension | undefined): Promise<void> {\n\t\tif (this.galleryService.isEnabled()) {\n\t\t\tconst dependenciesAndPackExtensions: string[] = installed.manifest.extensionDependencies || [];\n\t\t\tif (installed.manifest.extensionPack) {\n\t\t\t\tfor (const extension of installed.manifest.extensionPack) {\n\t\t\t\t\t// add only those extensions which are new in currently installed extension\n\t\t\t\t\tif (!(existing && existing.manifest.extensionPack && existing.manifest.extensionPack.some(old => areSameExtensions({ id: old }, { id: extension })))) {\n\t\t\t\t\t\tif (dependenciesAndPackExtensions.every(e => !areSameExtensions({ id: e }, { id: extension }))) {\n\t\t\t\t\t\t\tdependenciesAndPackExtensions.push(extension);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (dependenciesAndPackExtensions.length) {\n\t\t\t\treturn this.getInstalled()\n\t\t\t\t\t.then(installed => {\n\t\t\t\t\t\t// filter out installed extensions\n\t\t\t\t\t\tconst names = dependenciesAndPackExtensions.filter(id => installed.every(({ identifier: galleryIdentifier }) => !areSameExtensions(galleryIdentifier, { id })));\n\t\t\t\t\t\tif (names.length) {\n\t\t\t\t\t\t\treturn this.galleryService.query({ names, pageSize: dependenciesAndPackExtensions.length }, CancellationToken.None)\n\t\t\t\t\t\t\t\t.then(galleryResult => {\n\t\t\t\t\t\t\t\t\tconst extensionsToInstall = galleryResult.firstPage;\n\t\t\t\t\t\t\t\t\treturn Promise.all(extensionsToInstall.map(e => this.installFromGallery(e)))\n\t\t\t\t\t\t\t\t\t\t.then(undefined, errors => this.rollback(extensionsToInstall).then(() => Promise.reject(errors), () => Promise.reject(errors)));\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tprivate rollback(extensions: IGalleryExtension[]): Promise<void> {\n\t\treturn this.getInstalled(ExtensionType.User)\n\t\t\t.then(installed =>\n\t\t\t\tPromise.all(installed.filter(local => extensions.some(galleryExtension => new ExtensionIdentifierWithVersion(local.identifier, local.manifest.version).equals(new ExtensionIdentifierWithVersion(galleryExtension.identifier, galleryExtension.version)))) // Check with version because we want to rollback the exact version\n\t\t\t\t\t.map(local => this.uninstall(local))))\n\t\t\t.then(() => undefined, () => undefined);\n\t}\n\n\tuninstall(extension: ILocalExtension): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#uninstall', extension.identifier.id);\n\t\treturn this.toNonCancellablePromise(this.getInstalled(ExtensionType.User)\n\t\t\t.then(installed => {\n\t\t\t\tconst extensionToUninstall = installed.filter(e => areSameExtensions(e.identifier, extension.identifier))[0];\n\t\t\t\tif (extensionToUninstall) {\n\t\t\t\t\treturn this.checkForDependenciesAndUninstall(extensionToUninstall, installed).then(undefined, error => Promise.reject(this.joinErrors(error)));\n\t\t\t\t} else {\n\t\t\t\t\treturn Promise.reject(new Error(nls.localize('notInstalled', \"Extension '{0}' is not installed.\", extension.manifest.displayName || extension.manifest.name)));\n\t\t\t\t}\n\t\t\t}));\n\t}\n\n\tasync updateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#updateMetadata', local.identifier.id);\n\t\tlocal = await this.extensionsScanner.saveMetadataForLocalExtension(local, { ...metadata, isMachineScoped: local.isMachineScoped });\n\t\tthis.manifestCache.invalidate();\n\t\treturn local;\n\t}\n\n\tprivate getGalleryMetadata(extensionName: string): Promise<IGalleryMetadata | undefined> {\n\t\treturn this.findGalleryExtensionByName(extensionName)\n\t\t\t.then(galleryExtension => galleryExtension ? <IGalleryMetadata>{ id: galleryExtension.identifier.uuid, publisherDisplayName: galleryExtension.publisherDisplayName, publisherId: galleryExtension.publisherId } : undefined);\n\t}\n\n\tprivate findGalleryExtension(local: ILocalExtension): Promise<IGalleryExtension> {\n\t\tif (local.identifier.uuid) {\n\t\t\treturn this.findGalleryExtensionById(local.identifier.uuid)\n\t\t\t\t.then(galleryExtension => galleryExtension ? galleryExtension : this.findGalleryExtensionByName(local.identifier.id));\n\t\t}\n\t\treturn this.findGalleryExtensionByName(local.identifier.id);\n\t}\n\n\tprivate findGalleryExtensionById(uuid: string): Promise<IGalleryExtension> {\n\t\treturn this.galleryService.query({ ids: [uuid], pageSize: 1 }, CancellationToken.None).then(galleryResult => galleryResult.firstPage[0]);\n\t}\n\n\tprivate findGalleryExtensionByName(name: string): Promise<IGalleryExtension> {\n\t\treturn this.galleryService.query({ names: [name], pageSize: 1 }, CancellationToken.None).then(galleryResult => galleryResult.firstPage[0]);\n\t}\n\n\tprivate joinErrors(errorOrErrors: (Error | string) | (Array<Error | string>)): Error {\n\t\tconst errors = Array.isArray(errorOrErrors) ? errorOrErrors : [errorOrErrors];\n\t\tif (errors.length === 1) {\n\t\t\treturn errors[0] instanceof Error ? <Error>errors[0] : new Error(<string>errors[0]);\n\t\t}\n\t\treturn errors.reduce<Error>((previousValue: Error, currentValue: Error | string) => {\n\t\t\treturn new Error(`${previousValue.message}${previousValue.message ? ',' : ''}${currentValue instanceof Error ? currentValue.message : currentValue}`);\n\t\t}, new Error(''));\n\t}\n\n\tprivate checkForDependenciesAndUninstall(extension: ILocalExtension, installed: ILocalExtension[]): Promise<void> {\n\t\treturn this.preUninstallExtension(extension)\n\t\t\t.then(() => {\n\t\t\t\tconst packedExtensions = this.getAllPackExtensionsToUninstall(extension, installed);\n\t\t\t\tif (packedExtensions.length) {\n\t\t\t\t\treturn this.uninstallExtensions(extension, packedExtensions, installed);\n\t\t\t\t}\n\t\t\t\treturn this.uninstallExtensions(extension, [], installed);\n\t\t\t})\n\t\t\t.then(() => this.postUninstallExtension(extension),\n\t\t\t\terror => {\n\t\t\t\t\tthis.postUninstallExtension(extension, new ExtensionManagementError(error instanceof Error ? error.message : error, INSTALL_ERROR_LOCAL));\n\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t});\n\t}\n\n\tprivate uninstallExtensions(extension: ILocalExtension, otherExtensionsToUninstall: ILocalExtension[], installed: ILocalExtension[]): Promise<void> {\n\t\tconst dependents = this.getDependents(extension, installed);\n\t\tif (dependents.length) {\n\t\t\tconst remainingDependents = dependents.filter(dependent => extension !== dependent && otherExtensionsToUninstall.indexOf(dependent) === -1);\n\t\t\tif (remainingDependents.length) {\n\t\t\t\treturn Promise.reject(new Error(this.getDependentsErrorMessage(extension, remainingDependents)));\n\t\t\t}\n\t\t}\n\t\treturn Promise.all([this.uninstallExtension(extension), ...otherExtensionsToUninstall.map(d => this.doUninstall(d))]).then(() => undefined);\n\t}\n\n\tprivate getDependentsErrorMessage(extension: ILocalExtension, dependents: ILocalExtension[]): string {\n\t\tif (dependents.length === 1) {\n\t\t\treturn nls.localize('singleDependentError', \"Cannot uninstall extension '{0}'. Extension '{1}' depends on this.\",\n\t\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t}\n\t\tif (dependents.length === 2) {\n\t\t\treturn nls.localize('twoDependentsError', \"Cannot uninstall extension '{0}'. Extensions '{1}' and '{2}' depend on this.\",\n\t\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\treturn nls.localize('multipleDependentsError', \"Cannot uninstall extension '{0}'. Extensions '{1}', '{2}' and others depend on this.\",\n\t\t\textension.manifest.displayName || extension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t}\n\n\tprivate getAllPackExtensionsToUninstall(extension: ILocalExtension, installed: ILocalExtension[], checked: ILocalExtension[] = []): ILocalExtension[] {\n\t\tif (checked.indexOf(extension) !== -1) {\n\t\t\treturn [];\n\t\t}\n\t\tchecked.push(extension);\n\t\tconst extensionsPack = extension.manifest.extensionPack ? extension.manifest.extensionPack : [];\n\t\tif (extensionsPack.length) {\n\t\t\tconst packedExtensions = installed.filter(i => extensionsPack.some(id => areSameExtensions({ id }, i.identifier)));\n\t\t\tconst packOfPackedExtensions: ILocalExtension[] = [];\n\t\t\tfor (const packedExtension of packedExtensions) {\n\t\t\t\tpackOfPackedExtensions.push(...this.getAllPackExtensionsToUninstall(packedExtension, installed, checked));\n\t\t\t}\n\t\t\treturn [...packedExtensions, ...packOfPackedExtensions];\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate getDependents(extension: ILocalExtension, installed: ILocalExtension[]): ILocalExtension[] {\n\t\treturn installed.filter(e => e.manifest.extensionDependencies && e.manifest.extensionDependencies.some(id => areSameExtensions({ id }, extension.identifier)));\n\t}\n\n\tprivate doUninstall(extension: ILocalExtension): Promise<void> {\n\t\treturn this.preUninstallExtension(extension)\n\t\t\t.then(() => this.uninstallExtension(extension))\n\t\t\t.then(() => this.postUninstallExtension(extension),\n\t\t\t\terror => {\n\t\t\t\t\tthis.postUninstallExtension(extension, new ExtensionManagementError(error instanceof Error ? error.message : error, INSTALL_ERROR_LOCAL));\n\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t});\n\t}\n\n\tprivate preUninstallExtension(extension: ILocalExtension): Promise<void> {\n\t\treturn Promise.resolve(pfs.exists(extension.location.fsPath))\n\t\t\t.then(exists => exists ? null : Promise.reject(new Error(nls.localize('notExists', \"Could not find extension\"))))\n\t\t\t.then(() => {\n\t\t\t\tthis.logService.info('Uninstalling extension:', extension.identifier.id);\n\t\t\t\tthis._onUninstallExtension.fire(extension.identifier);\n\t\t\t});\n\t}\n\n\tprivate uninstallExtension(local: ILocalExtension): Promise<void> {\n\t\tlet promise = this.uninstallingExtensions.get(local.identifier.id);\n\t\tif (!promise) {\n\t\t\t// Set all versions of the extension as uninstalled\n\t\t\tpromise = createCancelablePromise(token => this.extensionsScanner.scanUserExtensions(false)\n\t\t\t\t.then(userExtensions => this.setUninstalled(...userExtensions.filter(u => areSameExtensions(u.identifier, local.identifier))))\n\t\t\t\t.then(() => { this.uninstallingExtensions.delete(local.identifier.id); }));\n\t\t\tthis.uninstallingExtensions.set(local.identifier.id, promise);\n\t\t}\n\t\treturn promise;\n\t}\n\n\tprivate async postUninstallExtension(extension: ILocalExtension, error?: Error): Promise<void> {\n\t\tif (error) {\n\t\t\tthis.logService.error('Failed to uninstall extension:', extension.identifier.id, error.message);\n\t\t} else {\n\t\t\tthis.logService.info('Successfully uninstalled extension:', extension.identifier.id);\n\t\t\t// only report if extension has a mapped gallery extension. UUID identifies the gallery extension.\n\t\t\tif (extension.identifier.uuid) {\n\t\t\t\tawait this.galleryService.reportStatistic(extension.manifest.publisher, extension.manifest.name, extension.manifest.version, StatisticType.Uninstall);\n\t\t\t}\n\t\t}\n\t\tthis.reportTelemetry('extensionGallery:uninstall', getLocalExtensionTelemetryData(extension), undefined, error);\n\t\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ERROR_UNKNOWN : undefined;\n\t\tthis._onDidUninstallExtension.fire({ identifier: extension.identifier, error: errorcode });\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null): Promise<ILocalExtension[]> {\n\t\treturn this.extensionsScanner.scanExtensions(type);\n\t}\n\n\tremoveDeprecatedExtensions(): Promise<void> {\n\t\treturn this.extensionsScanner.cleanUp();\n\t}\n\n\tprivate isUninstalled(identifier: ExtensionIdentifierWithVersion): Promise<boolean> {\n\t\treturn this.filterUninstalled(identifier).then(uninstalled => uninstalled.length === 1);\n\t}\n\n\tprivate filterUninstalled(...identifiers: ExtensionIdentifierWithVersion[]): Promise<string[]> {\n\t\treturn this.extensionsScanner.withUninstalledExtensions(allUninstalled => {\n\t\t\tconst uninstalled: string[] = [];\n\t\t\tfor (const identifier of identifiers) {\n\t\t\t\tif (!!allUninstalled[identifier.key()]) {\n\t\t\t\t\tuninstalled.push(identifier.key());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn uninstalled;\n\t\t});\n\t}\n\n\tprivate setUninstalled(...extensions: ILocalExtension[]): Promise<{ [id: string]: boolean }> {\n\t\tconst ids: ExtensionIdentifierWithVersion[] = extensions.map(e => new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version));\n\t\treturn this.extensionsScanner.withUninstalledExtensions(uninstalled => assign(uninstalled, ids.reduce((result, id) => { result[id.key()] = true; return result; }, {} as { [id: string]: boolean })));\n\t}\n\n\tprivate unsetUninstalled(extensionIdentifier: ExtensionIdentifierWithVersion): Promise<void> {\n\t\treturn this.extensionsScanner.withUninstalledExtensions<void>(uninstalled => delete uninstalled[extensionIdentifier.key()]);\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\tconst now = new Date().getTime();\n\n\t\tif (!this.reportedExtensions || now - this.lastReportTimestamp > 1000 * 60 * 5) { // 5 minute cache freshness\n\t\t\tthis.reportedExtensions = this.updateReportCache();\n\t\t\tthis.lastReportTimestamp = now;\n\t\t}\n\n\t\treturn this.reportedExtensions;\n\t}\n\n\tprivate updateReportCache(): Promise<IReportedExtension[]> {\n\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache');\n\n\t\treturn this.galleryService.getExtensionsReport()\n\t\t\t.then(result => {\n\t\t\t\tthis.logService.trace(`ExtensionManagementService.refreshReportedCache - got ${result.length} reported extensions from service`);\n\t\t\t\treturn result;\n\t\t\t}, err => {\n\t\t\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache - failed to get extension report');\n\t\t\t\treturn [];\n\t\t\t});\n\t}\n\n\tprivate toNonCancellablePromise<T>(promise: Promise<T>): Promise<T> {\n\t\treturn new Promise((c, e) => promise.then(result => c(result), error => e(error)));\n\t}\n\n\tprivate reportTelemetry(eventName: string, extensionData: any, duration?: number, error?: Error): void {\n\t\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ERROR_UNKNOWN : undefined;\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:install\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"recommendationReason\": { \"retiredFromVersion\": \"1.23.0\", \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:uninstall\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:update\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLogError(eventName, assign(extensionData, { success: !error, duration, errorcode }));\n\t}\n}\n","import * as fs from 'fs';\nimport * as path from 'path';\nimport * as tarStream from 'tar-stream';\nimport * as util from 'util';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { mkdirp } from 'vs/base/node/pfs';\nimport * as vszip from 'vs/base/node/zip';\nimport * as nls from 'vs/nls';\nimport product from 'vs/platform/product/common/product';\n\n// We will be overriding these, so keep a reference to the original.\nconst vszipExtract = vszip.extract;\nconst vszipBuffer = vszip.buffer;\n\nexport interface IExtractOptions {\n\toverwrite?: boolean;\n\t/**\n\t * Source path within the TAR/ZIP archive. Only the files\n\t * contained in this path will be extracted.\n\t */\n\tsourcePath?: string;\n}\n\nexport interface IFile {\n\tpath: string;\n\tcontents?: Buffer | string;\n\tlocalPath?: string;\n}\n\nexport const tar = async (tarPath: string, files: IFile[]): Promise<string> => {\n\tconst pack = tarStream.pack();\n\tconst chunks: Buffer[] = [];\n\tconst ended = new Promise<Buffer>((resolve) => {\n\t\tpack.on('end', () => resolve(Buffer.concat(chunks)));\n\t});\n\tpack.on('data', (chunk: Buffer) => chunks.push(chunk));\n\tfor (let i = 0; i < files.length; i++) {\n\t\tconst file = files[i];\n\t\tpack.entry({ name: file.path }, file.contents);\n\t}\n\tpack.finalize();\n\tawait util.promisify(fs.writeFile)(tarPath, await ended);\n\treturn tarPath;\n};\n\nexport const extract = async (archivePath: string, extractPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> => {\n\ttry {\n\t\tawait extractTar(archivePath, extractPath, options, token);\n\t} catch (error) {\n\t\tif (error.toString().includes('Invalid tar header')) {\n\t\t\tawait vszipExtract(archivePath, extractPath, options, token);\n\t\t}\n\t}\n};\n\nexport const buffer = (targetPath: string, filePath: string): Promise<Buffer> => {\n\treturn new Promise<Buffer>(async (resolve, reject) => {\n\t\ttry {\n\t\t\tlet done: boolean = false;\n\t\t\tawait extractAssets(targetPath, new RegExp(filePath), (assetPath: string, data: Buffer) => {\n\t\t\t\tif (path.normalize(assetPath) === path.normalize(filePath)) {\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(data);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!done) {\n\t\t\t\tthrow new Error('couldn\\'t find asset ' + filePath);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error.toString().includes('Invalid tar header')) {\n\t\t\t\tvszipBuffer(targetPath, filePath).then(resolve).catch(reject);\n\t\t\t} else {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t}\n\t});\n};\n\nconst extractAssets = async (tarPath: string, match: RegExp, callback: (path: string, data: Buffer) => void): Promise<void> => {\n\treturn new Promise<void>((resolve, reject): void => {\n\t\tconst extractor = tarStream.extract();\n\t\tconst fail = (error: Error) => {\n\t\t\textractor.destroy();\n\t\t\treject(error);\n\t\t};\n\t\textractor.once('error', fail);\n\t\textractor.on('entry', async (header, stream, next) => {\n\t\t\tconst name = header.name;\n\t\t\tif (match.test(name)) {\n\t\t\t\textractData(stream).then((data) => {\n\t\t\t\t\tcallback(name, data);\n\t\t\t\t\tnext();\n\t\t\t\t}).catch(fail);\n\t\t\t} else {\n\t\t\t\tstream.on('end', () => next());\n\t\t\t\tstream.resume(); // Just drain it.\n\t\t\t}\n\t\t});\n\t\textractor.on('finish', resolve);\n\t\tfs.createReadStream(tarPath).pipe(extractor);\n\t});\n};\n\nconst extractData = (stream: NodeJS.ReadableStream): Promise<Buffer> => {\n\treturn new Promise((resolve, reject): void => {\n\t\tconst fileData: Buffer[] = [];\n\t\tstream.on('error', reject);\n\t\tstream.on('end', () => resolve(Buffer.concat(fileData)));\n\t\tstream.on('data', (data) => fileData.push(data));\n\t});\n};\n\nconst extractTar = async (tarPath: string, targetPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> => {\n\treturn new Promise<void>((resolve, reject): void => {\n\t\tconst sourcePathRegex = new RegExp(options.sourcePath ? `^${options.sourcePath}` : '');\n\t\tconst extractor = tarStream.extract();\n\t\tconst fail = (error: Error) => {\n\t\t\textractor.destroy();\n\t\t\treject(error);\n\t\t};\n\t\textractor.once('error', fail);\n\t\textractor.on('entry', async (header, stream, next) => {\n\t\t\tconst nextEntry = (): void => {\n\t\t\t\tstream.on('end', () => next());\n\t\t\t\tstream.resume();\n\t\t\t};\n\n\t\t\tconst rawName = path.normalize(header.name);\n\t\t\tif (token.isCancellationRequested || !sourcePathRegex.test(rawName)) {\n\t\t\t\treturn nextEntry();\n\t\t\t}\n\n\t\t\tconst fileName = rawName.replace(sourcePathRegex, '');\n\t\t\tconst targetFileName = path.join(targetPath, fileName);\n\t\t\tif (/\\/$/.test(fileName)) {\n\t\t\t\treturn mkdirp(targetFileName).then(nextEntry);\n\t\t\t}\n\n\t\t\tconst dirName = path.dirname(fileName);\n\t\t\tconst targetDirName = path.join(targetPath, dirName);\n\t\t\tif (targetDirName.indexOf(targetPath) !== 0) {\n\t\t\t\treturn fail(new Error(nls.localize('invalid file', 'Error extracting {0}. Invalid file.', fileName)));\n\t\t\t}\n\n\t\t\tawait mkdirp(targetDirName, undefined);\n\n\t\t\tconst fstream = fs.createWriteStream(targetFileName, { mode: header.mode });\n\t\t\tfstream.once('close', () => next());\n\t\t\tfstream.once('error', fail);\n\t\t\tstream.pipe(fstream);\n\t\t});\n\t\textractor.once('finish', resolve);\n\t\tfs.createReadStream(tarPath).pipe(extractor);\n\t});\n};\n\n/**\n * Override original functionality so we can use a custom marketplace with\n * either tars or zips.\n */\nexport const enableCustomMarketplace = (): void => {\n\t(<any>product).extensionsGallery = { // Use `any` to override readonly.\n\t\tserviceUrl: process.env.SERVICE_URL || 'https://extensions.coder.com/api',\n\t\titemUrl: process.env.ITEM_URL || '',\n\t\tcontrolUrl: '',\n\t\trecommendationsUrl: '',\n\t\t...(product.extensionsGallery || {}),\n\t};\n\n\tconst target = vszip as typeof vszip;\n\ttarget.zip = tar;\n\ttarget.extract = extract;\n\ttarget.buffer = buffer;\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as https from 'https';\nimport * as http from 'http';\nimport * as streams from 'vs/base/common/stream';\nimport { createGunzip } from 'zlib';\nimport { parse as parseUrl } from 'url';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { assign } from 'vs/base/common/objects';\nimport { isBoolean, isNumber } from 'vs/base/common/types';\nimport { canceled } from 'vs/base/common/errors';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IRequestService, IHTTPConfiguration } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext } from 'vs/base/parts/request/common/request';\nimport { getProxyAgent, Agent } from 'vs/platform/request/node/proxy';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { streamToBufferReadableStream } from 'vs/base/common/buffer';\n\nexport interface IRawRequestFunction {\n\t(options: http.RequestOptions, callback?: (res: http.IncomingMessage) => void): http.ClientRequest;\n}\n\nexport interface NodeRequestOptions extends IRequestOptions {\n\tagent?: Agent;\n\tstrictSSL?: boolean;\n\tgetRawRequest?(options: IRequestOptions): IRawRequestFunction;\n}\n\n/**\n * This service exposes the `request` API, while using the global\n * or configured proxy settings.\n */\nexport class RequestService extends Disposable implements IRequestService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate proxyUrl?: string;\n\tprivate strictSSL: boolean | undefined;\n\tprivate authorization?: string;\n\n\tconstructor(\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.configure(configurationService.getValue<IHTTPConfiguration>());\n\t\tthis._register(configurationService.onDidChangeConfiguration(() => this.configure(configurationService.getValue()), this));\n\t}\n\n\tprivate configure(config: IHTTPConfiguration) {\n\t\tthis.proxyUrl = config.http && config.http.proxy;\n\t\tthis.strictSSL = !!(config.http && config.http.proxyStrictSSL);\n\t\tthis.authorization = config.http && config.http.proxyAuthorization;\n\t}\n\n\tasync request(options: NodeRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tthis.logService.trace('RequestService#request', options.url);\n\n\t\tconst { proxyUrl, strictSSL } = this;\n\t\tconst agent = options.agent ? options.agent : await getProxyAgent(options.url || '', { proxyUrl, strictSSL });\n\n\t\toptions.agent = agent;\n\t\toptions.strictSSL = strictSSL;\n\n\t\tif (this.authorization) {\n\t\t\toptions.headers = assign(options.headers || {}, { 'Proxy-Authorization': this.authorization });\n\t\t}\n\n\t\treturn this._request(options, token);\n\t}\n\n\tprivate async getNodeRequest(options: IRequestOptions): Promise<IRawRequestFunction> {\n\t\tconst endpoint = parseUrl(options.url!);\n\t\tconst module = endpoint.protocol === 'https:' ? await import('https') : await import('http');\n\t\treturn module.request;\n\t}\n\n\tprivate _request(options: NodeRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\n\t\treturn new Promise<IRequestContext>(async (c, e) => {\n\t\t\tlet req: http.ClientRequest;\n\n\t\t\tconst endpoint = parseUrl(options.url!);\n\t\t\tconst rawRequest = options.getRawRequest\n\t\t\t\t? options.getRawRequest(options)\n\t\t\t\t: await this.getNodeRequest(options);\n\n\t\t\tconst opts: https.RequestOptions = {\n\t\t\t\thostname: endpoint.hostname,\n\t\t\t\tport: endpoint.port ? parseInt(endpoint.port) : (endpoint.protocol === 'https:' ? 443 : 80),\n\t\t\t\tprotocol: endpoint.protocol,\n\t\t\t\tpath: endpoint.path,\n\t\t\t\tmethod: options.type || 'GET',\n\t\t\t\theaders: options.headers,\n\t\t\t\tagent: options.agent,\n\t\t\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true\n\t\t\t};\n\n\t\t\tif (options.user && options.password) {\n\t\t\t\topts.auth = options.user + ':' + options.password;\n\t\t\t}\n\n\t\t\treq = rawRequest(opts, (res: http.IncomingMessage) => {\n\t\t\t\tconst followRedirects: number = isNumber(options.followRedirects) ? options.followRedirects : 3;\n\t\t\t\tif (res.statusCode && res.statusCode >= 300 && res.statusCode < 400 && followRedirects > 0 && res.headers['location']) {\n\t\t\t\t\tthis._request(assign({}, options, {\n\t\t\t\t\t\turl: res.headers['location'],\n\t\t\t\t\t\tfollowRedirects: followRedirects - 1\n\t\t\t\t\t}), token).then(c, e);\n\t\t\t\t} else {\n\t\t\t\t\tlet stream: streams.ReadableStreamEvents<Uint8Array> = res;\n\n\t\t\t\t\tif (res.headers['content-encoding'] === 'gzip') {\n\t\t\t\t\t\tstream = res.pipe(createGunzip());\n\t\t\t\t\t}\n\n\t\t\t\t\tc({ res, stream: streamToBufferReadableStream(stream) } as IRequestContext);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treq.on('error', e);\n\n\t\t\tif (options.timeout) {\n\t\t\t\treq.setTimeout(options.timeout);\n\t\t\t}\n\n\t\t\tif (options.data) {\n\t\t\t\tif (typeof options.data === 'string') {\n\t\t\t\t\treq.write(options.data);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treq.end();\n\n\t\t\ttoken.onCancellationRequested(() => {\n\t\t\t\treq.abort();\n\t\t\t\te(canceled());\n\t\t\t});\n\t\t});\n\t}\n\n\tasync resolveProxy(url: string): Promise<string | undefined> {\n\t\treturn undefined; // currently not implemented in node\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { raceTimeout } from 'vs/base/common/async';\nimport product from 'vs/platform/product/common/product';\nimport * as path from 'vs/base/common/path';\nimport * as semver from 'semver-umd';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ParsedArgs } from 'vs/platform/environment/node/argv';\nimport { EnvironmentService, INativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { IExtensionManagementService, IExtensionGalleryService, IGalleryExtension, ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { ExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { combinedAppender, NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { TelemetryService, ITelemetryServiceConfig } from 'vs/platform/telemetry/common/telemetryService';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/node/commonProperties';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { RequestService } from 'vs/platform/request/node/requestService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationService } from 'vs/platform/configuration/common/configurationService';\nimport { AppInsightsAppender } from 'vs/platform/telemetry/node/appInsightsAppender';\nimport { mkdirp, writeFile } from 'vs/base/node/pfs';\nimport { getBaseLabel } from 'vs/base/common/labels';\nimport { IStateService } from 'vs/platform/state/node/state';\nimport { StateService } from 'vs/platform/state/node/stateService';\nimport { ILogService, getLogLevel } from 'vs/platform/log/common/log';\nimport { isPromiseCanceledError } from 'vs/base/common/errors';\nimport { areSameExtensions, adoptToGalleryExtensionId, getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { URI } from 'vs/base/common/uri';\nimport { getManifest } from 'vs/platform/extensionManagement/node/extensionManagementUtil';\nimport { IExtensionManifest, ExtensionType, isLanguagePackExtension, EXTENSION_CATEGORIES } from 'vs/platform/extensions/common/extensions';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { LocalizationsService } from 'vs/platform/localizations/node/localizations';\nimport { Schemas } from 'vs/base/common/network';\nimport { SpdLogService } from 'vs/platform/log/node/spdlogService';\nimport { buildTelemetryMessage } from 'vs/platform/telemetry/node/telemetry';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nconst notFound = (id: string) => localize('notFound', \"Extension '{0}' not found.\", id);\nconst notInstalled = (id: string) => localize('notInstalled', \"Extension '{0}' is not installed.\", id);\nconst useId = localize('useId', \"Make sure you use the full extension ID, including the publisher, e.g.: {0}\", 'ms-dotnettools.csharp');\n\nfunction getId(manifest: IExtensionManifest, withVersion?: boolean): string {\n\tif (withVersion) {\n\t\treturn `${manifest.publisher}.${manifest.name}@${manifest.version}`;\n\t} else {\n\t\treturn `${manifest.publisher}.${manifest.name}`;\n\t}\n}\n\nconst EXTENSION_ID_REGEX = /^([^.]+\\..+)@(\\d+\\.\\d+\\.\\d+(-.*)?)$/;\n\nexport function getIdAndVersion(id: string): [string, string | undefined] {\n\tconst matches = EXTENSION_ID_REGEX.exec(id);\n\tif (matches && matches[1]) {\n\t\treturn [adoptToGalleryExtensionId(matches[1]), matches[2]];\n\t}\n\treturn [adoptToGalleryExtensionId(id), undefined];\n}\n\n\nexport class Main {\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService\n\t) { }\n\n\tasync run(argv: ParsedArgs): Promise<void> {\n\t\tif (argv['install-source']) {\n\t\t\tawait this.setInstallSource(argv['install-source']);\n\t\t} else if (argv['list-extensions']) {\n\t\t\tawait this.listExtensions(!!argv['show-versions'], argv['category']);\n\t\t} else if (argv['install-extension']) {\n\t\t\tawait this.installExtensions(argv['install-extension'], !!argv['force'], !!argv['do-not-sync']);\n\t\t} else if (argv['uninstall-extension']) {\n\t\t\tawait this.uninstallExtension(argv['uninstall-extension']);\n\t\t} else if (argv['locate-extension']) {\n\t\t\tawait this.locateExtension(argv['locate-extension']);\n\t\t} else if (argv['telemetry']) {\n\t\t\tconsole.log(buildTelemetryMessage(this.environmentService.appRoot, this.environmentService.extensionsPath ? this.environmentService.extensionsPath : undefined));\n\t\t}\n\t}\n\n\tprivate setInstallSource(installSource: string): Promise<void> {\n\t\treturn writeFile(this.environmentService.installSourcePath, installSource.slice(0, 30));\n\t}\n\n\tprivate async listExtensions(showVersions: boolean, category?: string): Promise<void> {\n\t\tlet extensions = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\tconst categories = EXTENSION_CATEGORIES.map(c => c.toLowerCase());\n\t\tif (category && category !== '') {\n\t\t\tif (categories.indexOf(category.toLowerCase()) < 0) {\n\t\t\t\tconsole.log('Invalid category please enter a valid category. To list valid categories run --category without a category specified');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\textensions = extensions.filter(e => {\n\t\t\t\tif (e.manifest.categories) {\n\t\t\t\t\tconst lowerCaseCategories: string[] = e.manifest.categories.map(c => c.toLowerCase());\n\t\t\t\t\treturn lowerCaseCategories.indexOf(category.toLowerCase()) > -1;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t} else if (category === '') {\n\t\t\tconsole.log('Possible Categories: ');\n\t\t\tcategories.forEach(category => {\n\t\t\t\tconsole.log(category);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\textensions.forEach(e => console.log(getId(e.manifest, showVersions)));\n\t}\n\n\tprivate async installExtensions(extensions: string[], force: boolean, doNotSync: boolean): Promise<void> {\n\t\tconst failed: string[] = [];\n\t\tconst installedExtensionsManifests: IExtensionManifest[] = [];\n\t\tif (extensions.length) {\n\t\t\tconsole.log(localize('installingExtensions', \"Installing extensions...\"));\n\t\t}\n\n\t\tfor (const extension of extensions) {\n\t\t\ttry {\n\t\t\t\tconst manifest = await this.installExtension(extension, force, doNotSync);\n\t\t\t\tif (manifest) {\n\t\t\t\t\tinstalledExtensionsManifests.push(manifest);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(err.message || err.stack || err);\n\t\t\t\tfailed.push(extension);\n\t\t\t}\n\t\t}\n\t\tif (installedExtensionsManifests.some(manifest => isLanguagePackExtension(manifest))) {\n\t\t\tawait this.updateLocalizationsCache();\n\t\t}\n\t\treturn failed.length ? Promise.reject(localize('installation failed', \"Failed Installing Extensions: {0}\", failed.join(', '))) : Promise.resolve();\n\t}\n\n\tprivate async installExtension(extension: string, force: boolean, doNotSync: boolean): Promise<IExtensionManifest | null> {\n\t\tif (/\\.vsix$/i.test(extension)) {\n\t\t\textension = path.isAbsolute(extension) ? extension : path.join(process.cwd(), extension);\n\n\t\t\tconst manifest = await getManifest(extension);\n\t\t\tconst valid = await this.validate(manifest, force);\n\n\t\t\tif (valid) {\n\t\t\t\treturn this.extensionManagementService.install(URI.file(extension), doNotSync).then(id => {\n\t\t\t\t\tconsole.log(localize('successVsixInstall', \"Extension '{0}' was successfully installed.\", getBaseLabel(extension)));\n\t\t\t\t\treturn manifest;\n\t\t\t\t}, error => {\n\t\t\t\t\tif (isPromiseCanceledError(error)) {\n\t\t\t\t\t\tconsole.log(localize('cancelVsixInstall', \"Cancelled installing extension '{0}'.\", getBaseLabel(extension)));\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tconst [id, version] = getIdAndVersion(extension);\n\t\treturn this.extensionManagementService.getInstalled(ExtensionType.User)\n\t\t\t.then(installed => this.extensionGalleryService.getCompatibleExtension({ id }, version)\n\t\t\t\t.then<IGalleryExtension>(null, err => {\n\t\t\t\t\tif (err.responseText) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst response = JSON.parse(err.responseText);\n\t\t\t\t\t\t\treturn Promise.reject(response.message);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t// noop\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t})\n\t\t\t\t.then(async extension => {\n\t\t\t\t\tif (!extension) {\n\t\t\t\t\t\treturn Promise.reject(new Error(`${notFound(version ? `${id}@${version}` : id)}\\n${useId}`));\n\t\t\t\t\t}\n\n\t\t\t\t\tconst manifest = await this.extensionGalleryService.getManifest(extension, CancellationToken.None);\n\t\t\t\t\tconst [installedExtension] = installed.filter(e => areSameExtensions(e.identifier, { id }));\n\t\t\t\t\tif (installedExtension) {\n\t\t\t\t\t\tif (extension.version === installedExtension.manifest.version) {\n\t\t\t\t\t\t\tconsole.log(localize('alreadyInstalled', \"Extension '{0}' is already installed.\", version ? `${id}@${version}` : id));\n\t\t\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!version && !force) {\n\t\t\t\t\t\t\tconsole.log(localize('forceUpdate', \"Extension '{0}' v{1} is already installed, but a newer version {2} is available in the marketplace. Use '--force' option to update to newer version.\", id, installedExtension.manifest.version, extension.version));\n\t\t\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log(localize('updateMessage', \"Updating the extension '{0}' to the version {1}\", id, extension.version));\n\t\t\t\t\t}\n\t\t\t\t\tawait this.installFromGallery(id, extension, doNotSync);\n\t\t\t\t\treturn manifest;\n\t\t\t\t}));\n\t}\n\n\tprivate async validate(manifest: IExtensionManifest, force: boolean): Promise<boolean> {\n\t\tif (!manifest) {\n\t\t\tthrow new Error('Invalid vsix');\n\t\t}\n\n\t\tconst extensionIdentifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\tconst newer = installedExtensions.find(local => areSameExtensions(extensionIdentifier, local.identifier) && semver.gt(local.manifest.version, manifest.version));\n\n\t\tif (newer && !force) {\n\t\t\tconsole.log(localize('forceDowngrade', \"A newer version of extension '{0}' v{1} is already installed. Use '--force' option to downgrade to older version.\", newer.identifier.id, newer.manifest.version, manifest.version));\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async installFromGallery(id: string, extension: IGalleryExtension, doNotSync: boolean): Promise<void> {\n\t\tconsole.log(localize('installing', \"Installing extension '{0}' v{1}...\", id, extension.version));\n\n\t\ttry {\n\t\t\tawait this.extensionManagementService.installFromGallery(extension, doNotSync);\n\t\t\tconsole.log(localize('successInstall', \"Extension '{0}' v{1} was successfully installed.\", id, extension.version));\n\t\t} catch (error) {\n\t\t\tif (isPromiseCanceledError(error)) {\n\t\t\t\tconsole.log(localize('cancelVsixInstall', \"Cancelled installing extension '{0}'.\", id));\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async uninstallExtension(extensions: string[]): Promise<void> {\n\t\tasync function getExtensionId(extensionDescription: string): Promise<string> {\n\t\t\tif (!/\\.vsix$/i.test(extensionDescription)) {\n\t\t\t\treturn extensionDescription;\n\t\t\t}\n\n\t\t\tconst zipPath = path.isAbsolute(extensionDescription) ? extensionDescription : path.join(process.cwd(), extensionDescription);\n\t\t\tconst manifest = await getManifest(zipPath);\n\t\t\treturn getId(manifest);\n\t\t}\n\n\t\tconst uninstalledExtensions: ILocalExtension[] = [];\n\t\tfor (const extension of extensions) {\n\t\t\tconst id = await getExtensionId(extension);\n\t\t\tconst installed = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\t\tconst [extensionToUninstall] = installed.filter(e => areSameExtensions(e.identifier, { id }));\n\t\t\tif (!extensionToUninstall) {\n\t\t\t\treturn Promise.reject(new Error(`${notInstalled(id)}\\n${useId}`));\n\t\t\t}\n\t\t\tconsole.log(localize('uninstalling', \"Uninstalling {0}...\", id));\n\t\t\tawait this.extensionManagementService.uninstall(extensionToUninstall, true);\n\t\t\tuninstalledExtensions.push(extensionToUninstall);\n\t\t\tconsole.log(localize('successUninstall', \"Extension '{0}' was successfully uninstalled!\", id));\n\t\t}\n\n\t\tif (uninstalledExtensions.some(e => isLanguagePackExtension(e.manifest))) {\n\t\t\tawait this.updateLocalizationsCache();\n\t\t}\n\t}\n\n\tprivate async locateExtension(extensions: string[]): Promise<void> {\n\t\tconst installed = await this.extensionManagementService.getInstalled();\n\t\textensions.forEach(e => {\n\t\t\tinstalled.forEach(i => {\n\t\t\t\tif (i.identifier.id === e) {\n\t\t\t\t\tif (i.location.scheme === Schemas.file) {\n\t\t\t\t\t\tconsole.log(i.location.fsPath);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async updateLocalizationsCache(): Promise<void> {\n\t\tconst localizationService = this.instantiationService.createInstance(LocalizationsService);\n\t\tawait localizationService.update();\n\t\tlocalizationService.dispose();\n\t}\n}\n\nconst eventPrefix = 'monacoworkbench';\n\nexport async function main(argv: ParsedArgs): Promise<void> {\n\tconst services = new ServiceCollection();\n\tconst disposables = new DisposableStore();\n\n\tconst environmentService = new EnvironmentService(argv, process.execPath);\n\tconst logService: ILogService = new SpdLogService('cli', environmentService.logsPath, getLogLevel(environmentService));\n\tprocess.once('exit', () => logService.dispose());\n\tlogService.info('main', argv);\n\n\tawait Promise.all<void | undefined>([environmentService.appSettingsHome.fsPath, environmentService.extensionsPath]\n\t\t.map((path): undefined | Promise<void> => path ? mkdirp(path) : undefined));\n\n\t// Files\n\tconst fileService = new FileService(logService);\n\tdisposables.add(fileService);\n\tservices.set(IFileService, fileService);\n\n\tconst diskFileSystemProvider = new DiskFileSystemProvider(logService);\n\tdisposables.add(diskFileSystemProvider);\n\tfileService.registerProvider(Schemas.file, diskFileSystemProvider);\n\n\tconst configurationService = new ConfigurationService(environmentService.settingsResource, fileService);\n\tdisposables.add(configurationService);\n\tawait configurationService.initialize();\n\n\tservices.set(IEnvironmentService, environmentService);\n\tservices.set(ILogService, logService);\n\tservices.set(IConfigurationService, configurationService);\n\tservices.set(IStateService, new SyncDescriptor(StateService));\n\tservices.set(IProductService, { _serviceBrand: undefined, ...product });\n\n\tconst instantiationService: IInstantiationService = new InstantiationService(services);\n\n\treturn instantiationService.invokeFunction(async accessor => {\n\t\tconst stateService = accessor.get(IStateService);\n\n\t\tconst { appRoot, extensionsPath, extensionDevelopmentLocationURI, isBuilt, installSourcePath } = environmentService;\n\n\t\tconst services = new ServiceCollection();\n\t\tservices.set(IRequestService, new SyncDescriptor(RequestService));\n\t\tservices.set(IExtensionManagementService, new SyncDescriptor(ExtensionManagementService));\n\t\tservices.set(IExtensionGalleryService, new SyncDescriptor(ExtensionGalleryService));\n\n\t\tconst appenders: AppInsightsAppender[] = [];\n\t\tif (isBuilt && !extensionDevelopmentLocationURI && !environmentService.disableTelemetry && product.enableTelemetry) {\n\t\t\tif (product.aiConfig && product.aiConfig.asimovKey) {\n\t\t\t\tappenders.push(new AppInsightsAppender(eventPrefix, null, product.aiConfig.asimovKey, logService));\n\t\t\t}\n\n\t\t\tconst config: ITelemetryServiceConfig = {\n\t\t\t\tappender: combinedAppender(...appenders),\n\t\t\t\tsendErrorTelemetry: false,\n\t\t\t\tcommonProperties: resolveCommonProperties(product.commit, product.version, stateService.getItem('telemetry.machineId'), product.msftInternalDomains, installSourcePath),\n\t\t\t\tpiiPaths: extensionsPath ? [appRoot, extensionsPath] : [appRoot]\n\t\t\t};\n\n\t\t\tservices.set(ITelemetryService, new SyncDescriptor(TelemetryService, [config]));\n\n\t\t} else {\n\t\t\tservices.set(ITelemetryService, NullTelemetryService);\n\t\t}\n\n\t\tconst instantiationService2 = instantiationService.createChild(services);\n\t\tconst main = instantiationService2.createInstance(Main);\n\n\t\ttry {\n\t\t\tawait main.run(argv);\n\n\t\t\t// Flush the remaining data in AI adapter.\n\t\t\t// If it does not complete in 1 second, exit the process.\n\t\t\tawait raceTimeout(combinedAppender(...appenders).flush(), 1000);\n\t\t} finally {\n\t\t\tdisposables.dispose();\n\t\t}\n\t});\n}\n","import * as fs from 'fs';\nimport * as net from 'net';\nimport * as path from 'path';\nimport { Emitter } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { getMachineId } from 'vs/base/node/id';\nimport { ClientConnectionEvent, createChannelReceiver, IPCServer, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { LogsDataCleaner } from 'vs/code/electron-browser/sharedProcess/contrib/logsDataCleaner';\nimport { main } from \"vs/code/node/cliProcessMain\";\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationService } from 'vs/platform/configuration/common/configurationService';\nimport { ExtensionHostDebugBroadcastChannel } from 'vs/platform/debug/common/extensionHostDebugIpc';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ParsedArgs } from 'vs/platform/environment/node/argv';\nimport { EnvironmentService, INativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { ExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { IExtensionGalleryService, IExtensionManagementService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementChannel } from 'vs/platform/extensionManagement/common/extensionManagementIpc';\nimport { ExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { ILocalizationsService } from 'vs/platform/localizations/common/localizations';\nimport { LocalizationsService } from 'vs/platform/localizations/node/localizations';\nimport { getLogLevel, ILogService } from 'vs/platform/log/common/log';\nimport { LoggerChannel } from 'vs/platform/log/common/logIpc';\nimport { SpdLogService } from 'vs/platform/log/node/spdlogService';\nimport product from 'vs/platform/product/common/product';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ConnectionType, ConnectionTypeRequest } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { RequestChannel } from 'vs/platform/request/common/requestIpc';\nimport { RequestService } from 'vs/platform/request/node/requestService';\nimport ErrorTelemetry from 'vs/platform/telemetry/browser/errorTelemetry';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { TelemetryService } from 'vs/platform/telemetry/common/telemetryService';\nimport { combinedAppender, LogAppender, NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { AppInsightsAppender } from 'vs/platform/telemetry/node/appInsightsAppender';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/node/commonProperties';\nimport { INodeProxyService, NodeProxyChannel } from 'vs/server/common/nodeProxy';\nimport { TelemetryChannel } from 'vs/server/common/telemetry';\nimport { Query, VscodeOptions, WorkbenchOptions } from 'vs/server/ipc';\nimport { ExtensionEnvironmentChannel, FileProviderChannel, NodeProxyService } from 'vs/server/node/channel';\nimport { Connection, ExtensionHostConnection, ManagementConnection } from 'vs/server/node/connection';\nimport { TelemetryClient } from 'vs/server/node/insights';\nimport { logger } from 'vs/server/node/logger';\nimport { getLocaleFromConfig, getNlsConfiguration } from 'vs/server/node/nls';\nimport { Protocol } from 'vs/server/node/protocol';\nimport { getUriTransformer } from 'vs/server/node/util';\nimport { REMOTE_FILE_SYSTEM_CHANNEL_NAME } from \"vs/workbench/services/remote/common/remoteAgentFileSystemChannel\";\nimport { RemoteExtensionLogFileName } from 'vs/workbench/services/remote/common/remoteAgentService';\n\nexport class Vscode {\n\tpublic readonly _onDidClientConnect = new Emitter<ClientConnectionEvent>();\n\tpublic readonly onDidClientConnect = this._onDidClientConnect.event;\n\tprivate readonly ipc = new IPCServer<RemoteAgentConnectionContext>(this.onDidClientConnect);\n\n\tprivate readonly maxExtraOfflineConnections = 0;\n\tprivate readonly connections = new Map<ConnectionType, Map<string, Connection>>();\n\n\tprivate readonly services = new ServiceCollection();\n\tprivate servicesPromise?: Promise<void>;\n\n\tpublic async cli(args: ParsedArgs): Promise<void> {\n\t\treturn main(args);\n\t}\n\n\tpublic async initialize(options: VscodeOptions): Promise<WorkbenchOptions> {\n\t\tconst transformer = getUriTransformer(options.remoteAuthority);\n\t\tif (!this.servicesPromise) {\n\t\t\tthis.servicesPromise = this.initializeServices(options.args);\n\t\t}\n\t\tawait this.servicesPromise;\n\t\tconst environment = this.services.get(IEnvironmentService) as INativeEnvironmentService;\n\t\tconst startPath = options.startPath;\n\t\tconst parseUrl = (url: string): URI => {\n\t\t\t// This might be a fully-specified URL or just a path.\n\t\t\ttry {\n\t\t\t\treturn URI.parse(url, true);\n\t\t\t} catch (error) {\n\t\t\t\treturn URI.from({\n\t\t\t\t\tscheme: Schemas.vscodeRemote,\n\t\t\t\t\tauthority: options.remoteAuthority,\n\t\t\t\t\tpath: url,\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\treturn {\n\t\t\tworkbenchWebConfiguration: {\n\t\t\t\tworkspaceUri: startPath && startPath.workspace ? parseUrl(startPath.url) : undefined,\n\t\t\t\tfolderUri: startPath && !startPath.workspace ? parseUrl(startPath.url) : undefined,\n\t\t\t\tremoteAuthority: options.remoteAuthority,\n\t\t\t\tlogLevel: getLogLevel(environment),\n\t\t\t\tworkspaceProvider: {\n\t\t\t\t\tpayload: [\n\t\t\t\t\t\t[\"userDataPath\", environment.userDataPath],\n\t\t\t\t\t\t[\"enableProposedApi\", JSON.stringify(options.args[\"enable-proposed-api\"] || [])]\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t},\n\t\t\tremoteUserDataUri: transformer.transformOutgoing(URI.file(environment.userDataPath)),\n\t\t\tproductConfiguration: product,\n\t\t\tnlsConfiguration: await getNlsConfiguration(environment.args.locale || await getLocaleFromConfig(environment.userDataPath), environment.userDataPath),\n\t\t\tcommit: product.commit || 'development',\n\t\t};\n\t}\n\n\tpublic async handleWebSocket(socket: net.Socket, query: Query): Promise<true> {\n\t\tif (!query.reconnectionToken) {\n\t\t\tthrow new Error('Reconnection token is missing from query parameters');\n\t\t}\n\t\tconst protocol = new Protocol(socket, {\n\t\t\treconnectionToken: <string>query.reconnectionToken,\n\t\t\treconnection: query.reconnection === 'true',\n\t\t\tskipWebSocketFrames: query.skipWebSocketFrames === 'true',\n\t\t});\n\t\ttry {\n\t\t\tawait this.connect(await protocol.handshake(), protocol);\n\t\t} catch (error) {\n\t\t\tprotocol.sendMessage({ type: 'error', reason: error.message });\n\t\t\tprotocol.dispose();\n\t\t\tprotocol.getSocket().dispose();\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate async connect(message: ConnectionTypeRequest, protocol: Protocol): Promise<void> {\n\t\tif (product.commit && message.commit !== product.commit) {\n\t\t\tlogger.warn(`Version mismatch (${message.commit} instead of ${product.commit})`);\n\t\t}\n\n\t\tswitch (message.desiredConnectionType) {\n\t\t\tcase ConnectionType.ExtensionHost:\n\t\t\tcase ConnectionType.Management:\n\t\t\t\tif (!this.connections.has(message.desiredConnectionType)) {\n\t\t\t\t\tthis.connections.set(message.desiredConnectionType, new Map());\n\t\t\t\t}\n\t\t\t\tconst connections = this.connections.get(message.desiredConnectionType)!;\n\n\t\t\t\tconst ok = async () => {\n\t\t\t\t\treturn message.desiredConnectionType === ConnectionType.ExtensionHost\n\t\t\t\t\t\t? { debugPort: await this.getDebugPort() }\n\t\t\t\t\t\t: { type: 'ok' };\n\t\t\t\t};\n\n\t\t\t\tconst token = protocol.options.reconnectionToken;\n\t\t\t\tif (protocol.options.reconnection && connections.has(token)) {\n\t\t\t\t\tprotocol.sendMessage(await ok());\n\t\t\t\t\tconst buffer = protocol.readEntireBuffer();\n\t\t\t\t\tprotocol.dispose();\n\t\t\t\t\treturn connections.get(token)!.reconnect(protocol.getSocket(), buffer);\n\t\t\t\t} else if (protocol.options.reconnection || connections.has(token)) {\n\t\t\t\t\tthrow new Error(protocol.options.reconnection\n\t\t\t\t\t\t? 'Unrecognized reconnection token'\n\t\t\t\t\t\t: 'Duplicate reconnection token'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tprotocol.sendMessage(await ok());\n\n\t\t\t\tlet connection: Connection;\n\t\t\t\tif (message.desiredConnectionType === ConnectionType.Management) {\n\t\t\t\t\tconnection = new ManagementConnection(protocol, token);\n\t\t\t\t\tthis._onDidClientConnect.fire({\n\t\t\t\t\t\tprotocol, onDidClientDisconnect: connection.onClose,\n\t\t\t\t\t});\n\t\t\t\t\t// TODO: Need a way to match clients with a connection. For now\n\t\t\t\t\t// dispose everything which only works because no extensions currently\n\t\t\t\t\t// utilize long-running proxies.\n\t\t\t\t\t(this.services.get(INodeProxyService) as NodeProxyService)._onUp.fire();\n\t\t\t\t\tconnection.onClose(() => (this.services.get(INodeProxyService) as NodeProxyService)._onDown.fire());\n\t\t\t\t} else {\n\t\t\t\t\tconst buffer = protocol.readEntireBuffer();\n\t\t\t\t\tconnection = new ExtensionHostConnection(\n\t\t\t\t\t\tmessage.args ? message.args.language : 'en',\n\t\t\t\t\t\tprotocol, buffer, token,\n\t\t\t\t\t\tthis.services.get(ILogService) as ILogService,\n\t\t\t\t\t\tthis.services.get(IEnvironmentService) as INativeEnvironmentService,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tconnections.set(token, connection);\n\t\t\t\tconnection.onClose(() => connections.delete(token));\n\t\t\t\tthis.disposeOldOfflineConnections(connections);\n\t\t\t\tbreak;\n\t\t\tcase ConnectionType.Tunnel: return protocol.tunnel();\n\t\t\tdefault: throw new Error('Unrecognized connection type');\n\t\t}\n\t}\n\n\tprivate disposeOldOfflineConnections(connections: Map<string, Connection>): void {\n\t\tconst offline = Array.from(connections.values())\n\t\t\t.filter((connection) => typeof connection.offline !== 'undefined');\n\t\tfor (let i = 0, max = offline.length - this.maxExtraOfflineConnections; i < max; ++i) {\n\t\t\toffline[i].dispose();\n\t\t}\n\t}\n\n\tprivate async initializeServices(args: ParsedArgs): Promise<void> {\n\t\tconst environmentService = new EnvironmentService(args, process.execPath);\n\t\t// https://github.com/cdr/code-server/issues/1693\n\t\tfs.mkdirSync(environmentService.globalStorageHome.fsPath, { recursive: true });\n\n\t\tconst logService = new SpdLogService(RemoteExtensionLogFileName, environmentService.logsPath, getLogLevel(environmentService));\n\t\tconst fileService = new FileService(logService);\n\t\tfileService.registerProvider(Schemas.file, new DiskFileSystemProvider(logService));\n\n\t\tconst piiPaths = [\n\t\t\tpath.join(environmentService.userDataPath, 'clp'), // Language packs.\n\t\t\tenvironmentService.appRoot,\n\t\t\tenvironmentService.extensionsPath,\n\t\t\tenvironmentService.builtinExtensionsPath,\n\t\t\t...environmentService.extraExtensionPaths,\n\t\t\t...environmentService.extraBuiltinExtensionPaths,\n\t\t];\n\n\t\tthis.ipc.registerChannel('logger', new LoggerChannel(logService));\n\t\tthis.ipc.registerChannel(ExtensionHostDebugBroadcastChannel.ChannelName, new ExtensionHostDebugBroadcastChannel());\n\n\t\tthis.services.set(ILogService, logService);\n\t\tthis.services.set(IEnvironmentService, environmentService);\n\n\t\tconst configurationService = new ConfigurationService(environmentService.settingsResource, fileService);\n\t\tawait configurationService.initialize();\n\t\tthis.services.set(IConfigurationService, configurationService);\n\n\t\tthis.services.set(IRequestService, new SyncDescriptor(RequestService));\n\t\tthis.services.set(IFileService, fileService);\n\t\tthis.services.set(IProductService, { _serviceBrand: undefined, ...product });\n\t\tthis.services.set(IExtensionGalleryService, new SyncDescriptor(ExtensionGalleryService));\n\t\tthis.services.set(IExtensionManagementService, new SyncDescriptor(ExtensionManagementService));\n\n\t\tif (!environmentService.disableTelemetry) {\n\t\t\tthis.services.set(ITelemetryService, new TelemetryService({\n\t\t\t\tappender: combinedAppender(\n\t\t\t\t\tnew AppInsightsAppender('code-server', null, () => new TelemetryClient() as any, logService),\n\t\t\t\t\tnew LogAppender(logService),\n\t\t\t\t),\n\t\t\t\tsendErrorTelemetry: true,\n\t\t\t\tcommonProperties: resolveCommonProperties(\n\t\t\t\t\tproduct.commit, product.version, await getMachineId(),\n\t\t\t\t\t[], environmentService.installSourcePath, 'code-server',\n\t\t\t\t),\n\t\t\t\tpiiPaths,\n\t\t\t}, configurationService));\n\t\t} else {\n\t\t\tthis.services.set(ITelemetryService, NullTelemetryService);\n\t\t}\n\n\t\tawait new Promise((resolve) => {\n\t\t\tconst instantiationService = new InstantiationService(this.services);\n\t\t\tthis.services.set(ILocalizationsService, instantiationService.createInstance(LocalizationsService));\n\t\t\tthis.services.set(INodeProxyService, instantiationService.createInstance(NodeProxyService));\n\n\t\t\tinstantiationService.invokeFunction(() => {\n\t\t\t\tinstantiationService.createInstance(LogsDataCleaner);\n\t\t\t\tconst telemetryService = this.services.get(ITelemetryService) as ITelemetryService;\n\t\t\t\tthis.ipc.registerChannel('extensions', new ExtensionManagementChannel(\n\t\t\t\t\tthis.services.get(IExtensionManagementService) as IExtensionManagementService,\n\t\t\t\t\t(context) => getUriTransformer(context.remoteAuthority),\n\t\t\t\t));\n\t\t\t\tthis.ipc.registerChannel('remoteextensionsenvironment', new ExtensionEnvironmentChannel(\n\t\t\t\t\tenvironmentService, logService, telemetryService, '',\n\t\t\t\t));\n\t\t\t\tthis.ipc.registerChannel('request', new RequestChannel(this.services.get(IRequestService) as IRequestService));\n\t\t\t\tthis.ipc.registerChannel('telemetry', new TelemetryChannel(telemetryService));\n\t\t\t\tthis.ipc.registerChannel('nodeProxy', new NodeProxyChannel(this.services.get(INodeProxyService) as INodeProxyService));\n\t\t\t\tthis.ipc.registerChannel('localizations', <IServerChannel<any>>createChannelReceiver(this.services.get(ILocalizationsService) as ILocalizationsService));\n\t\t\t\tthis.ipc.registerChannel(REMOTE_FILE_SYSTEM_CHANNEL_NAME, new FileProviderChannel(environmentService, logService));\n\t\t\t\tresolve(new ErrorTelemetry(telemetryService));\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * TODO: implement.\n\t */\n\tprivate async getDebugPort(): Promise<number | undefined> {\n\t\treturn undefined;\n\t}\n}\n","import { field } from '@coder/logger';\nimport { setUnexpectedErrorHandler } from 'vs/base/common/errors';\nimport { CodeServerMessage, VscodeMessage } from 'vs/server/ipc';\nimport { logger } from 'vs/server/node/logger';\nimport { enableCustomMarketplace } from 'vs/server/node/marketplace';\nimport { Vscode } from 'vs/server/node/server';\n\nsetUnexpectedErrorHandler((error) => logger.warn(error instanceof Error ? error.message : error));\nenableCustomMarketplace();\n\n/**\n * Ensure we control when the process exits.\n */\nconst exit = process.exit;\nprocess.exit = function(code?: number) {\n\tlogger.warn(`process.exit() was prevented: ${code || 'unknown code'}.`);\n} as (code?: number) => never;\n\n// Kill VS Code if the parent process dies.\nif (typeof process.env.CODE_SERVER_PARENT_PID !== 'undefined') {\n\tconst parentPid = parseInt(process.env.CODE_SERVER_PARENT_PID, 10);\n\tsetInterval(() => {\n\t\ttry {\n\t\t\tprocess.kill(parentPid, 0); // Throws an exception if the process doesn't exist anymore.\n\t\t} catch (e) {\n\t\t\texit();\n\t\t}\n\t}, 5000);\n} else {\n\tlogger.error('no parent process');\n\texit(1);\n}\n\nconst vscode = new Vscode();\nconst send = (message: VscodeMessage): void => {\n\tif (!process.send) {\n\t\tthrow new Error('not spawned with IPC');\n\t}\n\tprocess.send(message);\n};\n\n// Wait for the init message then start up VS Code. Subsequent messages will\n// return new workbench options without starting a new instance.\nprocess.on('message', async (message: CodeServerMessage, socket) => {\n\tlogger.debug('got message from code-server', field('message', message));\n\tswitch (message.type) {\n\t\tcase 'init':\n\t\t\ttry {\n\t\t\t\tconst options = await vscode.initialize(message.options);\n\t\t\t\tsend({ type: 'options', id: message.id, options });\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error.message);\n\t\t\t\tlogger.error(error.stack);\n\t\t\t\texit(1);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'cli':\n\t\t\ttry {\n\t\t\t\tawait vscode.cli(message.args);\n\t\t\t\texit(0);\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error.message);\n\t\t\t\tlogger.error(error.stack);\n\t\t\t\texit(1);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'socket':\n\t\t\tvscode.handleWebSocket(socket, message.query);\n\t\t\tbreak;\n\t}\n});\nif (!process.send) {\n\tlogger.error('not spawned with IPC');\n\texit(1);\n} else {\n\t// This lets the parent know the child is ready to receive messages.\n\tsend({ type: 'ready' });\n}\n"]}